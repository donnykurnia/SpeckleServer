{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/ProjectDetailStreams.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/ProjectDetailStreams.vue","mtime":1609071089412},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport debounce from 'lodash.debounce'\nimport StreamCardSmall from './StreamCardSmall.vue'\nimport StreamSearch from './StreamSearch.vue'\n\nexport default {\n  name: 'ProjectStreams',\n  components: {\n    StreamCardSmall,\n    StreamSearch\n  },\n  props: {\n    project: Object,\n  },\n  computed: {\n    streams( ) { return this.project.streams ? this.project.streams : [ ] },\n    populatedStreams( ) {\n      return this.$store.state.streams.filter( stream => this.streams.indexOf( stream.streamId ) !== -1 )\n    },\n    canEdit( ) {\n      return this.project.owner === this.$store.state.user._id || this.project.canWrite.indexOf( this.$store.state.user._id ) > -1 || this.$store.state.user.role === 'admin'\n    },\n  },\n  watch: {},\n  data( ) {\n    return {}\n  },\n  methods: {\n    selectStream( streamId ) {\n      // just bubble it up\n      this.$emit( 'selected-stream', streamId )\n    },\n    removeStream( streamId ) {\n      // just bubble it up\n      this.$emit( 'remove-stream', streamId )\n    }\n  }\n}\n\n",{"version":3,"sources":["ProjectDetailStreams.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ProjectDetailStreams.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-card class='elevation-0'>\n    <stream-search :streams-to-omit='streams' write-only v-on:selected-stream='selectStream' v-if='canEdit'></stream-search>\n    <v-card-text class='md-layout-item md-size-100' v-if='streams.length === 0'>\n      <p v-if='canEdit'>This project has no streams. Add some using the form above!</p>\n      <p v-else>This project has no streams.</p>\n    </v-card-text>\n    <v-card-text v-else class='pa-0'>\n      <v-list two-line>\n        <v-list-tile v-for='stream in populatedStreams' :key='stream.streamId'>\n          <v-list-tile-content>\n            <v-list-tile-title>\n              <span class='caption'>\n                <v-icon small>fingerprint</v-icon> {{stream.streamId}}\n                &nbsp;<v-icon small>{{stream.private ? \"lock\" : \"lock_open\"}}</v-icon>\n              </span>&nbsp;\n              <span class='text-capitalize'>{{stream.name}}</span>&nbsp;<router-link :to='\"/streams/\" + stream.streamId'><v-icon small>open_in_new</v-icon></router-link>\n            </v-list-tile-title>\n            <v-list-tile-sub-title class='xxx-font-weight-thin caption'>\n              last changed <timeago :datetime='stream.updatedAt'></timeago>, created on {{new Date( stream.createdAt ).toLocaleString()}}\n            </v-list-tile-sub-title>\n          </v-list-tile-content>\n          <v-list-tile-action>\n            <v-btn :disabled='!canEdit' small icon @click.stop.native='removeStream(stream.streamId)'><v-icon>close</v-icon></v-btn>\n          </v-list-tile-action>\n        </v-list-tile>\n      </v-list>\n      </v-list>\n      <!-- <stream-card-small v-for='stream in streams' :key='stream' :streamId='stream' v-on:remove-stream='removeStream' :removable='canEdit'></stream-card-small> -->\n    </v-card-text>\n  </v-card>\n</template>\n<script>\nimport debounce from 'lodash.debounce'\nimport StreamCardSmall from './StreamCardSmall.vue'\nimport StreamSearch from './StreamSearch.vue'\n\nexport default {\n  name: 'ProjectStreams',\n  components: {\n    StreamCardSmall,\n    StreamSearch\n  },\n  props: {\n    project: Object,\n  },\n  computed: {\n    streams( ) { return this.project.streams ? this.project.streams : [ ] },\n    populatedStreams( ) {\n      return this.$store.state.streams.filter( stream => this.streams.indexOf( stream.streamId ) !== -1 )\n    },\n    canEdit( ) {\n      return this.project.owner === this.$store.state.user._id || this.project.canWrite.indexOf( this.$store.state.user._id ) > -1 || this.$store.state.user.role === 'admin'\n    },\n  },\n  watch: {},\n  data( ) {\n    return {}\n  },\n  methods: {\n    selectStream( streamId ) {\n      // just bubble it up\n      this.$emit( 'selected-stream', streamId )\n    },\n    removeStream( streamId ) {\n      // just bubble it up\n      this.$emit( 'remove-stream', streamId )\n    }\n  }\n}\n\n</script>\n<style scoped lang='scss'>\n</style>\n"]}]}