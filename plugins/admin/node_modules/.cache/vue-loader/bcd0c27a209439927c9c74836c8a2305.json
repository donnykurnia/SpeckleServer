{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/views/Signin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/views/Signin.vue","mtime":1609071089433},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Axios from 'axios'\n\nexport default {\n  name: 'SigninView',\n  components: {},\n  computed: {},\n  watch: {},\n  data( ) {\n    return {\n      server: null,\n      errorMessage: null,\n      showError: false,\n      servers: [ ]\n    }\n  },\n  methods: {\n    prevAccountClick( serverUrl ) {\n      this.server = serverUrl\n      this.login( )\n    },\n    login( ) {\n      this.showError = false\n      let url = null\n      try {\n        url = new URL( this.server )\n        let originUrl = new URL( window.location.href )\n        localStorage.setItem( '__tempServer', url.origin )\n        window.open( `${url.origin}/signin?redirectUrl=${ window.encodeURIComponent( location.origin +'/#/signin/callback') }`, 'login screen', 'height=700,width=800' )\n      } catch ( err ) {\n        this.errorMessage = err.message\n        this.showError = true\n      }\n    },\n    checkExistingServers( ) {\n      let usedServers = localStorage.getItem( 'allSpeckleServers' ) ? localStorage.getItem( 'allSpeckleServers' ).split( ',' ) : null\n      let promises = usedServers.map( s => {\n        Axios.get( s )\n          .then( res => {\n            this.servers.push( { url: s, name: res.data.serverName, version: res.data.version } )\n          } )\n          .catch( err => {\n            this.servers.push( { url: s, name: 'Server Unreachable', version: 'n/a' } )\n          } )\n      } )\n      let servers = [ ]\n\n    },\n    checkRedirect( ) {\n      //TODO\n    }\n  },\n  activated( ) {\n    this.checkExistingServers( )\n  },\n  mounted( ) {\n    this.checkExistingServers( )\n    this.checkRedirect( )\n\n    if ( !window.location.href.includes( 'speckle.systems' ) ) {\n      this.server = new URL( window.location.href ).origin\n    }\n\n    if ( this.$store.state.isAuth === true ) {\n      this.appendInfoToUrl( 'server', { apiUrl: this.$store.state.server } )\n      this.$router.push( '/' )\n    }\n  }\n}\n\n",{"version":3,"sources":["Signin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Signin.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-container fluid fill-height>\n    <v-layout xx-align-center justify-center>\n      <v-flex xs11 md6 lg6>\n        <form @submit.prevent='login' v-if='$store.state.isAuth === false'>\n          <v-card class=\"elevation-3\">\n            <v-toolbar dense class='title small text-uppercase elevation-0' v-if='servers.length!==0'>\n              <v-icon small>account_circle</v-icon>&nbsp;&nbsp;<span class='font-weight-light'>Previously used servers</span>\n            </v-toolbar>\n            <v-card-text v-if='servers.length!==0'>\n              <!-- <p class='pl-3'><small>Previously used accounts:</small></p> -->\n              <v-list two-line>\n                <v-list-tile v-for='server in servers' :key='server.url' @click='prevAccountClick(server.url)' class='elevation-0 my-3'>\n                  <v-list-tile-content>\n                    <v-list-tile-title><b>{{server.name}}</b></v-list-tile-title>\n                    <v-list-tile-sub-title>{{server.url}} <small>({{server.version}})</small></v-list-tile-sub-title>\n                  </v-list-tile-content>\n                  <v-list-tile-action>\n                    <v-btn color=\"primary\" fab small dark>\n                      <v-icon>arrow_right_alt</v-icon>\n                    </v-btn>\n                  </v-list-tile-action>\n                </v-list-tile>\n              </v-list>\n              <!-- {{servers}} -->\n              <!-- {{localStorage}} -->\n            </v-card-text>\n            <v-toolbar dense class='title small text-uppercase elevation-0'>\n              <v-icon small>group_add</v-icon>&nbsp;&nbsp;<span class='font-weight-light'>Sign in</span>\n            </v-toolbar>\n            <v-card-text>\n              <p class='pl-3'>Login or register to a new server by inputting its url below:</p>\n              <v-list two-line>\n                <v-list-tile>\n                  <v-list-tile-content>\n                    <v-text-field style='width: 90%' xxx-prepend-inner-icon='developer_board' hint='server url' type=\"url\" v-model='server' name='server' label='server url' placeholder='https://speckle.yourdomain.com'></v-text-field>\n                  </v-list-tile-content>\n                  <v-list-tile-action>\n                    <v-btn color=\"black\" fab small dark type=\"submit\" @click='login()'>\n                      <v-icon>arrow_right_alt</v-icon>\n                    </v-btn>\n                  </v-list-tile-action>\n                </v-list-tile>\n              </v-list>\n            </v-card-text>\n            <v-card-actions>\n            </v-card-actions>\n            <v-alert v-model=\"showError\" type=\"warning\" dismissible>\n              {{errorMessage}}\n            </v-alert>\n          </v-card>\n        </form>\n        <v-card v-else>\n          <v-card-text>You are already logged in.</v-card-text>\n        </v-card>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n<script>\nimport Axios from 'axios'\n\nexport default {\n  name: 'SigninView',\n  components: {},\n  computed: {},\n  watch: {},\n  data( ) {\n    return {\n      server: null,\n      errorMessage: null,\n      showError: false,\n      servers: [ ]\n    }\n  },\n  methods: {\n    prevAccountClick( serverUrl ) {\n      this.server = serverUrl\n      this.login( )\n    },\n    login( ) {\n      this.showError = false\n      let url = null\n      try {\n        url = new URL( this.server )\n        let originUrl = new URL( window.location.href )\n        localStorage.setItem( '__tempServer', url.origin )\n        window.open( `${url.origin}/signin?redirectUrl=${ window.encodeURIComponent( location.origin +'/#/signin/callback') }`, 'login screen', 'height=700,width=800' )\n      } catch ( err ) {\n        this.errorMessage = err.message\n        this.showError = true\n      }\n    },\n    checkExistingServers( ) {\n      let usedServers = localStorage.getItem( 'allSpeckleServers' ) ? localStorage.getItem( 'allSpeckleServers' ).split( ',' ) : null\n      let promises = usedServers.map( s => {\n        Axios.get( s )\n          .then( res => {\n            this.servers.push( { url: s, name: res.data.serverName, version: res.data.version } )\n          } )\n          .catch( err => {\n            this.servers.push( { url: s, name: 'Server Unreachable', version: 'n/a' } )\n          } )\n      } )\n      let servers = [ ]\n\n    },\n    checkRedirect( ) {\n      //TODO\n    }\n  },\n  activated( ) {\n    this.checkExistingServers( )\n  },\n  mounted( ) {\n    this.checkExistingServers( )\n    this.checkRedirect( )\n\n    if ( !window.location.href.includes( 'speckle.systems' ) ) {\n      this.server = new URL( window.location.href ).origin\n    }\n\n    if ( this.$store.state.isAuth === true ) {\n      this.appendInfoToUrl( 'server', { apiUrl: this.$store.state.server } )\n      this.$router.push( '/' )\n    }\n  }\n}\n\n</script>\n<style scoped lang='scss'>\n</style>\n"]}]}