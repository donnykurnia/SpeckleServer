{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/App.vue","mtime":1609071089404},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport NavDrawer from './components/NavDrawer.vue'\n\nexport default {\n  name: 'MainApp',\n  components: {\n    NavDrawer\n  },\n  data: _ => ( {\n    drawer: true,\n    dark: false,\n    viewerControls: true,\n    isFullScreen: false\n  } ),\n  methods: {\n    toggleDark( ) {\n      this.dark = !this.dark\n      localStorage.setItem( 'dark', this.dark )\n    },\n    logout( ) {\n      this.$store.dispatch( 'logout' )\n      this.$router.push( '/signin' )\n    },\n    toggleControlsViewer( ) {\n      this.$store.commit( 'TOGGLE_VIEWER_CONTROLS' )\n    },\n    fullscreen( ) {\n      if ( document.fullscreenElement ) {\n        document.exitFullscreen()\n        this.isFullScreen = false\n        return\n      }\n\n      let element = document.documentElement\n      this.isFullScreen = true\n      if ( element.requestFullscreen ) {\n        element.requestFullscreen( );\n      } else if ( element.mozRequestFullScreen ) {\n        element.mozRequestFullScreen( );\n      } else if ( element.webkitRequestFullscreen ) {\n        element.webkitRequestFullscreen( );\n      } else if ( element.msRequestFullscreen ) {\n        element.msRequestFullscreen( );\n      }\n    }\n  },\n  created( ) {\n    if ( this.$store.state.isAuth ) {\n      this.$store.dispatch( 'getStreams', 'omit=objects,layers&isComputedResult=false&sort=updatedAt' )\n      this.$store.dispatch( 'getProjects' )\n      this.$store.dispatch( 'getProcessors' )\n      this.$store.dispatch( 'createClient' )\n    }\n    if ( localStorage.getItem( 'dark' ) === 'true' ) {\n      this.dark = true\n      this.$store.commit( 'SET_DARK', true )\n    }\n\n    this.$store.dispatch( 'loadLambdas' )\n  },\n  updated( ) {\n    // let overlay = document.getElementsByClassName( \"md-overlay\" )[ 0 ]\n    // if ( !overlay ) return\n    // overlay.onclick = ( function ( ) {\n    //   this.showSidebar = false\n    // } ).bind( this )\n  }\n\n}\n\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app :dark='$store.state.dark'>\n    <v-navigation-drawer fixed app clipped xxxclass='elevation-5' v-model='drawer'>\n      <nav-drawer></nav-drawer>\n    </v-navigation-drawer>\n    <v-toolbar fixed app clipped-left clipped-right xxxstyle='z-index: 100000'>\n      <v-toolbar-side-icon @click.stop=\"drawer = !drawer\"></v-toolbar-side-icon>\n      <v-toolbar-title class='text-uppercase font-weight-light'>{{$route.name}}</v-toolbar-title>\n      <v-spacer></v-spacer>\n      <v-btn flat fab small color='' @click.native='fullscreen'>\n        <v-icon>{{isFullScreen ? \"fullscreen_exit\" :\"fullscreen\"}}</v-icon>\n      </v-btn>\n      <div v-if='$route.path.includes(\"view\")' class='mt-1'>\n        <v-btn fab small color='primary' @click.native='toggleControlsViewer'>\n          <v-icon>{{$store.state.viewerControls ? \"close\" :\"3d_rotation\"}}</v-icon>\n        </v-btn>\n      </div>\n    </v-toolbar>\n    <v-content>\n      <keep-alive exclude='StreamDetailView,SigninViewCallback,SigninView'>\n        <router-view></router-view>\n      </keep-alive>\n    </v-content>\n  </v-app>\n</template>\n<script>\nimport NavDrawer from './components/NavDrawer.vue'\n\nexport default {\n  name: 'MainApp',\n  components: {\n    NavDrawer\n  },\n  data: _ => ( {\n    drawer: true,\n    dark: false,\n    viewerControls: true,\n    isFullScreen: false\n  } ),\n  methods: {\n    toggleDark( ) {\n      this.dark = !this.dark\n      localStorage.setItem( 'dark', this.dark )\n    },\n    logout( ) {\n      this.$store.dispatch( 'logout' )\n      this.$router.push( '/signin' )\n    },\n    toggleControlsViewer( ) {\n      this.$store.commit( 'TOGGLE_VIEWER_CONTROLS' )\n    },\n    fullscreen( ) {\n      if ( document.fullscreenElement ) {\n        document.exitFullscreen()\n        this.isFullScreen = false\n        return\n      }\n\n      let element = document.documentElement\n      this.isFullScreen = true\n      if ( element.requestFullscreen ) {\n        element.requestFullscreen( );\n      } else if ( element.mozRequestFullScreen ) {\n        element.mozRequestFullScreen( );\n      } else if ( element.webkitRequestFullscreen ) {\n        element.webkitRequestFullscreen( );\n      } else if ( element.msRequestFullscreen ) {\n        element.msRequestFullscreen( );\n      }\n    }\n  },\n  created( ) {\n    if ( this.$store.state.isAuth ) {\n      this.$store.dispatch( 'getStreams', 'omit=objects,layers&isComputedResult=false&sort=updatedAt' )\n      this.$store.dispatch( 'getProjects' )\n      this.$store.dispatch( 'getProcessors' )\n      this.$store.dispatch( 'createClient' )\n    }\n    if ( localStorage.getItem( 'dark' ) === 'true' ) {\n      this.dark = true\n      this.$store.commit( 'SET_DARK', true )\n    }\n\n    this.$store.dispatch( 'loadLambdas' )\n  },\n  updated( ) {\n    // let overlay = document.getElementsByClassName( \"md-overlay\" )[ 0 ]\n    // if ( !overlay ) return\n    // overlay.onclick = ( function ( ) {\n    //   this.showSidebar = false\n    // } ).bind( this )\n  }\n\n}\n\n</script>\n<style lang='scss'>\n.super-bg {\n  background: #448aff;\n  /* fallback for old browsers */\n  background: -webkit-linear-gradient(to right, #448aff, #396afc);\n  /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(to right, #448aff, #396afc);\n  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n}\n\n.other-bg {\n  background: #0052D4;\n  /* fallback for old browsers */\n  background: -webkit-linear-gradient(to right, #6FB1FC, #4364F7, #0052D4);\n  /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(to right, #6FB1FC, #4364F7, #0052D4);\n  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n}\n\n.royal-bg {\n  background: #536976;\n  /* fallback for old browsers */\n  background: -webkit-linear-gradient(to right, #292E49, #536976);\n  /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(to right, #292E49, #536976);\n  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n}\n\n.light-bg {\n  background: #56CCF2;\n  /* fallback for old browsers */\n  background: -webkit-linear-gradient(to right, #2F80ED, #56CCF2);\n  /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(to right, #2F80ED, #56CCF2);\n  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity .5s;\n}\n\n.fade-enter,\n.fade-leave-to {\n  opacity: 0;\n}\n\n.no-scroll {\n  overflow: hidden !important;\n}\n\n</style>\n"]}]}