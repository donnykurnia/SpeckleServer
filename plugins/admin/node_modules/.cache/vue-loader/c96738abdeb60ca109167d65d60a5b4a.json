{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/StreamCardSmall.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/StreamCardSmall.vue","mtime":1609071089414},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'StreamCardSmall',\n  props: {\n    streamId: String,\n    removable: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    stream( ) {\n      let stream = this.$store.state.streams.find( s => s.streamId === this.streamId )\n      if ( !stream ) this.$store.dispatch( 'getStream', { streamId: this.streamId } )\n      return stream\n    }\n  },\n  data( ) { return {} },\n  methods: {}\n}\n\n",{"version":3,"sources":["StreamCardSmall.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StreamCardSmall.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <md-card class='md-elevation-0' style='margin-bottom: 5px;' v-if='stream'>\n    <md-card-content class='md-layout md-gutter md-alignment-center-left'>\n      <div class=\"md-layout-item md-size-30\">\n        <router-link :to='\"/streams/\"+stream.streamId'>{{stream.name}}</router-link>\n      </div>\n      <div class=\"md-layout-item md-caption\">\n        <span v-if='stream.commitMessage'> {{stream.commitMessage}}</span>\n      </div>\n      <div class=\"md-layout-item md-caption text-right\">\n        {{stream.streamId}} | last update <strong><timeago :datetime='stream.updatedAt'></timeago></strong>\n      </div>\n      <div class=\"md-layout-item text-right\" v-if='removable'>\n        <md-button class='md-dense-xxx md-icon-button md-accent' @click.native='$emit(\"remove-stream\", streamId)'>\n          <md-icon>delete</md-icon>\n        </md-button>\n      </div>\n    </md-card-content>\n  </md-card>\n</template>\n<script>\nexport default {\n  name: 'StreamCardSmall',\n  props: {\n    streamId: String,\n    removable: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    stream( ) {\n      let stream = this.$store.state.streams.find( s => s.streamId === this.streamId )\n      if ( !stream ) this.$store.dispatch( 'getStream', { streamId: this.streamId } )\n      return stream\n    }\n  },\n  data( ) { return {} },\n  methods: {}\n}\n\n</script>\n<style scoped lang='scss'>\n</style>\n"]}]}