{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/store/lambda/component/arupCompute.vue?vue&type=template&id=6d154f9e&scoped=true&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/store/lambda/component/arupCompute.vue","mtime":1609071089425},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<v-layout row wrap>\n  <v-flex xs12>\n    <v-autocomplete\n      return-object\n      :items=\"libraries\"\n      item-text=\"name\"\n      item-value=\"api\"\n      v-model=\"params.selectedLibrary\"\n      v-on:input=\"selectLibrary\"\n      :loading=\"libraries.length === 0\"\n      label=\"Select a library\">\n      <template slot=\"item\" slot-scope=\"libraries\">\n        <div>\n          {{libraries.item.name}}\n          <br>\n          <span class=\"caption\">\n            {{libraries.item.api}}\n          </span>\n        </div>\n      </template>\n    </v-autocomplete>\n  </v-flex>\n\n  <v-flex xs12 v-if=\"params.selectedLibrary\">\n    <v-autocomplete\n      return-object\n      :items=\"functions\"\n      item-text=\"name\"\n      item-value=\"api\"\n      v-model=\"params.selectedFunction\"\n      v-on:input=\"selectFunction\"\n      :loading=\"functions.length === 0\"\n      label=\"Select a function\">\n      <template slot=\"item\" slot-scope=\"functions\">\n        <div>\n          {{functions.item.name}}\n          <br>\n          <span class=\"caption\">\n            {{functions.item.api}}\n          </span>\n        </div>\n      </template>\n    </v-autocomplete>\n  </v-flex>\n\n  <v-flex mt-0 v-if=\"params.selectedLibrary && params.selectedFunction && functions.length > 0\" xs12>\n    <v-card>\n      <v-card-title>\n        <span class='font-weight-light'>\n          Inputs\n        </span>\n      </v-card-title>\n      <v-divider/>\n      <v-layout row wrap pa-3>\n        <v-flex xs12 sm6 md3 v-for='input in params.selectedFunction.inputs' :key='input.name'>\n          <v-tooltip bottom>\n            <template v-slot:activator=\"{ on }\">\n              <div v-on=\"on\" ma-0 pa-0>\n                <v-autocomplete\n                  v-if=\"(input.values || input.type === 'System.Boolean') && isInputByValue(input.name)\"\n                  :items=\"input.values ? input.values : [true, false]\"\n                  :label='input.name'\n                  v-model='inputs[input.name]'\n                  :append-icon=\"isInputByValue(input.name) ? 'edit' : 'input'\"\n                  :hint=\"isInputByValue(input.name) ? 'Input by value' : 'Input by object path'\"\n                  :persistent-hint=\"true\"\n                  :error-messages=\"!input.isOptional && (!inputs.hasOwnProperty(input.name) || inputs[input.name] === null) ? ['Input required'] : ''\"\n                  @click:append=\"toggleInputSource({name: input.name, value: $event})\"\n                  @change=\"updateInput({name: input.name, value: $event})\">\n                </v-autocomplete> \n                <v-text-field\n                  v-else\n                  :label='input.name'\n                  v-model='inputs[input.name]'\n                  :append-icon=\"isInputByValue(input.name) ? 'edit' : 'input'\"\n                  :hint=\"isInputByValue(input.name) ? 'Input by value' : 'Input by object path'\"\n                  :persistent-hint=\"true\"\n                  :error-messages=\"!input.isOptional && (!inputs.hasOwnProperty(input.name) || inputs[input.name] === null) ? 'Input required' : ''\"\n                  @click:append=\"toggleInputSource({name: input.name, value: $event})\"\n                  @change=\"updateInput({name: input.name, value: $event})\">\n                </v-text-field>\n              </div>\n            </template>\n            <div>\n              <span><b>Description:</b> {{input.description}}</span>\n              <br>\n              <span class=\"caption\"><b>Type:</b> {{input.type}}</span>\n            </div>\n          </v-tooltip>\n        </v-flex>\n      </v-layout>\n      <v-divider/>\n      <v-card-title>\n        <span class='font-weight-light'>\n          Output\n        </span>\n      </v-card-title>\n      <v-divider/>\n      <v-flex xs12>\n        <v-text-field \n          label='Output path'\n          v-model='params.outputPath'\n          hint=\"Object path to embed all results under\"\n          :persistent-hint=\"true\"\n          @change=\"$emit('update-param', params)\">\n        </v-text-field>\n      </v-flex>\n    </v-card>\n  </v-flex>\n\n</v-layout>\n",null]}