{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/StreamDetailUserPerms.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/StreamDetailUserPerms.vue","mtime":1609071089415},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport debounce from 'lodash.debounce'\nimport uniq from 'lodash.uniq'\nimport Axios from 'axios'\n\nimport UserSearch from './UserSearch.vue'\nimport PermissionTable from './PermissionTable.vue'\n\nexport default {\n  name: 'StreamDetailUserPerms',\n  components: {\n    UserSearch,\n    PermissionTable\n  },\n  props: {\n    stream: Object\n  },\n  computed: {\n    streamOwner( ) {\n      if ( this.isOwner ) return `${this.$store.state.user.name} ${this.$store.state.user.surname}`\n      let owner = this.$store.state.users.find( user => user._id === this.stream.owner )\n      if ( !owner ) return '(loading)'\n      return `${owner.name} ${owner.surname} ${owner.company ? \"(\" + owner.company + \")\" : ''}`\n    },\n    canEdit( ) {\n      if (this.$store.state.user.role == 'admin') return true\n      return this.isOwner ? true : this.stream.canWrite.indexOf( this.$store.state.user._id ) !== -1\n    },\n    isOwner( ) {\n      return this.stream.owner === this.$store.state.user._id\n    },\n    usersFromProjects( ) {\n      let otherProjects = this.$store.state.projects.filter( p => p.streams.indexOf( this.stream.streamId ) !== -1 )\n      let otherCanRead = Array.prototype.concat( ...otherProjects.map( op => op.permissions.canRead ) )\n      let otherCanWrite = Array.prototype.concat( ...otherProjects.map( op => op.permissions.canWrite ) )\n      return [ ...new Set( [ ...otherCanWrite, ...otherCanRead ] ) ]\n    },\n    streamProjects( ) {\n      return this.$store.state.projects.filter( p => p.streams.indexOf( this.stream.streamId ) !== -1 )\n    }\n\n  },\n  data( ) {\n    return {\n      userSearch: '',\n      foundUsers: [ ],\n      searchInProgress: false\n    }\n  },\n  methods: {\n    changeLinkSharing( ) {\n      this.$store.dispatch( 'updateStream', { streamId: this.stream.streamId, private: !this.stream.private } )\n    },\n    addUserToWrite( userId ) {\n      let canWrite = uniq( [ ...this.stream.canWrite, userId ] )\n      this.$store.dispatch( 'updateStream', { streamId: this.stream.streamId, canWrite: canWrite } )\n    },\n    updatePerms( { canRead, canWrite } ) {\n      this.$store.dispatch( 'updateStream', { streamId: this.stream.streamId, canRead: canRead, canWrite: canWrite } )\n    }\n  }\n}\n\n",{"version":3,"sources":["StreamDetailUserPerms.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StreamDetailUserPerms.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-card class='elevation-0'>\n    <v-toolbar class='elevation-0 transparent'>\n      <v-icon small left>share</v-icon>&nbsp;\n      <span class='title font-weight-light'>Link Sharing</span> &nbsp;\n    </v-toolbar>\n    <v-divider></v-divider>\n    <v-card-text class='mx-2'>\n      <v-btn depressed color='primary' @click.native='changeLinkSharing' :disabled='!canEdit'>{{stream.private ? \"OFF\" : \"ON\"}}</v-btn>\n      {{ stream.private ? \"Private resource. Only people with read or write persmissions can access it.\" : \"Public resource. Anyone with the id can access it.\"}}\n      <span class='' v-if='isOwner'>\n        You are the <strong>owner</strong> of this stream.\n      </span>\n      <span class='' v-else>\n        This stream was shared with you by <strong>{{streamOwner}}.</strong>\n      </span>\n    </v-card-text>\n    <!-- <v-divider></v-divider> -->\n    <v-toolbar class='elevation-0 transparent title font-weight-light'>\n      <v-icon small left>supervisor_account</v-icon>&nbsp;\n      <span class='title font-weight-light'>User Permissions</span> &nbsp;\n    </v-toolbar>\n    <v-card-text class='mx-2' v-if='streamProjects.length>0'>\n      <span>Some users might be disabled as their permissions are set through the following projects: <router-link v-for='(proj, index) in streamProjects' :to='\"/projects/\"+proj._id' :key='proj._id'>{{proj.name}}<span v-if='index<streamProjects.length-1'>, </span></router-link></span>\n    </v-card-text>\n    <v-card-text class='mx-2' v-if='!canEdit'>\n      You cannot edit the permissions of this stream.\n    </v-card-text>\n    <v-divider></v-divider>\n    <v-card-text class='' v-if='canEdit'>\n      <user-search v-on:selected-user='addUserToWrite'></user-search>\n      <permission-table :resource='stream' :disabled-users='usersFromProjects' :global-disabled='!canEdit' v-on:update-table='updatePerms'></permission-table>\n    </v-card-text>\n  </v-card>\n</template>\n<script>\nimport debounce from 'lodash.debounce'\nimport uniq from 'lodash.uniq'\nimport Axios from 'axios'\n\nimport UserSearch from './UserSearch.vue'\nimport PermissionTable from './PermissionTable.vue'\n\nexport default {\n  name: 'StreamDetailUserPerms',\n  components: {\n    UserSearch,\n    PermissionTable\n  },\n  props: {\n    stream: Object\n  },\n  computed: {\n    streamOwner( ) {\n      if ( this.isOwner ) return `${this.$store.state.user.name} ${this.$store.state.user.surname}`\n      let owner = this.$store.state.users.find( user => user._id === this.stream.owner )\n      if ( !owner ) return '(loading)'\n      return `${owner.name} ${owner.surname} ${owner.company ? \"(\" + owner.company + \")\" : ''}`\n    },\n    canEdit( ) {\n      if (this.$store.state.user.role == 'admin') return true\n      return this.isOwner ? true : this.stream.canWrite.indexOf( this.$store.state.user._id ) !== -1\n    },\n    isOwner( ) {\n      return this.stream.owner === this.$store.state.user._id\n    },\n    usersFromProjects( ) {\n      let otherProjects = this.$store.state.projects.filter( p => p.streams.indexOf( this.stream.streamId ) !== -1 )\n      let otherCanRead = Array.prototype.concat( ...otherProjects.map( op => op.permissions.canRead ) )\n      let otherCanWrite = Array.prototype.concat( ...otherProjects.map( op => op.permissions.canWrite ) )\n      return [ ...new Set( [ ...otherCanWrite, ...otherCanRead ] ) ]\n    },\n    streamProjects( ) {\n      return this.$store.state.projects.filter( p => p.streams.indexOf( this.stream.streamId ) !== -1 )\n    }\n\n  },\n  data( ) {\n    return {\n      userSearch: '',\n      foundUsers: [ ],\n      searchInProgress: false\n    }\n  },\n  methods: {\n    changeLinkSharing( ) {\n      this.$store.dispatch( 'updateStream', { streamId: this.stream.streamId, private: !this.stream.private } )\n    },\n    addUserToWrite( userId ) {\n      let canWrite = uniq( [ ...this.stream.canWrite, userId ] )\n      this.$store.dispatch( 'updateStream', { streamId: this.stream.streamId, canWrite: canWrite } )\n    },\n    updatePerms( { canRead, canWrite } ) {\n      this.$store.dispatch( 'updateStream', { streamId: this.stream.streamId, canRead: canRead, canWrite: canWrite } )\n    }\n  }\n}\n\n</script>\n<style scoped lang='scss'>\n</style>\n"]}]}