{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/views/Processors.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/views/Processors.vue","mtime":1609071089432},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport debounce from 'lodash.debounce'\nimport ProcessorCard from '../components/ProcessorCard.vue'\n\nexport default {\n  name: 'ProcessorView',\n  components: {\n    ProcessorCard\n  },\n  computed: {\n    processors( ) {\n      return this.$store.state.processors.filter( p => p.owner.indexOf(this.$store.state.user._id) !== -1)\n    },\n    filteredProcessors( ) {\n      if ( this.searchfilter && this.searchfilter !== '' )\n        return this.processors.filter( p => p.name.toLowerCase().includes( this.searchfilter.toLowerCase() ) )\n      return this.processors\n    },\n    paginatedProcessors( ) {\n      return this.filteredProcessors.slice( this.currentIndex + this.pageNumber * this.sliceSize, this.sliceSize * ( this.pageNumber + 1 ) )\n    }\n  },\n  data( ) {\n    return {\n      currentIndex: 0,\n      sliceSize: 6,\n      pageNumber: 0,\n      searchfilter: '',\n      selectedProcessors: [ ],\n      isSearching: false\n    }\n  },\n  methods: {\n    selectThis( processor ) {\n      let index = this.selectedProcessors.findIndex( p => p._id === processor._id )\n      if ( index === -1 )\n        this.selectedProcessors.unshift( processor )\n      else\n        this.selectedProcessors.splice( index, 1 )\n    },\n    selectAll( ) {\n      this.paginatedProcessors.forEach( processor => {\n        let index = this.selectedProcessors.findIndex( s => s._id === processor._id )\n        if ( index === -1 ) {\n          bus.$emit( 'select-processor', processor._id )\n        }\n      } )\n    },\n    createProcessor( ) {\n      this.$store.dispatch( 'createProcessor', { name: 'A brand new speckle processor' } )\n        .then( res => {\n          this.$router.push( `/processors/${res._id}` )\n        } )\n    },\n    deleteSelectedProcessors( ) {\n      this.selectedProcessors.forEach( processor => {\n        this.$store.dispatch( 'deleteProcessor', { _id: processor._id } )\n      } )\n      this.selectedProcessors.splice( 0, this.selectedProcessors.length )\n      this.clearSelection( )\n    },\n    clearSelection( ) {\n      bus.$emit( 'unselect-all-processors' )\n    },\n    updateSearch: debounce( function( e ) {\n      this.pageNumber = 0\n      this.isSearching = false\n      this.searchfilter = e\n    }, 1000 ),\n  }\n}\n\n",{"version":3,"sources":["Processors.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Processors.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-container grid-list-xl>\n    <!-- Toolbar for processor selection/bulk operations -->\n    <v-toolbar fixed v-if='selectedProcessors.length > 0' style='z-index:100'>\n      <v-toolbar-items>\n        <v-btn icon color='primary' class='md-raised md-dense md-primary' @click.native='clearSelection'>\n          <v-icon>close</v-icon>\n        </v-btn>\n        <v-btn flat @click.native='selectAll()'>select all</v-btn>\n      </v-toolbar-items>\n      <v-spacer></v-spacer>\n      <v-toolbar-items>\n        <v-btn flat color='error' @click.native='deleteSelectedProcessors'>Delete</v-btn>\n      </v-toolbar-items>\n    </v-toolbar>\n    <!-- End toolbar -->\n    <v-layout row wrap>\n      <v-flex xs12 py-5 class='headline font-weight-light'>\n        Processor allows you to run scripts on streams.\n      </v-flex>\n      <!-- Empty state handler -->\n      <v-flex xs12 v-if='processors.length === 0'>\n        <p class='title font-weight-light'>Hmm, you don't have any processors yet. Don't worry! You can create a new one here (big blue button in the lower right corner)!\n        </p>\n      </v-flex>\n      <v-flex xs12>\n        <v-text-field solo clearable label=\"Search for a processor\" prepend-inner-icon=\"search\" @input=\"updateSearch\" spellcheck=\"false\" v-model='searchfilter' :loading='isSearching' append-icon=\"refresh\" @click:append=\"$store.dispatch( 'getProcessors' )\"></v-text-field>\n        <div v-if='searchfilter && searchfilter!==\"\"'>\n          <p class='title font-weight-light my-3 mx-1'>Found {{filteredProcessors.length}} processor{{filteredProcessors.length===1?'':'s'}} matching your search criteria.</p>\n        </div>\n      </v-flex>\n    </v-layout>\n    <!-- All the processor cards will flow below -->\n    <v-layout row wrap>\n      <!-- Pagination top (TODO: extract to component) -->\n      <v-flex xs12>\n        <v-btn icon small @click.native='pageNumber=0' :disabled='pageNumber===0'>\n          <v-icon>first_page</v-icon>\n        </v-btn>\n        <v-btn icon small @click.native='pageNumber-=1' :disabled='pageNumber===0'>\n          <v-icon>chevron_left</v-icon>\n        </v-btn>\n        <v-btn icon @click.native='pageNumber+=1' :disabled='pageNumber >= Math.round(filteredProcessors.length/sliceSize)'>\n          <v-icon>chevron_right</v-icon>\n        </v-btn>\n        <v-btn icon small @click.native='pageNumber=Math.round(filteredProcessors.length/sliceSize)' :disabled='pageNumber >= Math.round(filteredProcessors.length/sliceSize)'>\n          <v-icon>last_page</v-icon>\n        </v-btn>\n        <span class='caption' xxxstyle=\"position: relative;top:8px;\">{{pageNumber}} / {{(filteredProcessors.length/sliceSize).toFixed(0)}}</span>\n      </v-flex>\n      <!-- The actual processor cards -->\n      <v-flex xs12 sm6 v-for='processor in paginatedProcessors' :key='processor._id'>\n        <processor-card :resource='processor' v-on:selected='selectThis' v-on:deleted='clearSelection'></processor-card>\n      </v-flex>\n      <!-- Pagination bottom  -->\n      <v-flex xs12>\n        <v-btn icon small @click.native='pageNumber=0' :disabled='pageNumber===0'>\n          <v-icon>first_page</v-icon>\n        </v-btn>\n        <v-btn icon small @click.native='pageNumber-=1' :disabled='pageNumber===0'>\n          <v-icon>chevron_left</v-icon>\n        </v-btn>\n        <v-btn icon @click.native='pageNumber+=1' :disabled='pageNumber >= Math.round(filteredProcessors.length/sliceSize)'>\n          <v-icon>chevron_right</v-icon>\n        </v-btn>\n        <v-btn icon small @click.native='pageNumber=Math.round(filteredProcessors.length/sliceSize)' :disabled='pageNumber >= Math.round(filteredProcessors.length/sliceSize)'>\n          <v-icon>last_page</v-icon>\n        </v-btn>\n        <span class='caption' xxxstyle=\"position: relative;top:8px;\">{{pageNumber}} / {{(filteredProcessors.length/sliceSize).toFixed(0)}}</span>\n      </v-flex>\n    </v-layout>\n    <!-- Big fat fab button to create a new processor -->\n    <v-btn color=\"primary\" dark fixed large bottom right fab @click.native='createProcessor'>\n      <v-icon>add</v-icon>\n    </v-btn>\n  </v-container>\n</template>\n<script>\nimport debounce from 'lodash.debounce'\nimport ProcessorCard from '../components/ProcessorCard.vue'\n\nexport default {\n  name: 'ProcessorView',\n  components: {\n    ProcessorCard\n  },\n  computed: {\n    processors( ) {\n      return this.$store.state.processors.filter( p => p.owner.indexOf(this.$store.state.user._id) !== -1)\n    },\n    filteredProcessors( ) {\n      if ( this.searchfilter && this.searchfilter !== '' )\n        return this.processors.filter( p => p.name.toLowerCase().includes( this.searchfilter.toLowerCase() ) )\n      return this.processors\n    },\n    paginatedProcessors( ) {\n      return this.filteredProcessors.slice( this.currentIndex + this.pageNumber * this.sliceSize, this.sliceSize * ( this.pageNumber + 1 ) )\n    }\n  },\n  data( ) {\n    return {\n      currentIndex: 0,\n      sliceSize: 6,\n      pageNumber: 0,\n      searchfilter: '',\n      selectedProcessors: [ ],\n      isSearching: false\n    }\n  },\n  methods: {\n    selectThis( processor ) {\n      let index = this.selectedProcessors.findIndex( p => p._id === processor._id )\n      if ( index === -1 )\n        this.selectedProcessors.unshift( processor )\n      else\n        this.selectedProcessors.splice( index, 1 )\n    },\n    selectAll( ) {\n      this.paginatedProcessors.forEach( processor => {\n        let index = this.selectedProcessors.findIndex( s => s._id === processor._id )\n        if ( index === -1 ) {\n          bus.$emit( 'select-processor', processor._id )\n        }\n      } )\n    },\n    createProcessor( ) {\n      this.$store.dispatch( 'createProcessor', { name: 'A brand new speckle processor' } )\n        .then( res => {\n          this.$router.push( `/processors/${res._id}` )\n        } )\n    },\n    deleteSelectedProcessors( ) {\n      this.selectedProcessors.forEach( processor => {\n        this.$store.dispatch( 'deleteProcessor', { _id: processor._id } )\n      } )\n      this.selectedProcessors.splice( 0, this.selectedProcessors.length )\n      this.clearSelection( )\n    },\n    clearSelection( ) {\n      bus.$emit( 'unselect-all-processors' )\n    },\n    updateSearch: debounce( function( e ) {\n      this.pageNumber = 0\n      this.isSearching = false\n      this.searchfilter = e\n    }, 1000 ),\n  }\n}\n\n</script>\n<style scoped lang='scss'>\n</style>\n"]}]}