{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/DetailDescription.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/DetailDescription.vue","mtime":1609071089407},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport debounce from 'lodash.debounce'\nimport marked from 'marked'\n\nexport default {\n  name: 'DetailDescription',\n  props: {\n    resource: Object,\n  },\n  computed: {\n    title ( ) {\n      if ( this.isStream ) return \"Stream\"\n      else if ( this.isProcessor ) return \"Processor\"\n      else return \"Project\"\n    },\n    compiledDescription( ) {\n      return marked( this.resource.description, { sanitize: true } )\n    },\n    canEdit( ) {\n      if (this.$store.state.user.role == 'admin') return true\n      return this.isOwner ? true : this.resource.canWrite.indexOf( this.$store.state.user._id ) !== -1\n    },\n    isOwner( ) {\n      return this.resource.owner === this.$store.state.user._id\n    },\n    isStream( ) {\n      return this.resource.hasOwnProperty( 'streamId' )\n    },\n    isProcessor( ) {\n      return this.resource.hasOwnProperty( 'blocks' )\n    }\n  },\n  data( ) {\n    return {\n      editDescription: false\n    }\n  },\n  methods: {\n    updateDescription( ) {\n      this.editDescription = false\n      if ( this.isStream )\n        this.$store.dispatch( 'updateStream', { streamId: this.resource.streamId, description: this.resource.description } )\n      else if ( this.isProcessor )\n        this.$store.dispatch( 'updateProcessor', { _id: this.resource._id, description: this.resource.description } )\n      else\n        this.$store.dispatch( 'updateProject', { _id: this.resource._id, description: this.resource.description } )\n    },\n  }\n}\n\n",{"version":3,"sources":["DetailDescription.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DetailDescription.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-card v-if='resource' class='elevation-0'>\n    <v-toolbar class='elevation-0 transparent'>\n      <v-icon left small>book</v-icon>\n      <span class='title font-weight-light'>{{title}} Description</span>\n      <v-spacer></v-spacer>\n      <v-toolbar-items>\n        <v-btn flat color='primary' v-if='editDescription===false && canEdit' @click.native='editDescription=true'>Edit</v-btn>\n        <v-btn flat color='primary' v-if='editDescription===true' @click.native='updateDescription'>Done</v-btn>\n      </v-toolbar-items>\n    </v-toolbar>\n    <v-divider></v-divider>\n    <v-card-text>\n      <v-layout v-show='!editDescription'>\n        <v-flex xs12 v-html='compiledDescription'></v-flex>\n      </v-layout>\n      <v-layout v-show='editDescription' row wrap>\n        <v-flex xs12 class=\"caption\">\n          Supports <a class='' target=\"_blank\" href='https://en.wikipedia.org/wiki/Markdown#Example'>markdown:</a><strong> ** bold **</strong>, <i>* italic *</i>, <code># Heading 1</code>, <code>## Heading 2</code>, <code>[links](http://example.com)</code>, etc.\n        </v-flex>\n        <v-flex xs12>\n          <v-textarea box rows='15' v-model=\"resource.description\"></v-textarea>\n        </v-flex>\n        </md-field>\n      </v-layout>\n    </v-card-text>\n     <v-toolbar transparent class='elevation-0 transparent' dense v-if='isStream'>\n      <v-icon left small>power_input</v-icon>\n      <span class='title font-weight-light'>Units</span>\n     </v-toolbar>\n     <v-divider></v-divider>\n    <v-card-text class='md-caption' v-if='resource.baseProperties'>\n      <span><strong>Units:</strong> {{resource.baseProperties.units}}</span>;\n      <span><strong>Tolerance:</strong> {{resource.baseProperties.tolerance}}</span>.\n    </v-card-text>\n  </v-card>\n</template>\n<script>\nimport debounce from 'lodash.debounce'\nimport marked from 'marked'\n\nexport default {\n  name: 'DetailDescription',\n  props: {\n    resource: Object,\n  },\n  computed: {\n    title ( ) {\n      if ( this.isStream ) return \"Stream\"\n      else if ( this.isProcessor ) return \"Processor\"\n      else return \"Project\"\n    },\n    compiledDescription( ) {\n      return marked( this.resource.description, { sanitize: true } )\n    },\n    canEdit( ) {\n      if (this.$store.state.user.role == 'admin') return true\n      return this.isOwner ? true : this.resource.canWrite.indexOf( this.$store.state.user._id ) !== -1\n    },\n    isOwner( ) {\n      return this.resource.owner === this.$store.state.user._id\n    },\n    isStream( ) {\n      return this.resource.hasOwnProperty( 'streamId' )\n    },\n    isProcessor( ) {\n      return this.resource.hasOwnProperty( 'blocks' )\n    }\n  },\n  data( ) {\n    return {\n      editDescription: false\n    }\n  },\n  methods: {\n    updateDescription( ) {\n      this.editDescription = false\n      if ( this.isStream )\n        this.$store.dispatch( 'updateStream', { streamId: this.resource.streamId, description: this.resource.description } )\n      else if ( this.isProcessor )\n        this.$store.dispatch( 'updateProcessor', { _id: this.resource._id, description: this.resource.description } )\n      else\n        this.$store.dispatch( 'updateProject', { _id: this.resource._id, description: this.resource.description } )\n    },\n  }\n}\n\n</script>\n<style scoped lang='scss'>\n</style>\n"]}]}