{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/views/Project.vue?vue&type=style&index=0&id=528dfd90&scoped=true&lang=scss&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/views/Project.vue","mtime":1609071089433},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.detail-card {\n  margin-bottom: 20px;\n}\n\n",{"version":3,"sources":["Project.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA;AACA;AACA","file":"Project.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-container grid-list-xl v-if='project'>\n    <v-toolbar absolute v-if='project.deleted'>\n      <span>This project is in your trashbin. </span>\n      <v-spacer></v-spacer>\n      <v-btn color='primary' v-if='canEdit' @click.native='restore'> Restore? </v-btn>\n    </v-toolbar>\n    <v-layout row wrap class='mb-3'>\n      <v-flex xs12>\n        <project-detail-title :project='project'></project-detail-title>\n      </v-flex>\n      <v-flex xs12>\n        <detail-description :resource='project'></detail-description>\n      </v-flex>\n      <v-flex xs12 sm12 lg12>\n        <v-card class='elevation-0'>\n          <v-card-title class='title font-weight-light'>\n            <v-icon small left>supervisor_account</v-icon>&nbsp;\n            Users\n          </v-card-title>\n          <v-card-text>\n            <user-search v-on:selected-user='addUserToTeam' v-if='canEdit'></user-search>\n            <permission-table :project='project' :global-disabled='!canEdit' @remove-user='' @move-user=''></permission-table>\n          </v-card-text>\n        </v-card>\n      </v-flex>\n      <v-flex xs12 sm12 lg12>\n        <v-card  class='elevation-0'>\n          <v-card-title class='title font-weight-light'>\n            <v-icon small left>import_export</v-icon>&nbsp;\n            Streams\n          </v-card-title>\n          <v-card-text>\n            <project-detail-streams :project='project' v-on:selected-stream='addStream' v-on:remove-stream='removeStream'></project-detail-streams>\n          </v-card-text>\n        </v-card>\n      </v-flex>\n      <v-flex xs12>\n        <client-graph :project='project'></client-graph>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n<script>\nimport union from 'lodash.union'\nimport uniq from 'lodash.uniq'\n\nimport UserSearch from '../components/UserSearch.vue'\nimport PermissionTable from '../components/PermissionTableProject.vue'\nimport DetailDescription from '../components/DetailDescription.vue'\nimport ProjectDetailStreams from '../components/ProjectDetailStreams.vue'\nimport ProjectDetailTitle from '../components/ProjectDetailTitle.vue'\nimport ClientGraph from '../components/ClientGraph.vue'\n\nexport default {\n  name: 'ProjectDetailView',\n  components: {\n    UserSearch,\n    PermissionTable,\n    DetailDescription,\n    ProjectDetailStreams,\n    ProjectDetailTitle,\n    ClientGraph\n  },\n  props: {},\n  computed: {\n    canEdit( ) {\n      return this.project.owner === this.$store.state.user._id || this.project.canWrite.indexOf( this.$store.state.user._id ) > -1 || this.$store.state.user.role === 'admin'\n    },\n    project( ) {\n      return this.$store.state.projects.find( p => p._id === this.$route.params.projectId )\n    },\n    canReadProject( ) { return this.project.canRead },\n    canWriteProject( ) { return this.project.canWrite },\n    canReadStreams( ) { return this.project.permissions.canRead },\n    canWriteStreams( ) { return this.project.permissions.canWrite },\n    allUsers( ) {\n      return uniq( [ ...this.canReadProject, ...this.canWriteProject, ...this.canReadStreams, ...this.canWriteProject, this.project.owner ] )\n    }\n  },\n  data( ) {\n    return {}\n  },\n  methods: {\n    restore( ) {\n      this.$store.dispatch( 'updateProject', { _id: this.project._id, deleted: false } )\n    },\n    addUserToTeam( userId ) {\n      this.$store.dispatch( 'addUserToProject', { projectId: this.project._id, userId: userId } )\n      return\n    },\n    addStream( streamId ) {\n      this.$store.dispatch( 'addStreamToProject', { projectId: this.project._id, streamId: streamId } )\n      return\n    },\n    removeStream( streamId ) {\n      this.$store.dispatch( 'removeStreamFromProject', { projectId: this.project._id, streamId: streamId } )\n    },\n  },\n  mounted( ) {\n    let project = this.$store.state.projects.find( p => p._id === this.$route.params.projectId )\n    if ( !project ) {\n      this.$store.dispatch( 'getProject', { _id: this.$route.params.projectId } )\n        .then( res => {\n          this.$store.dispatch( 'getUser', { _id: res.data.resource.owner } )\n          union( res.data.resource.canRead, res.data.resource.canWrite ).forEach( _id => this.$store.dispatch( 'getUser', { _id: _id } ) )\n        } )\n        .catch( err => {\n          if ( this.$store.state.isAuth ) {\n            this.$router.push( '/projects' )\n            console.log( \"you don't have permission.\" )\n          } else {\n            console.log( \"should redirect to login\" )\n            this.$router.push( '/login' )\n          }\n          console.log( err )\n        } )\n    } else {\n      this.$store.dispatch( 'getUser', { _id: project.owner } )\n      union( project.canRead, project.canWrite ).forEach( _id => this.$store.dispatch( 'getUser', { _id: _id } ) )\n    }\n  }\n}\n\n</script>\n<style scoped lang='scss'>\n.detail-card {\n  margin-bottom: 20px;\n}\n\n</style>\n"]}]}