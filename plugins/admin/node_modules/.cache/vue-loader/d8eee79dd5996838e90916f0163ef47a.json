{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/ClientCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/ClientCard.vue","mtime":1609071089405},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'ClientCard',\n  props: {\n    client: Object\n  },\n  computed: {\n    owner( ) {\n      let found = this.$store.state.users.find( u => u._id === this.client.owner )\n      if ( !found ) this.$store.dispatch( 'getUser', { _id: this.client.owner } )\n      return found\n    },\n    icon( ) {\n      if ( this.client.role.toLowerCase( ) === 'sender' ) return 'cloud_upload'\n      if ( this.client.role.toLowerCase( ) === 'receiver' ) return 'cloud_download'\n      return 'hearing'\n    }\n  },\n  data( ) { return {} },\n  methods: {}\n}\n\n",{"version":3,"sources":["ClientCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ClientCard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-layout row wrap justfiy-space-between class='text-xs-left'>\n    <v-flex class='caption'>\n      <strong>{{client.documentType}}</strong>&nbsp;<span v-if='client.documentName'>doc name: {{client.documentName}}</span>\n    </v-flex>\n    <v-flex class='caption' xs3>\n      <!-- {{client.online ? \"online\" : \"offline\"}}, -->\n      last seen: <strong>\n        <timeago :datetime='client.updatedAt'></timeago>\n      </strong>\n    </v-flex>\n    <v-flex class='caption' xs4>\n      <span v-if='owner'>Client Owner: <strong>{{ owner.name }} {{owner.surname}}</strong></span>\n    </v-flex>\n  </v-layout>\n</template>\n<script>\nexport default {\n  name: 'ClientCard',\n  props: {\n    client: Object\n  },\n  computed: {\n    owner( ) {\n      let found = this.$store.state.users.find( u => u._id === this.client.owner )\n      if ( !found ) this.$store.dispatch( 'getUser', { _id: this.client.owner } )\n      return found\n    },\n    icon( ) {\n      if ( this.client.role.toLowerCase( ) === 'sender' ) return 'cloud_upload'\n      if ( this.client.role.toLowerCase( ) === 'receiver' ) return 'cloud_download'\n      return 'hearing'\n    }\n  },\n  data( ) { return {} },\n  methods: {}\n}\n\n</script>\n<style scoped lang='scss'>\n.client {\n  padding-bottom: 5px;\n  padding-top: 5px;\n}\n\n.blue {\n  color: #448aff !important;\n}\n\n</style>\n"]}]}