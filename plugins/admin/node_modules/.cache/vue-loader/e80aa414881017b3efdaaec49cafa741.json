{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/StreamCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/StreamCard.vue","mtime":1609071089413},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport union from 'lodash.union'\nimport debounce from 'lodash.debounce'\nimport marked from 'marked'\n\nexport default {\n  name: 'StreamCard',\n  props: {\n    stream: Object\n  },\n  watch: {\n    selected( ) { this.$emit( \"selected\", this.stream ) }\n  },\n  computed: {\n    createdAt( ) {\n      let date = new Date( this.stream.createdAt )\n      return date.toLocaleString( 'en', { year: 'numeric', month: 'long', day: 'numeric' } )\n    },\n    compiledDescription( ) {\n      return marked( this.stream.description.substring( 0, 220 ) + ' ...', { sanitize: true } )\n    },\n    canEdit( ) {\n      return this.isOwner ? true : this.stream.canWrite.indexOf( this.$store.state.user._id ) !== -1\n    },\n    isOwner( ) {\n      return this.stream.owner === this.$store.state.user._id\n    },\n    allUsers( ) {\n      return union( this.stream.canRead, this.stream.canWrite )\n    },\n    owner( ) {\n      let u = this.$store.state.users.find( user => user._id === this.stream.owner )\n      if ( !u ) {\n        this.$store.dispatch( 'getUser', { _id: this.stream.owner } )\n      }\n      return u ? u.surname.includes( \"is you\" ) ? `you` : `${u.name} ${u.surname}` : 'Loading'\n    }\n  },\n  data( ) {\n    return {\n      selected: false,\n    }\n  },\n  methods: {\n    deleteStream( ) {\n      this.$store.dispatch( 'updateStream', { streamId: this.stream.streamId, deleted: true } )\n      this.$emit( 'deleted' )\n    },\n    updateTags: debounce( function ( e ) {\n      this.$store.dispatch( 'updateStream', { streamId: this.stream.streamId, tags: this.stream.tags } )\n    }, 1000 )\n  },\n  mounted( ) {\n    bus.$on( 'select-stream', ( streamId ) => {\n      if ( this.stream.streamId === streamId ) this.selected = true\n    } )\n    bus.$on( 'unselect-all', ( ) => {\n      this.selected = false\n    } )\n  }\n}\n\n",{"version":3,"sources":["StreamCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StreamCard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-card :class=\"{'stream-card':true, 'elevation-10':selected, 'elevation-1': true}\">\n    <v-card-title>\n      <v-btn icon @click.native='$router.push(`/view/${stream.streamId}`)'>\n        <v-icon>360</v-icon>\n      </v-btn>\n      <span class='title font-weight-light'>{{stream.name ? stream.name : \"Stream Has No Name\"}}</span>\n      <v-spacer></v-spacer>\n      <span></span>\n      <span>\n        <v-checkbox color='primary' v-model=\"selected\"></v-checkbox>\n      </span>\n    </v-card-title>\n    <v-divider class='mx-0 my-0'></v-divider>\n    <v-layout row wrap>\n      <v-flex xs12 class='caption' ma-2>\n        <v-icon small>fingerprint</v-icon>&nbsp<strong style=\"user-select:all\">{{stream.streamId}}</strong>&nbsp\n        <v-icon small>edit</v-icon>&nbsp<timeago :datetime='stream.updatedAt'></timeago>&nbsp\n        <v-icon small>access_time</v-icon>&nbsp {{createdAt}}&nbsp\n        <v-icon small>{{stream.private ? \"lock\" : \"lock_open\"}}</v-icon> link sharing {{stream.private ? \"off\" : \"on\" }} &nbsp\n        <v-icon small>person_outline</v-icon> {{ allUsers.length }} &nbsp\n        <v-icon small>history</v-icon> {{ stream.children.length }} &nbsp\n      </v-flex>\n      <v-flex xs12 ma-2>\n        <v-chip small v-if='stream.jobNumber'><b>JN:</b> {{stream.jobNumber}}</v-chip>\n        <v-chip small v-if='stream.tags.length > 0' outline v-for='tag in stream.tags' :key='tag'>{{tag}}</v-chip>\n      </v-flex>\n      <v-flex xs12 ma-2>\n        <div class=\"md-caption md-small-hide\" v-html='compiledDescription'> </div>\n      </v-flex>\n    </v-layout>\n    <v-card-actions>\n      <span class='caption font-weight-light'>Owned by {{owner}}</span>\n      <v-spacer></v-spacer>\n      <v-btn depressed class='transparent' @click.native='deleteStream' v-show='isOwner'>Archive</v-btn>\n      <v-btn color='primary' :to='\"/streams/\"+stream.streamId'>Details</v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n<script>\nimport union from 'lodash.union'\nimport debounce from 'lodash.debounce'\nimport marked from 'marked'\n\nexport default {\n  name: 'StreamCard',\n  props: {\n    stream: Object\n  },\n  watch: {\n    selected( ) { this.$emit( \"selected\", this.stream ) }\n  },\n  computed: {\n    createdAt( ) {\n      let date = new Date( this.stream.createdAt )\n      return date.toLocaleString( 'en', { year: 'numeric', month: 'long', day: 'numeric' } )\n    },\n    compiledDescription( ) {\n      return marked( this.stream.description.substring( 0, 220 ) + ' ...', { sanitize: true } )\n    },\n    canEdit( ) {\n      return this.isOwner ? true : this.stream.canWrite.indexOf( this.$store.state.user._id ) !== -1\n    },\n    isOwner( ) {\n      return this.stream.owner === this.$store.state.user._id\n    },\n    allUsers( ) {\n      return union( this.stream.canRead, this.stream.canWrite )\n    },\n    owner( ) {\n      let u = this.$store.state.users.find( user => user._id === this.stream.owner )\n      if ( !u ) {\n        this.$store.dispatch( 'getUser', { _id: this.stream.owner } )\n      }\n      return u ? u.surname.includes( \"is you\" ) ? `you` : `${u.name} ${u.surname}` : 'Loading'\n    }\n  },\n  data( ) {\n    return {\n      selected: false,\n    }\n  },\n  methods: {\n    deleteStream( ) {\n      this.$store.dispatch( 'updateStream', { streamId: this.stream.streamId, deleted: true } )\n      this.$emit( 'deleted' )\n    },\n    updateTags: debounce( function ( e ) {\n      this.$store.dispatch( 'updateStream', { streamId: this.stream.streamId, tags: this.stream.tags } )\n    }, 1000 )\n  },\n  mounted( ) {\n    bus.$on( 'select-stream', ( streamId ) => {\n      if ( this.stream.streamId === streamId ) this.selected = true\n    } )\n    bus.$on( 'unselect-all', ( ) => {\n      this.selected = false\n    } )\n  }\n}\n\n</script>\n<style scoped lang='scss'>\n/*.stream-chips:after {\n  display: none !important;\n}\n\n.stream-chips:before {\n  display: none !important;\n}\n\n.md-card-actions,\n.md-card-header {\n  background: ghostwhite;\n}\n\n.md-card-header {\n  margin-bottom: 10px;\n}\n\n.stream-chips {\n  margin-bottom: 0;\n}\n\n.stream-chips input {\n  font-size: 10px;\n}*/\n\n</style>\n"]}]}