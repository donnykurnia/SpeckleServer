{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/StreamDetailTitle.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/StreamDetailTitle.vue","mtime":1609071089415},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport debounce from 'lodash.debounce'\nimport union from 'lodash.union'\n\nexport default {\n  name: 'StreamDetailTitle',\n  props: {\n    stream: Object, // can be alert or info\n  },\n  computed: {\n    jnMask( ) {\n      return this.$store.state.serverManifest.jnMask || \"######-##\"\n    },\n    allTags( ) {\n      return this.$store.getters.allTags\n    },\n    canEdit( ) {\n      if (this.$store.state.user.role == 'admin') return true\n      return this.isOwner ? true : this.stream.canWrite.indexOf( this.$store.state.user._id ) !== -1\n    },\n    isOwner( ) {\n      return this.stream.owner === this.$store.state.user._id\n    },\n    streamProjects( ) {\n      return this.$store.state.projects.filter( p => p.streams.indexOf( this.stream.streamId ) !== -1 )\n    },\n    viewLink( ) {\n      let url = new URL( this.$store.state.server )\n      return url.origin + `/view?streams=${this.stream.streamId}`\n    },\n    isOwner( ) {\n      return this.stream.owner === this.$store.state.user._id\n    },\n    allUsers( ) {\n      return union( this.stream.canRead, this.stream.canWrite )\n    },\n    owner( ) {\n      let u = this.$store.state.users.find( user => user._id === this.stream.owner )\n      if ( !u ) {\n        this.$store.dispatch( 'getUser', { _id: this.stream.owner } )\n      }\n      return u ? u.surname.includes( \"is you\" ) ? `you` : `${u.name} ${u.surname}` : 'Loading'\n    },\n    createdAt( ) {\n      let date = new Date( this.stream.createdAt )\n      return date.toLocaleString( 'en', { year: 'numeric', month: 'long', day: 'numeric' } )\n    },\n  },\n  data( ) {\n    return {\n      tag: null\n    }\n  },\n  methods: {\n    updateTags: debounce( function ( e ) {\n      this.$store.dispatch( 'updateStream', { streamId: this.stream.streamId, tags: this.stream.tags } )\n    }, 1000 ),\n    updateName( args ) {\n      this.$store.dispatch( 'updateStream', { streamId: this.stream.streamId, name: args.text } )\n    },\n    updateJobNumber: debounce( function ( e ) {\n      this.$store.dispatch( 'updateStream', { streamId: this.stream.streamId, jobNumber: this.stream.jobNumber } )\n    }, 1000 )\n  },\n  mounted( ) {}\n}\n\n",{"version":3,"sources":["StreamDetailTitle.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StreamDetailTitle.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-card class='elevation-0 pa-3'>\n    <v-layout row wrap>\n      <v-flex xs12 class='display-1 font-weight-light text-capitalize my-5'>\n        <v-btn icon @click.native='$router.push(`/view/${stream.streamId}`)'>\n          <v-icon>360</v-icon>\n        </v-btn>\n        <editable-span v-if='canEdit' :text='stream.name' @update='updateName'></editable-span>\n        <span v-else>{{stream.name}}</span>\n      </v-flex>\n      <v-flex xs12 class='caption' style='line-height: 32px'>\n        <v-icon small>fingerprint</v-icon>&nbsp;<strong style=\"user-select:all\">{{stream.streamId}}</strong>&nbsp;\n        <v-icon small>edit</v-icon>&nbsp;<timeago :datetime='stream.updatedAt'></timeago>&nbsp;\n        <v-icon small>access_time</v-icon>&nbsp; {{createdAt}}&nbsp;\n        <v-icon small>{{stream.private ? \"lock\" : \"lock_open\"}}</v-icon> link sharing {{stream.private ? \"off\" : \"on\" }} &nbsp;\n        <v-icon small>person_outline</v-icon> {{ allUsers.length }} &nbsp;\n        <v-icon small>history</v-icon> {{ stream.children.length }} &nbsp;\n        <span class='caption font-weight-light text-uppercase'>Owned by <strong>{{owner}}</strong></span>\n      </v-flex>\n      <v-flex xs12 class='ma-0 pa-0 mt-3 mb-2'>\n        <v-layout row align-center>\n          <v-flex xs3 class='pr-4'>\n            <v-text-field hint='Project Code' :mask='jnMask' v-model='stream.jobNumber' solo persistent-hint :disabled='!canEdit' @input='updateJobNumber'></v-text-field>\n          </v-flex>\n          <v-flex xs9>\n            <v-combobox @input='updateTags' :disabled='!canEdit' v-model=\"stream.tags\" :items='allTags' hint='add or remove tags' solo persistent-hint small-chips deletable-chips multiple tags>\n              <template v-slot:no-data>\n                <p>Add a new tag!</p>\n              </template>\n            </v-combobox>\n          </v-flex>\n        </v-layout>\n      </v-flex>\n    </v-layout>\n  </v-card>\n</template>\n<script>\nimport debounce from 'lodash.debounce'\nimport union from 'lodash.union'\n\nexport default {\n  name: 'StreamDetailTitle',\n  props: {\n    stream: Object, // can be alert or info\n  },\n  computed: {\n    jnMask( ) {\n      return this.$store.state.serverManifest.jnMask || \"######-##\"\n    },\n    allTags( ) {\n      return this.$store.getters.allTags\n    },\n    canEdit( ) {\n      if (this.$store.state.user.role == 'admin') return true\n      return this.isOwner ? true : this.stream.canWrite.indexOf( this.$store.state.user._id ) !== -1\n    },\n    isOwner( ) {\n      return this.stream.owner === this.$store.state.user._id\n    },\n    streamProjects( ) {\n      return this.$store.state.projects.filter( p => p.streams.indexOf( this.stream.streamId ) !== -1 )\n    },\n    viewLink( ) {\n      let url = new URL( this.$store.state.server )\n      return url.origin + `/view?streams=${this.stream.streamId}`\n    },\n    isOwner( ) {\n      return this.stream.owner === this.$store.state.user._id\n    },\n    allUsers( ) {\n      return union( this.stream.canRead, this.stream.canWrite )\n    },\n    owner( ) {\n      let u = this.$store.state.users.find( user => user._id === this.stream.owner )\n      if ( !u ) {\n        this.$store.dispatch( 'getUser', { _id: this.stream.owner } )\n      }\n      return u ? u.surname.includes( \"is you\" ) ? `you` : `${u.name} ${u.surname}` : 'Loading'\n    },\n    createdAt( ) {\n      let date = new Date( this.stream.createdAt )\n      return date.toLocaleString( 'en', { year: 'numeric', month: 'long', day: 'numeric' } )\n    },\n  },\n  data( ) {\n    return {\n      tag: null\n    }\n  },\n  methods: {\n    updateTags: debounce( function ( e ) {\n      this.$store.dispatch( 'updateStream', { streamId: this.stream.streamId, tags: this.stream.tags } )\n    }, 1000 ),\n    updateName( args ) {\n      this.$store.dispatch( 'updateStream', { streamId: this.stream.streamId, name: args.text } )\n    },\n    updateJobNumber: debounce( function ( e ) {\n      this.$store.dispatch( 'updateStream', { streamId: this.stream.streamId, jobNumber: this.stream.jobNumber } )\n    }, 1000 )\n  },\n  mounted( ) {}\n}\n\n</script>\n<style scoped lang='scss'>\n.title-card {\n  margin-left: 0;\n  margin-right: 0;\n}\n\n.md-card-content:last-of-type {\n  padding-bottom: 0px !important;\n}\n\n</style>\n"]}]}