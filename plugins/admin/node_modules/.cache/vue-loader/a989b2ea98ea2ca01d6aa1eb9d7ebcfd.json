{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/views/StreamData.vue?vue&type=style&index=0&id=c11b23a0&scoped=true&lang=scss&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/views/StreamData.vue","mtime":1609071089434},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.detail-card {\n  margin-bottom: 20px;\n}\n\n.md-content {\n  padding: 30px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.md-card-content {\n  padding: 0;\n}\n\na:hover {\n  cursor: pointer;\n}\n\n",{"version":3,"sources":["StreamData.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"StreamData.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-layout row wrap>\n    <v-flex xs12 v-if='!onlineEditable'>\n      <v-alert type='warning' :value=\"!onlineEditable\">\n        This stream is not marked as online editable.\n      </v-alert>\n    </v-flex>\n    <v-flex xs12>\n      <v-progress-linear :indeterminate=\"true\" v-if='isGettingStreamData'></v-progress-linear>\n    </v-flex>\n    <v-flex xs12>\n      <v-card class='elevation-0 pt-4'>\n        <v-toolbar dense class='elevation-0 transparent'>\n          <v-icon small left>business</v-icon>&nbsp;\n          <span class='title font-weight-light'>Data</span>\n          <v-spacer></v-spacer>\n          <v-toolbar-items>\n            <v-btn depressed small flat @click.native='showImportCSVDialog = true' :disabled='!onlineEditable'>\n              <v-icon>cloud_upload</v-icon>\n              &nbsp;&nbsp;Import CSV\n            </v-btn>\n            <v-btn color='primary' small depressed @click.native='preSaveData()' :disabled='!changed || !onlineEditable'>\n              save\n            </v-btn>\n          </v-toolbar-items>\n        </v-toolbar>\n        <v-card-text>\n          <v-layout row wrap>\n            <v-flex xs12>\n              <stream-layer v-for='layer in mergedLayers' :key='layer.guid' :layer='layer' @update='updateLayer' @remove='removeLayer'>\n              </stream-layer>\n            </v-flex>\n            <v-flex xs12>\n              <v-btn block @click.native='addLayer' :disabled='!onlineEditable'>\n                <v-icon>add</v-icon>\n                add a layer\n              </v-btn>\n            </v-flex>\n            <v-flex xs12>\n            </v-flex>\n          </v-layout>\n        </v-card-text>\n      </v-card>\n    </v-flex>\n    <v-dialog v-model=\"showSaveDialog\" width=\"500\">\n      <v-card>\n        <v-card-title class=\"headline\" primary-title>\n          Commit message\n        </v-card-title>\n        <v-card-text>\n          <p>Write a short description of the reasons behind the changes you just made.</p>\n          <v-text-field box v-model='commitMessage'></v-text-field>\n        </v-card-text>\n        <v-divider></v-divider>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn flat @click='showSaveDialog=false'>\n            cancel\n          </v-btn>\n          <v-btn color=\"primary\" @click=\"saveData()\" :loading='isLoading' :disabled='isLoading'>\n            Save\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <!-- CSV -->\n    <v-dialog v-model='showImportCSVDialog' width=\"500\">\n      <v-card>\n        <v-card-title class=\"headline\" primary-title>\n          CSV Import\n        </v-card-title>\n        <v-card-text>\n          <p>Paste your csv below.</p>\n          <p class='md-caption'>We assume the first row will contain the column names. Each column will become a separate \"output port\" or layer.</p>\n          <v-textarea box style=\"height: 150px;width:100%\" v-model='csvInput'></v-textarea>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn flat @click='closeCsvDialog()'>Cancel</v-btn>\n          <v-btn color=\"primary\" @click='importCSV()' :loading='isLoading' :disabled='isLoading'>Import CSV</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-layout>\n</template>\n<script>\nimport debounce from 'lodash.debounce'\nimport union from 'lodash.union'\nimport Axios from 'axios'\nimport uuid from 'uuid/v4'\nimport papa from 'papaparse'\n\nimport StreamLayer from '../components/StreamLayer.vue'\n\nexport default {\n  name: 'StreamEditView',\n  components: {\n    StreamLayer\n  },\n  watch: {\n    stream( newStream, oldStream ) {\n      this.fetchData( newStream.streamId )\n    }\n  },\n  computed: {\n    // fed to the stream layers component\n    mergedLayers( ) {\n      if ( !this.deStream ) return [ ]\n      let mergedLayers = [ ]\n      this.deStream.layers.forEach( l => {\n        mergedLayers.push( {\n          name: l.name,\n          isArray: true,\n          startIndex: l.startIndex,\n          objectCount: l.objectCount,\n          guid: l.guid,\n          topology: l.topology,\n          objects: this.deStream.objects.slice( l.startIndex, l.startIndex + l.objectCount ).map( o => o.value.toString( ) )\n        } )\n      } )\n      return mergedLayers\n    },\n    deStream( ) {\n      return this.$store.state.deStreams.find( s => s.streamId === this.$route.params.streamId )\n    },\n    stream( ) {\n      return this.$store.state.streams.find( s => s.streamId === this.$route.params.streamId )\n    },\n    canEdit( ) {\n      return this.isOwner ? true : this.stream.canWrite.indexOf( this.$store.state.user._id ) !== -1\n    },\n    isOwner( ) {\n      return this.stream.owner === this.$store.state.user._id\n    },\n    onlineEditable( ) {\n      return this.stream.onlineEditable ? this.stream.onlineEditable : false\n    }\n  },\n  data( ) {\n    return {\n      changed: false,\n      showSaveDialog: false,\n      commitMessage: 'no message',\n      showImportCSVDialog: false,\n      csvInput: '',\n      isLoading: false,\n      isGettingStreamData: false,\n    }\n  },\n  methods: {\n    updateLayer( { layer, objects } ) {\n      this.$store.commit( 'UPDATE_DE_STREAM_LAYER', { streamId: this.stream.streamId, layer, objects } )\n      this.changed = true\n    },\n    addLayer( ) {\n      this.$store.commit( 'ADD_DE_STREAM_LAYER', { streamId: this.stream.streamId } )\n      this.changed = true\n    },\n    removeLayer( layer ) {\n      this.$store.commit( 'REMOVE_DE_STREAM_LAYER', { streamId: this.stream.streamId, layer: layer } )\n      this.changed = true\n    },\n    preSaveData( ) {\n      this.showSaveDialog = true\n    },\n    saveData( ) {\n      this.isLoading = true\n      this.$store.dispatch( 'updateStreamObjectsAndLayers', { streamId: this.stream.streamId, commitMessage: this.commitMessage } )\n        .then( res => {\n          this.showSaveDialog = false\n          this.commitMessage = 'no message'\n          this.changed = false\n          this.isLoading = false\n          console.log( res )\n        } )\n        .catch( err => {\n          // TODO: handle error\n          this.isLoading = false\n          console.error( err )\n        } )\n    },\n    fetchData( streamId ) {\n      if(!this.onlineEditable) return\n      console.log( `fetching data for ${streamId}` )\n      this.isGettingStreamData = true\n      Axios.get( `streams/${streamId}?fields=layers` )\n        .then( res => {\n          this.layers = res.data.resource.layers\n          console.log( this.layers )\n          return Axios.get( `streams/${streamId}/objects?fields=type,value` )\n        } )\n        .then( res => {\n          this.objects = res.data.resources\n          this.$store.commit( 'ADD_DE_STREAM', { streamId: streamId, layers: this.layers, objects: this.objects } )\n          this.isGettingStreamData = false\n\n          console.log( res )\n        } )\n        .catch( err => {\n          this.isGettingStreamData = false\n          // TODO: Handle error\n          console.error( err )\n        } )\n    },\n    importCSV( ) {\n      this.isLoading = true\n      let results = papa.parse( this.csvInput, { dynamicTyping: false } )\n      // console.log( results )\n      let transposed = results.data[ 0 ].map( ( x, i ) => results.data.map( x => x[ i ] ) )\n      // console.log( transposed )\n      this.$store.commit( 'APPEND_DE_STREAM_LAYERS_FROM_CSV', { streamId: this.stream.streamId, transposed } )\n      this.showImportCSVDialog = false\n      this.csvInput = ''\n      this.changed = true\n      this.isLoading = false\n    },\n    closeCsvDialog( ) {\n      this.showImportCSVDialog = false\n      this.csvInput = ''\n    }\n  },\n  mounted( ) {\n    console.log( 'hello data' )\n    let stream = this.$store.state.streams.find( s => s.streamId === this.$route.params.streamId )\n    this.fetchData( this.$route.params.streamId )\n  }\n}\n\n</script>\n<style scoped lang='scss'>\n.detail-card {\n  margin-bottom: 20px;\n}\n\n.md-content {\n  padding: 30px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.md-card-content {\n  padding: 0;\n}\n\na:hover {\n  cursor: pointer;\n}\n\n</style>\n"]}]}