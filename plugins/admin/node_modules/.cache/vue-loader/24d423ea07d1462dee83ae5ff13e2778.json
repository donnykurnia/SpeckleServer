{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/SimpleCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/SimpleCard.vue","mtime":1609071089413},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport debounce from 'lodash.debounce'\nimport uniq from 'lodash.uniq'\nimport union from 'lodash.union'\nimport marked from 'marked'\n\nexport default {\n  name: 'ProjectCard',\n  props: {\n    resource: Object\n  },\n  watch: {\n    selected( ) { this.$emit( \"selected\", this.resource ) }\n  },\n  computed: {\n    project( ) {\n      return this.resource\n    },\n    createdAt( ) {\n      let date = new Date( this.project.createdAt )\n      return date.toLocaleString( 'en', { year: 'numeric', month: 'long', day: 'numeric' } )\n    },\n    canEdit( ) {\n      return this.isOwner ? true : this.project.canWrite.indexOf( this.$store.state.user._id ) !== -1\n    },\n    isOwner( ) {\n      return this.project.owner === this.$store.state.user._id\n    },\n    resourceType( ) {\n      if ( this.resource.streamId )\n        return 'stream'\n      else\n        return 'project'\n    }\n  },\n  data( ) {\n    return {\n      selected: false,\n    }\n  },\n  methods: {\n    deleteForever( ) {\n      if ( this.resource.streamId )\n        this.$store.dispatch( 'deleteStream', { streamId: this.resource.streamId } )\n      else\n        this.$store.dispatch( 'deleteProject', { _id: this.resource._id } )\n    },\n    restore( ) {\n      if ( this.resource.streamId )\n        this.$store.dispatch( 'updateStream', { streamId: this.resource.streamId, deleted: false } )\n      else\n        this.$store.dispatch( 'updateProject', { _id: this.resource._id, deleted: false } )\n    }\n  },\n  mounted( ) {\n    // TODO: caca\n    bus.$on( 'select-resource', id => {\n      if ( id === this.resource._id ) this.selected = true\n    } )\n    bus.$on( 'unselect-all-resources', ( ) => {\n      this.selected = false\n    } )\n  }\n}\n\n",{"version":3,"sources":["SimpleCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SimpleCard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-card :class=\"{'elevation-10':selected, 'elevation-1': true}\" :style=\"`opacity:${isOwner ? 1 : 0.20 };pointer-events:${isOwner ? 'all' : 'none'};`\">\n    <v-card-title>\n      <v-icon left>{{resourceType==='stream'?'import_export':'business'}}</v-icon>&nbsp;\n      <span class='title font-weight-light'>{{resource.name ? resource.name : \"No Name\"}}</span>&nbsp;\n      <span class='caption'>({{resourceType}})</span>&nbsp;\n      <v-spacer></v-spacer>\n      <span></span>\n      <span>\n        <v-checkbox color='primary' v-model=\"selected\"></v-checkbox>\n      </span>\n    </v-card-title>\n    <v-divider class='mx-0 my-0'></v-divider>\n    <v-layout row wrap>\n      <v-flex xs12 class='caption' ma-2>\n        <v-icon small>edit</v-icon>&nbsp;<timeago :datetime='resource.updatedAt'></timeago>&nbsp;\n        <v-icon small>access_time</v-icon>&nbsp; {{createdAt}}&nbsp;\n      </v-flex>\n    </v-layout>\n    <v-card-actions>\n      <v-spacer></v-spacer>\n      <v-btn depressed flat color='error' class='transparent' @click.native='deleteForever()' v-show='isOwner'>Delete Permanently</v-btn>\n      <v-btn color='primary' @click.native='restore()'>Restore</v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n<script>\nimport debounce from 'lodash.debounce'\nimport uniq from 'lodash.uniq'\nimport union from 'lodash.union'\nimport marked from 'marked'\n\nexport default {\n  name: 'ProjectCard',\n  props: {\n    resource: Object\n  },\n  watch: {\n    selected( ) { this.$emit( \"selected\", this.resource ) }\n  },\n  computed: {\n    project( ) {\n      return this.resource\n    },\n    createdAt( ) {\n      let date = new Date( this.project.createdAt )\n      return date.toLocaleString( 'en', { year: 'numeric', month: 'long', day: 'numeric' } )\n    },\n    canEdit( ) {\n      return this.isOwner ? true : this.project.canWrite.indexOf( this.$store.state.user._id ) !== -1\n    },\n    isOwner( ) {\n      return this.project.owner === this.$store.state.user._id\n    },\n    resourceType( ) {\n      if ( this.resource.streamId )\n        return 'stream'\n      else\n        return 'project'\n    }\n  },\n  data( ) {\n    return {\n      selected: false,\n    }\n  },\n  methods: {\n    deleteForever( ) {\n      if ( this.resource.streamId )\n        this.$store.dispatch( 'deleteStream', { streamId: this.resource.streamId } )\n      else\n        this.$store.dispatch( 'deleteProject', { _id: this.resource._id } )\n    },\n    restore( ) {\n      if ( this.resource.streamId )\n        this.$store.dispatch( 'updateStream', { streamId: this.resource.streamId, deleted: false } )\n      else\n        this.$store.dispatch( 'updateProject', { _id: this.resource._id, deleted: false } )\n    }\n  },\n  mounted( ) {\n    // TODO: caca\n    bus.$on( 'select-resource', id => {\n      if ( id === this.resource._id ) this.selected = true\n    } )\n    bus.$on( 'unselect-all-resources', ( ) => {\n      this.selected = false\n    } )\n  }\n}\n\n</script>\n<style scoped lang='scss'>\n</style>\n"]}]}