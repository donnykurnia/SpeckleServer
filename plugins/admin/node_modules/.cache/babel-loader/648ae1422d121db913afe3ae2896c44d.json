{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/StreamSearch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/StreamSearch.vue","mtime":1609071089416},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport debounce from 'lodash.debounce';\nexport default {\n  name: 'StreamSearch',\n  props: {\n    streamsToOmit: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    globalDisabled: {\n      type: Boolean,\n      default: false\n    },\n    writeOnly: Boolean\n  },\n  computed: {\n    filteredStreams: function filteredStreams() {\n      var _this = this;\n\n      return this.$store.getters.filteredResources(this.filters, \"streams\").filter(function (s) {\n        return _this.streamsToOmit.indexOf(s.streamId) === -1;\n      });\n    },\n    paginatedStreams: function paginatedStreams() {\n      var _this2 = this;\n\n      var toReturn = this.filteredStreams.slice(this.startIndex, this.endIndex);\n      if (this.writeOnly) toReturn = toReturn.filter(function (s) {\n        return s.owner === _this2.$store.state.user._id || s.canWrite.indexOf(_this2.$store.state.user._id) > -1;\n      });\n      return toReturn;\n    }\n  },\n  watch: {\n    searchfilter: function searchfilter(val) {\n      if (val === '' || val === null) {\n        this.showSearchResults = false;\n        this.searchInProgress = false;\n      } else this.searchInProgress = true;\n    }\n  },\n  data: function data() {\n    return {\n      searchfilter: '',\n      filters: [],\n      showSearchResults: false,\n      searchInProgress: false,\n      startIndex: 0,\n      endIndex: 42\n    };\n  },\n  methods: {\n    mouseLeave: function mouseLeave() {\n      this.$refs.searchField.blur();\n    },\n    refreshStreams: function refreshStreams() {\n      this.$store.dispatch('getStreams', 'omit=objects,layers&isComputedResult=false&sort=updatedAt');\n    },\n    selectStream: function selectStream(streamId) {\n      this.$emit('selected-stream', streamId);\n    },\n    updateSearch: debounce(function (e) {\n      this.searchfilter = e;\n\n      if (e === '' || e === null) {\n        this.showSearchResults = false;\n        return;\n      }\n\n      this.showSearchResults = true;\n      this.searchInProgress = false;\n\n      try {\n        var filters = this.searchfilter.split(' ').map(function (t) {\n          if (t.includes(':')) return {\n            key: t.split(':')[0],\n            value: t.split(':')[1]\n          };else if (!t.includes('public') && !t.includes('private') && !t.includes('mine') && !t.includes('shared')) // TODO: not elegant\n            return {\n              key: 'name',\n              value: t\n            };else return {\n            key: t,\n            value: null\n          };\n        });\n        this.filters = filters;\n      } catch (_unused) {\n        this.filters = [{\n          key: 'name',\n          value: e\n        }];\n      }\n    }, 1000)\n  }\n};",{"version":3,"sources":["StreamSearch.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-layout align-center row wrap @mouseleave='mouseLeave'>\n    <v-flex xs12 class='pb-0'>\n      <v-text-field ref=\"searchField\" autofocus box flat clearable prepend-inner-icon=\"search\" label='search for streams' @input=\"updateSearch\" v-model='searchfilter' spellcheck=\"false\" :disabled='globalDisabled' :loading='searchInProgress' append-icon=\"refresh\" @click:append=\"$store.dispatch( 'getStreams', 'omit=objects,layers&isComputedResult=false&sort=updatedAt' )\"></v-text-field>\n    </v-flex>\n    <v-flex xs12 v-if='showSearchResults' style='margin-top:-30px' class='mb-5'>\n      <v-card class='elevation-10'>\n        <v-card-title class='subheading'>Search results ({{paginatedStreams.length}} streams)</v-card-title>\n        <v-divider></v-divider>\n        <v-card-text style='max-height: 410px; overflow-y: auto; overflow-x: hidden;' v-if='paginatedStreams.length>0'>\n          <v-list two-line v-if='filters.length > 0'>\n            <v-list-tile v-for='stream in paginatedStreams' :key='stream.streamId'>\n              <v-list-tile-content>\n                <v-list-tile-title>\n                  {{stream.name}}\n                </v-list-tile-title>\n                <v-list-tile-sub-title class='caption'>\n                  <v-icon small>fingerprint</v-icon><span class='caption' style=\"user-select:all;\">{{stream.streamId}}</span>&nbsp;<v-icon small>edit</v-icon>\n                  <timeago :datetime='stream.updatedAt'></timeago>\n                </v-list-tile-sub-title>\n              </v-list-tile-content>\n              <v-list-tile-action>\n                <v-btn fab small depressed @click.native='selectStream(stream.streamId)'>\n                  <v-icon>add</v-icon>\n                </v-btn>\n              </v-list-tile-action>\n            </v-list-tile>\n          </v-list>\n        </v-card-text>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n<script>\nimport debounce from 'lodash.debounce'\n\nexport default {\n  name: 'StreamSearch',\n  props: {\n    streamsToOmit: {\n      type: Array,\n      default ( ) { return [ ] }\n    },\n    globalDisabled: {\n      type: Boolean,\n      default: false\n    },\n    writeOnly: Boolean\n  },\n  computed: {\n    filteredStreams( ) {\n      return this.$store.getters.filteredResources( this.filters, \"streams\" ).filter( s => this.streamsToOmit.indexOf( s.streamId ) === -1 )\n    },\n    paginatedStreams( ) {\n      let toReturn = this.filteredStreams.slice( this.startIndex, this.endIndex )\n      if ( this.writeOnly )\n        toReturn = toReturn.filter( s => s.owner === this.$store.state.user._id || s.canWrite.indexOf( this.$store.state.user._id ) > -1 )\n      return toReturn\n    }\n  },\n  watch: {\n    searchfilter( val ) {\n      if ( val === '' || val === null ) {\n        this.showSearchResults = false\n        this.searchInProgress = false\n      } else\n        this.searchInProgress = true\n    }\n  },\n  data( ) {\n    return {\n      searchfilter: '',\n      filters: [ ],\n      showSearchResults: false,\n      searchInProgress: false,\n      startIndex: 0,\n      endIndex: 42\n    }\n  },\n  methods: {\n    mouseLeave() {\n      this.$refs.searchField.blur()\n    },\n    refreshStreams( ) {\n      this.$store.dispatch( 'getStreams', 'omit=objects,layers&isComputedResult=false&sort=updatedAt' )\n    },\n    selectStream( streamId ) {\n      this.$emit( 'selected-stream', streamId )\n    },\n    updateSearch: debounce( function( e ) {\n      this.searchfilter = e\n\n      if ( e === '' || e === null ) {\n        this.showSearchResults = false\n        return\n      }\n      this.showSearchResults = true\n      this.searchInProgress = false\n      try {\n        let filters = this.searchfilter.split( ' ' ).map( t => {\n          if ( t.includes( ':' ) )\n            return { key: t.split( ':' )[ 0 ], value: t.split( ':' )[ 1 ] }\n          else if ( !t.includes( 'public' ) && !t.includes( 'private' ) && !t.includes( 'mine' ) && !t.includes( 'shared' ) ) // TODO: not elegant\n            return { key: 'name', value: t }\n          else\n            return { key: t, value: null }\n        } )\n        this.filters = filters\n      } catch {\n        this.filters = [ { key: 'name', value: e } ]\n      }\n    }, 1000 ),\n  }\n}\n\n</script>\n<style scoped lang='scss'>\n.hovered {\n  cursor: pointer;\n}\n\n</style>\n"],"sourceRoot":"src/components"}]}