{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/views/StreamHistory.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/views/StreamHistory.vue","mtime":1609071089435},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Promise from \"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport _toConsumableArray from \"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Axios from 'axios';\nimport debounce from 'lodash.debounce';\nimport union from 'lodash.union';\nimport VueSlider from 'vue-slider-component';\nexport default {\n  name: 'StreamHistory',\n  components: {\n    VueSlider: VueSlider\n  },\n  watch: {\n    'stream.children': function streamChildren() {\n      this.fetchData();\n    }\n  },\n  computed: {\n    allTags: function allTags() {\n      return this.$store.getters.allTags;\n    },\n    sizeBound: function sizeBound() {\n      return this.streamChildren.slice(0, 30);\n    },\n    stream: function stream() {\n      var _this = this;\n\n      return this.$store.state.streams.find(function (s) {\n        return s.streamId === _this.$route.params.streamId;\n      });\n    },\n    canEdit: function canEdit() {\n      return this.isOwner ? true : this.stream.canWrite.indexOf(this.$store.state.user._id) !== -1;\n    },\n    isOwner: function isOwner() {\n      return this.stream.owner === this.$store.state.user._id;\n    }\n  },\n  data: function data() {\n    return {\n      parentStream: null,\n      streamChildren: []\n    };\n  },\n  methods: {\n    getDate: function getDate(dateeee) {\n      var date = new Date(dateeee);\n      return date.toLocaleString('en', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    },\n    getTime: function getTime(dateeee) {\n      var date = new Date(dateeee);\n      return date.toLocaleString('en', {\n        timeStyle: \"short\"\n      });\n    },\n    updateTags: debounce(function (e) {\n      this.$store.dispatch('updateStream', {\n        streamId: e.streamId,\n        tags: e.tags\n      });\n    }, 500),\n    sliderChanged: function sliderChanged(args) {\n      console.log(args);\n      var ind = this.$refs.timeSlider.getIndex();\n      this.lowerIndex = ind[0];\n      this.upperIndex = ind[1];\n    },\n    fetchData: function fetchData() {\n      var _this2 = this;\n\n      if (!this.stream.children) return;\n      if (this.stream.children.length === 0) return;\n      this.stream.children.map(function (streamId) {\n        return Axios.get(\"streams/\".concat(streamId, \"?fields=streamId,updatedAt,createdAt,owner,tags,name,commitMessage,description\"));\n      }).reduce(function (promiseChain, currentTask) {\n        return promiseChain.then(function (chainResults) {\n          return currentTask.then(function (currentResult) {\n            return [].concat(_toConsumableArray(chainResults), [currentResult.data.resource]);\n          });\n        });\n      }, _Promise.resolve([])).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(arr) {\n          var stringRes, i, currStream, nextStream, stats;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  arr.forEach(function (s) {\n                    return s.diffResult = {\n                      data: {\n                        objects: {\n                          inA: [],\n                          common: [],\n                          inB: []\n                        }\n                      }\n                    };\n                  });\n                  _this2.streamChildren = arr;\n\n                  _this2.streamChildren.push(_this2.parentStream);\n\n                  _this2.streamChildren = _this2.streamChildren.sort(function (a, b) {\n                    return new Date(b.updatedAt) - new Date(a.updatedAt);\n                  });\n                  stringRes = \"\".concat(_this2.stream.streamId, \"\\n\");\n                  i = 0;\n\n                case 6:\n                  if (!(i < _this2.streamChildren.length - 1)) {\n                    _context.next = 17;\n                    break;\n                  }\n\n                  currStream = _this2.streamChildren[i];\n                  nextStream = _this2.streamChildren[i + 1];\n                  _context.next = 11;\n                  return Axios.get(\"streams/\".concat(currStream.streamId, \"/diff/\").concat(nextStream.streamId));\n\n                case 11:\n                  _this2.streamChildren[i].diffResult = _context.sent;\n                  stats = _this2.streamChildren[i].diffResult.data;\n                  stringRes += \" \\t\".concat(stats.objects.inA.length, \"\\t\").concat(stats.objects.inB.length, \"\\t\").concat(stats.objects.common.length, \"\\t\").concat(stats.objects.inA.length + stats.objects.common.length, \" \\n\");\n\n                case 14:\n                  i++;\n                  _context.next = 6;\n                  break;\n\n                case 17:\n                  console.log(stringRes);\n\n                case 18:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    console.log('hello data');\n    this.parentStream = this.$store.state.streams.find(function (s) {\n      return s.streamId === _this3.$route.params.streamId;\n    });\n    this.fetchData(this.$route.params.streamId);\n  }\n};",{"version":3,"sources":["StreamHistory.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-layout row wrap>\n    <v-flex xs12>\n      <v-card class='elevation-0'>\n        <v-toolbar class='elevation-0 transparent' v-if='stream.parent'>\n          <v-icon small left>home</v-icon>&nbsp;\n          <span class=\"title font-weight-light\">\n            Parent stream: <router-link :to='\"/streams/\" + stream.parent'>{{stream.parent}}</router-link>\n          </span>\n        </v-toolbar>\n        <v-toolbar class='elevation-0 transparent'>\n          <v-icon small left>history</v-icon>&nbsp;\n          <span class='title font-weight-light' v-if='stream.children.length>0'>\n            Showing max 30 versions (total: {{streamChildren.length}} versions).\n          </span>\n          <span class='title font-weight-light' v-else>\n            This stream has no history.\n          </span>\n        </v-toolbar>\n        <v-layout row wrap>\n          <v-flex xs12 pa-3>\n            <v-timeline clipped dense>\n              <v-timeline-item v-for=\"(stream, index) in sizeBound\" :key=\"stream.streamId\" small :color=\"hexFromString(stream.streamId)\">\n                <div :class='`${index===0 ? \"elevation-5\" : \"elevation-0\"} py-3 px-4`'>\n                  <v-btn icon @click.native='$router.push(`/view/${stream.streamId}`)'>\n                    <v-icon>360</v-icon>\n                  </v-btn>\n                  <span :class=\"`headline font-weight-bold ${hexFromString(stream.streamId)}--text`\" v-if='index===0'>\n                    Latest\n                  </span>\n                  <span :class=\"`headline ${index===0 ? 'font-weight-bold' : ''} ${hexFromString(stream.streamId)}--text`\" v-else>\n                    {{getDate(stream.createdAt)}} {{getTime(stream.createdAt)}}\n                  </span>\n                  <timeago :datetime='stream.updatedAt'></timeago>\n                  <p :class=\"`xxxheadline font-weight-light mb-3 ${hexFromString(stream.streamId)}--text`\">\n                    <v-icon small>{{stream.private ? \"lock\" : \"lock_open\"}}</v-icon> &nbsp;\n                    <v-icon small>fingerprint</v-icon> {{stream.streamId}}\n                    <span class='text-capitalize font-weight-bold'>{{stream.name}}</span>\n                  </p>\n                  <div>\n                    <v-combobox @input='updateTags({tags: stream.tags, streamId: stream.streamId})' v-model=\"stream.tags\" :items='allTags' hint='tags' solo persistent-hint small-chips deletable-chips multiple tags>\n                      <template v-slot:no-data>\n                        <p>Add a new tag!</p>\n                      </template>\n                    </v-combobox>\n                    {{stream.commitMessage ? stream.commitMessage : \"No commit message.\"}}\n                  </div>\n                  <v-divider class='my-3'></v-divider>\n                  <div v-if='stream.diffResult'>\n                    <v-tooltip bottom>\n                      <template v-slot:activator=\"{ on }\">\n                        <span class='green--text' v-on=\"on\">\n                          <v-icon small class='green--text'>add_circle_outline</v-icon><b> {{stream.diffResult.data.objects.inA.length}}</b>\n                        </span> &nbsp;\n                      </template>\n                      <span>Added objects</span>\n                    </v-tooltip>\n                    <v-tooltip bottom>\n                      <template v-slot:activator=\"{ on }\">\n                        <span class='red--text' v-on=\"on\">\n                          <v-icon small class='red--text'>remove_circle_outline</v-icon><b> {{stream.diffResult.data.objects.inB.length}}</b>\n                        </span> &nbsp;\n                      </template>\n                      <span>Removed objects</span>\n                    </v-tooltip>\n                    </v-tooltip>\n                    <v-tooltip bottom>\n                      <template v-slot:activator=\"{ on }\">\n                        <span class='' v-on=\"on\"><b><span style='font-size: 20px'>∩</span> {{stream.diffResult.data.objects.common.length}}</b></span> &nbsp;\n                      </template>\n                      <span>Common objects</span>\n                    </v-tooltip>\n                    </v-tooltip>\n                    <v-tooltip bottom>\n                      <template v-slot:activator=\"{ on }\">\n                        <span class='grey--text' v-on=\"on\"><b>Σ {{stream.diffResult.data.objects.inA.length + stream.diffResult.data.objects.common.length}}</b></span>\n                      </template>\n                      <span>Total object count</span>\n                    </v-tooltip>\n                  </div>\n                </div>\n              </v-timeline-item>\n            </v-timeline>\n          </v-flex>\n        </v-layout>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n<script>\nimport Axios from 'axios'\nimport debounce from 'lodash.debounce'\nimport union from 'lodash.union'\n\nimport VueSlider from 'vue-slider-component'\nexport default {\n  name: 'StreamHistory',\n  components: {\n    VueSlider\n  },\n  watch: {\n    'stream.children'( ) {\n      this.fetchData( )\n    }\n  },\n  computed: {\n    allTags( ) {\n      return this.$store.getters.allTags\n    },\n    sizeBound( ) {\n      return this.streamChildren.slice( 0, 30 )\n    },\n    stream( ) {\n      return this.$store.state.streams.find( s => s.streamId === this.$route.params.streamId )\n    },\n    canEdit( ) {\n      return this.isOwner ? true : this.stream.canWrite.indexOf( this.$store.state.user._id ) !== -1\n    },\n    isOwner( ) {\n      return this.stream.owner === this.$store.state.user._id\n    }\n  },\n  data( ) {\n    return {\n      parentStream: null,\n      streamChildren: [ ],\n    }\n  },\n  methods: {\n    getDate( dateeee ) {\n      let date = new Date( dateeee )\n      return date.toLocaleString( 'en', { year: 'numeric', month: 'long', day: 'numeric' } )\n    },\n    getTime( dateeee ) {\n      let date = new Date( dateeee )\n      return date.toLocaleString( 'en', { timeStyle: \"short\" } )\n    },\n    updateTags: debounce( function ( e ) {\n      this.$store.dispatch( 'updateStream', { streamId: e.streamId, tags: e.tags } )\n    }, 500 ),\n\n    sliderChanged( args ) {\n      console.log( args )\n      let ind = this.$refs.timeSlider.getIndex( )\n      this.lowerIndex = ind[ 0 ]\n      this.upperIndex = ind[ 1 ]\n    },\n    fetchData( ) {\n      if ( !this.stream.children ) return\n      if ( this.stream.children.length === 0 ) return\n\n      this.stream.children.map( streamId => Axios.get( `streams/${streamId}?fields=streamId,updatedAt,createdAt,owner,tags,name,commitMessage,description` ) )\n        .reduce( ( promiseChain, currentTask ) => {\n          return promiseChain.then( chainResults => currentTask.then( currentResult => [ ...chainResults, currentResult.data.resource ] ) )\n        }, Promise.resolve( [ ] ) ).then( async arr => {\n\n          arr.forEach( s => s.diffResult = { data: { objects: { inA: [ ], common: [ ], inB: [ ] } } } )\n\n          this.streamChildren = arr\n          this.streamChildren.push( this.parentStream )\n          this.streamChildren = this.streamChildren.sort( ( a, b ) => new Date( b.updatedAt ) - new Date( a.updatedAt ) )\n          let stringRes = `${this.stream.streamId}\\n`\n\n          for ( let i = 0; i < this.streamChildren.length - 1; i++ ) {\n            let currStream = this.streamChildren[ i ]\n            let nextStream = this.streamChildren[ i + 1 ]\n            this.streamChildren[ i ].diffResult = await Axios.get( `streams/${currStream.streamId}/diff/${nextStream.streamId}` )\n            let stats = this.streamChildren[ i ].diffResult.data\n            stringRes += ` \\t${stats.objects.inA.length}\\t${stats.objects.inB.length}\\t${stats.objects.common.length}\\t${stats.objects.inA.length + stats.objects.common.length} \\n`\n          }\n          console.log( stringRes )\n        } )\n    }\n  },\n  mounted( ) {\n    console.log( 'hello data' )\n    this.parentStream = this.$store.state.streams.find( s => s.streamId === this.$route.params.streamId )\n    this.fetchData( this.$route.params.streamId )\n  }\n}\n\n</script>\n<style lang='scss'>\n</style>\n"],"sourceRoot":"src/views"}]}