{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/views/Signin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/views/Signin.vue","mtime":1609071089433},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Axios from 'axios';\nexport default {\n  name: 'SigninView',\n  components: {},\n  computed: {},\n  watch: {},\n  data: function data() {\n    return {\n      server: null,\n      errorMessage: null,\n      showError: false,\n      servers: []\n    };\n  },\n  methods: {\n    prevAccountClick: function prevAccountClick(serverUrl) {\n      this.server = serverUrl;\n      this.login();\n    },\n    login: function login() {\n      this.showError = false;\n      var url = null;\n\n      try {\n        url = new URL(this.server);\n        var originUrl = new URL(window.location.href);\n        localStorage.setItem('__tempServer', url.origin);\n        window.open(\"\".concat(url.origin, \"/signin?redirectUrl=\").concat(window.encodeURIComponent(location.origin + '/#/signin/callback')), 'login screen', 'height=700,width=800');\n      } catch (err) {\n        this.errorMessage = err.message;\n        this.showError = true;\n      }\n    },\n    checkExistingServers: function checkExistingServers() {\n      var _this = this;\n\n      var usedServers = localStorage.getItem('allSpeckleServers') ? localStorage.getItem('allSpeckleServers').split(',') : null;\n      var promises = usedServers.map(function (s) {\n        Axios.get(s).then(function (res) {\n          _this.servers.push({\n            url: s,\n            name: res.data.serverName,\n            version: res.data.version\n          });\n        }).catch(function (err) {\n          _this.servers.push({\n            url: s,\n            name: 'Server Unreachable',\n            version: 'n/a'\n          });\n        });\n      });\n      var servers = [];\n    },\n    checkRedirect: function checkRedirect() {//TODO\n    }\n  },\n  activated: function activated() {\n    this.checkExistingServers();\n  },\n  mounted: function mounted() {\n    this.checkExistingServers();\n    this.checkRedirect();\n\n    if (!window.location.href.includes('speckle.systems')) {\n      this.server = new URL(window.location.href).origin;\n    }\n\n    if (this.$store.state.isAuth === true) {\n      this.appendInfoToUrl('server', {\n        apiUrl: this.$store.state.server\n      });\n      this.$router.push('/');\n    }\n  }\n};",{"version":3,"sources":["Signin.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container fluid fill-height>\n    <v-layout xx-align-center justify-center>\n      <v-flex xs11 md6 lg6>\n        <form @submit.prevent='login' v-if='$store.state.isAuth === false'>\n          <v-card class=\"elevation-3\">\n            <v-toolbar dense class='title small text-uppercase elevation-0' v-if='servers.length!==0'>\n              <v-icon small>account_circle</v-icon>&nbsp;&nbsp;<span class='font-weight-light'>Previously used servers</span>\n            </v-toolbar>\n            <v-card-text v-if='servers.length!==0'>\n              <!-- <p class='pl-3'><small>Previously used accounts:</small></p> -->\n              <v-list two-line>\n                <v-list-tile v-for='server in servers' :key='server.url' @click='prevAccountClick(server.url)' class='elevation-0 my-3'>\n                  <v-list-tile-content>\n                    <v-list-tile-title><b>{{server.name}}</b></v-list-tile-title>\n                    <v-list-tile-sub-title>{{server.url}} <small>({{server.version}})</small></v-list-tile-sub-title>\n                  </v-list-tile-content>\n                  <v-list-tile-action>\n                    <v-btn color=\"primary\" fab small dark>\n                      <v-icon>arrow_right_alt</v-icon>\n                    </v-btn>\n                  </v-list-tile-action>\n                </v-list-tile>\n              </v-list>\n              <!-- {{servers}} -->\n              <!-- {{localStorage}} -->\n            </v-card-text>\n            <v-toolbar dense class='title small text-uppercase elevation-0'>\n              <v-icon small>group_add</v-icon>&nbsp;&nbsp;<span class='font-weight-light'>Sign in</span>\n            </v-toolbar>\n            <v-card-text>\n              <p class='pl-3'>Login or register to a new server by inputting its url below:</p>\n              <v-list two-line>\n                <v-list-tile>\n                  <v-list-tile-content>\n                    <v-text-field style='width: 90%' xxx-prepend-inner-icon='developer_board' hint='server url' type=\"url\" v-model='server' name='server' label='server url' placeholder='https://speckle.yourdomain.com'></v-text-field>\n                  </v-list-tile-content>\n                  <v-list-tile-action>\n                    <v-btn color=\"black\" fab small dark type=\"submit\" @click='login()'>\n                      <v-icon>arrow_right_alt</v-icon>\n                    </v-btn>\n                  </v-list-tile-action>\n                </v-list-tile>\n              </v-list>\n            </v-card-text>\n            <v-card-actions>\n            </v-card-actions>\n            <v-alert v-model=\"showError\" type=\"warning\" dismissible>\n              {{errorMessage}}\n            </v-alert>\n          </v-card>\n        </form>\n        <v-card v-else>\n          <v-card-text>You are already logged in.</v-card-text>\n        </v-card>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n<script>\nimport Axios from 'axios'\n\nexport default {\n  name: 'SigninView',\n  components: {},\n  computed: {},\n  watch: {},\n  data( ) {\n    return {\n      server: null,\n      errorMessage: null,\n      showError: false,\n      servers: [ ]\n    }\n  },\n  methods: {\n    prevAccountClick( serverUrl ) {\n      this.server = serverUrl\n      this.login( )\n    },\n    login( ) {\n      this.showError = false\n      let url = null\n      try {\n        url = new URL( this.server )\n        let originUrl = new URL( window.location.href )\n        localStorage.setItem( '__tempServer', url.origin )\n        window.open( `${url.origin}/signin?redirectUrl=${ window.encodeURIComponent( location.origin +'/#/signin/callback') }`, 'login screen', 'height=700,width=800' )\n      } catch ( err ) {\n        this.errorMessage = err.message\n        this.showError = true\n      }\n    },\n    checkExistingServers( ) {\n      let usedServers = localStorage.getItem( 'allSpeckleServers' ) ? localStorage.getItem( 'allSpeckleServers' ).split( ',' ) : null\n      let promises = usedServers.map( s => {\n        Axios.get( s )\n          .then( res => {\n            this.servers.push( { url: s, name: res.data.serverName, version: res.data.version } )\n          } )\n          .catch( err => {\n            this.servers.push( { url: s, name: 'Server Unreachable', version: 'n/a' } )\n          } )\n      } )\n      let servers = [ ]\n\n    },\n    checkRedirect( ) {\n      //TODO\n    }\n  },\n  activated( ) {\n    this.checkExistingServers( )\n  },\n  mounted( ) {\n    this.checkExistingServers( )\n    this.checkRedirect( )\n\n    if ( !window.location.href.includes( 'speckle.systems' ) ) {\n      this.server = new URL( window.location.href ).origin\n    }\n\n    if ( this.$store.state.isAuth === true ) {\n      this.appendInfoToUrl( 'server', { apiUrl: this.$store.state.server } )\n      this.$router.push( '/' )\n    }\n  }\n}\n\n</script>\n<style scoped lang='scss'>\n</style>\n"],"sourceRoot":"src/views"}]}