{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/store/lambda/component/arupCompute.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/store/lambda/component/arupCompute.vue","mtime":1609071089425},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.sort\";\nimport _Object$assign from \"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Axios from 'axios';\nimport * as Msal from 'msal';\nexport default {\n  name: 'ArupCompute',\n  components: {},\n  props: {\n    block: Object,\n    params: {}\n  },\n  data: function data() {\n    return {\n      libraries: [],\n      functions: []\n    };\n  },\n  computed: {\n    inputs: function inputs() {\n      return _Object$assign({}, this.params.valueData, this.params.pathData);\n    },\n    token: function token() {\n      return this.$store.state.tokens['msal|' + this.block.msal.clientId];\n    }\n  },\n  methods: {\n    selectLibrary: function selectLibrary(payload) {\n      var _this = this;\n\n      this.functions.slice(0, this.functions.length);\n      Axios.get(\"\".concat(payload.api, \"?flat=true\"), {\n        baseURL: \"https://compute.arup.digital/\",\n        headers: {\n          Authorization: 'Bearer ' + this.token\n        }\n      }).then(function (res) {\n        _this.functions = res.data;\n\n        _this.functions.sort(function (x, y) {\n          return x.name.toLowerCase() > y.name.toLowerCase() ? 1 : -1;\n        });\n\n        _this.params.selectedLibrary = payload;\n\n        if (_this.params.selectedFunction) {\n          if (_this.functions.findIndex(function (x) {\n            return x.api === _this.params.selectedFunction.api;\n          }) === -1) _this.params.selectedFunction = null;\n        }\n\n        _this.$emit('update-param', _this.params);\n      });\n    },\n    selectFunction: function selectFunction(payload) {\n      this.params.selectedFunction = payload;\n      this.params.valueData = {};\n      this.params.pathData = {};\n      this.params.outputPath = '';\n      this.$emit('update-param', this.params);\n    },\n    isInputByValue: function isInputByValue(paramName) {\n      if (this.params.valueData) if (this.params.valueData.hasOwnProperty(paramName)) return true;\n      return false;\n    },\n    toggleInputSource: function toggleInputSource(payload) {\n      if (!this.params.pathData) this.params.pathData = {};\n      if (!this.params.valueData) this.params.valueData = {};\n\n      if (this.isInputByValue(payload.name)) {\n        this.params.pathData[payload.name] = null;\n        delete this.params.valueData[payload.name];\n      } else {\n        this.params.valueData[payload.name] = null;\n        delete this.params.pathData[payload.name];\n      }\n\n      this.$emit('update-param', this.params);\n    },\n    updateInput: function updateInput(payload) {\n      if (payload.value === null || payload.value === '' || payload.value === undefined) payload.value = null;\n      if (!this.params.pathData) this.params.pathData = {};\n      if (!this.params.valueData) this.params.valueData = {};\n      if (this.isInputByValue(payload.name)) this.params.valueData[payload.name] = payload.value;else this.params.pathData[payload.name] = payload.value;\n      this.$emit('update-param', this.params);\n    },\n    getLibraries: function () {\n      var _getLibraries = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var rerun,\n            _args = arguments;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                rerun = _args.length > 0 && _args[0] !== undefined ? _args[0] : false;\n                Axios.get(\"api\", {\n                  baseURL: \"https://compute.arup.digital/\",\n                  headers: {\n                    Authorization: 'Bearer ' + this.token\n                  }\n                }).then(function (res) {\n                  _this2.libraries = res.data;\n\n                  _this2.libraries.sort(function (x, y) {\n                    return x.name.toLowerCase() > y.name.toLowerCase() ? 1 : -1;\n                  });\n\n                  if (_this2.params.selectedLibrary) _this2.selectLibrary(_this2.params.selectedLibrary);\n                }).catch(function (err) {\n                  console.log(err);\n\n                  if (err.response.status === 401 && !rerun) {\n                    _this2.$store.dispatch('authenticateBlocks', [_this2.block]).then(function (res) {\n                      _this2.getLibraries(true);\n                    });\n                  } else {\n                    console.log('Unable to access ArupCompute');\n\n                    _this2.$store.commit('DELETE_TOKEN', 'msal|' + _this2.block.msal.clientId);\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getLibraries() {\n        return _getLibraries.apply(this, arguments);\n      }\n\n      return getLibraries;\n    }()\n  },\n  created: function created() {\n    this.getLibraries();\n  }\n};",{"version":3,"sources":["arupCompute.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-layout row wrap>\n    <v-flex xs12>\n      <v-autocomplete\n        return-object\n        :items=\"libraries\"\n        item-text=\"name\"\n        item-value=\"api\"\n        v-model=\"params.selectedLibrary\"\n        v-on:input=\"selectLibrary\"\n        :loading=\"libraries.length === 0\"\n        label=\"Select a library\">\n        <template slot=\"item\" slot-scope=\"libraries\">\n          <div>\n            {{libraries.item.name}}\n            <br>\n            <span class=\"caption\">\n              {{libraries.item.api}}\n            </span>\n          </div>\n        </template>\n      </v-autocomplete>\n    </v-flex>\n\n    <v-flex xs12 v-if=\"params.selectedLibrary\">\n      <v-autocomplete\n        return-object\n        :items=\"functions\"\n        item-text=\"name\"\n        item-value=\"api\"\n        v-model=\"params.selectedFunction\"\n        v-on:input=\"selectFunction\"\n        :loading=\"functions.length === 0\"\n        label=\"Select a function\">\n        <template slot=\"item\" slot-scope=\"functions\">\n          <div>\n            {{functions.item.name}}\n            <br>\n            <span class=\"caption\">\n              {{functions.item.api}}\n            </span>\n          </div>\n        </template>\n      </v-autocomplete>\n    </v-flex>\n\n    <v-flex mt-0 v-if=\"params.selectedLibrary && params.selectedFunction && functions.length > 0\" xs12>\n      <v-card>\n        <v-card-title>\n          <span class='font-weight-light'>\n            Inputs\n          </span>\n        </v-card-title>\n        <v-divider/>\n        <v-layout row wrap pa-3>\n          <v-flex xs12 sm6 md3 v-for='input in params.selectedFunction.inputs' :key='input.name'>\n            <v-tooltip bottom>\n              <template v-slot:activator=\"{ on }\">\n                <div v-on=\"on\" ma-0 pa-0>\n                  <v-autocomplete\n                    v-if=\"(input.values || input.type === 'System.Boolean') && isInputByValue(input.name)\"\n                    :items=\"input.values ? input.values : [true, false]\"\n                    :label='input.name'\n                    v-model='inputs[input.name]'\n                    :append-icon=\"isInputByValue(input.name) ? 'edit' : 'input'\"\n                    :hint=\"isInputByValue(input.name) ? 'Input by value' : 'Input by object path'\"\n                    :persistent-hint=\"true\"\n                    :error-messages=\"!input.isOptional && (!inputs.hasOwnProperty(input.name) || inputs[input.name] === null) ? ['Input required'] : ''\"\n                    @click:append=\"toggleInputSource({name: input.name, value: $event})\"\n                    @change=\"updateInput({name: input.name, value: $event})\">\n                  </v-autocomplete> \n                  <v-text-field\n                    v-else\n                    :label='input.name'\n                    v-model='inputs[input.name]'\n                    :append-icon=\"isInputByValue(input.name) ? 'edit' : 'input'\"\n                    :hint=\"isInputByValue(input.name) ? 'Input by value' : 'Input by object path'\"\n                    :persistent-hint=\"true\"\n                    :error-messages=\"!input.isOptional && (!inputs.hasOwnProperty(input.name) || inputs[input.name] === null) ? 'Input required' : ''\"\n                    @click:append=\"toggleInputSource({name: input.name, value: $event})\"\n                    @change=\"updateInput({name: input.name, value: $event})\">\n                  </v-text-field>\n                </div>\n              </template>\n              <div>\n                <span><b>Description:</b> {{input.description}}</span>\n                <br>\n                <span class=\"caption\"><b>Type:</b> {{input.type}}</span>\n              </div>\n            </v-tooltip>\n          </v-flex>\n        </v-layout>\n        <v-divider/>\n        <v-card-title>\n          <span class='font-weight-light'>\n            Output\n          </span>\n        </v-card-title>\n        <v-divider/>\n        <v-flex xs12>\n          <v-text-field \n            label='Output path'\n            v-model='params.outputPath'\n            hint=\"Object path to embed all results under\"\n            :persistent-hint=\"true\"\n            @change=\"$emit('update-param', params)\">\n          </v-text-field>\n        </v-flex>\n      </v-card>\n    </v-flex>\n\n  </v-layout>\n</template>\n<script>\n\nimport Axios from 'axios'\nimport * as Msal from 'msal'\n\nexport default {\n  name: 'ArupCompute',\n  components: {\n  },\n  props: {\n    block: Object,\n    params: { },\n  },\n  data( ) {\n    return {\n      libraries: [ ],\n      functions: [ ],\n    }\n  },\n  computed: {\n    inputs () {\n      return Object.assign({ }, this.params.valueData, this.params.pathData)\n    },\n    token () {\n      return this.$store.state.tokens['msal|' + this.block.msal.clientId]\n    }\n  },\n  methods: {\n    selectLibrary ( payload ) {\n      this.functions.slice(0, this.functions.length)\n\n      Axios.get(`${payload.api}?flat=true`, {\n        baseURL: `https://compute.arup.digital/`,\n        headers: {\n          Authorization: 'Bearer ' + this.token\n        }\n      })\n      .then ( res =>{\n        this.functions = res.data\n        this.functions.sort((x, y) => (x.name.toLowerCase() > y.name.toLowerCase()) ? 1 : -1)\n\n        this.params.selectedLibrary = payload\n\n        if (this.params.selectedFunction)\n        {\n          if (this.functions.findIndex(x => x.api === this.params.selectedFunction.api) === -1)\n            this.params.selectedFunction = null\n        }\n\n        this.$emit('update-param', this.params)\n      })\n    },\n    selectFunction ( payload ) {\n      this.params.selectedFunction = payload\n\n      this.params.valueData = {}\n      this.params.pathData = {}\n      this.params.outputPath = ''\n\n      this.$emit('update-param', this.params)\n    },\n    isInputByValue ( paramName ) {\n      if (this.params.valueData)\n        if (this.params.valueData.hasOwnProperty(paramName))\n          return true\n\n      return false\n    },\n    toggleInputSource ( payload ) {\n      if (!this.params.pathData)\n        this.params.pathData = {}\n\n      if (!this.params.valueData)\n        this.params.valueData = {}\n        \n      if (this.isInputByValue(payload.name))\n      {\n        this.params.pathData[payload.name] = null\n        delete this.params.valueData[payload.name]\n      }\n      else\n      {\n        this.params.valueData[payload.name] = null\n        delete this.params.pathData[payload.name]\n      }\n\n      this.$emit('update-param', this.params)\n    },\n    updateInput ( payload ) {\n      if (payload.value === null || payload.value === '' || payload.value === undefined)\n        payload.value = null\n\n      if (!this.params.pathData)\n        this.params.pathData = {}\n\n      if (!this.params.valueData)\n        this.params.valueData = {}\n\n      if (this.isInputByValue(payload.name))\n        this.params.valueData[payload.name] = payload.value\n      else\n        this.params.pathData[payload.name] = payload.value\n        \n      this.$emit('update-param', this.params)\n    },\n    async getLibraries ( rerun = false ) {\n      Axios.get(`api`, {\n        baseURL: `https://compute.arup.digital/`,\n        headers: {\n          Authorization: 'Bearer ' + this.token\n        }\n      })\n      .then ( res =>{\n        this.libraries = res.data\n        this.libraries.sort((x, y) => (x.name.toLowerCase() > y.name.toLowerCase()) ? 1 : -1)\n        \n        if (this.params.selectedLibrary)\n          this.selectLibrary (this.params.selectedLibrary)\n      })\n      .catch (err => {\n        console.log(err)\n        if (err.response.status === 401 && !rerun)\n        {\n          this.$store.dispatch('authenticateBlocks', [ this.block ])\n          .then(res => {\n            this.getLibraries(true)\n          })\n        }\n        else\n        {\n          console.log('Unable to access ArupCompute')\n          this.$store.commit('DELETE_TOKEN', 'msal|' + this.block.msal.clientId)\n        }\n      })\n    }\n  },\n  created () {\n    this.getLibraries()\n  }\n}\n</script>\n<style scoped lang='scss'>\n</style>"],"sourceRoot":"src/store/lambda/component"}]}