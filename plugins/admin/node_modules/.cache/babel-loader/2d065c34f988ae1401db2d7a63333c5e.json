{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/views/Trash.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/views/Trash.vue","mtime":1609071089436},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _getIterator from \"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/@babel/runtime-corejs2/core-js/get-iterator\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SimpleCard from '../components/SimpleCard.vue';\nexport default {\n  name: 'TrashView',\n  components: {\n    SimpleCard: SimpleCard\n  },\n  watch: {\n    filterText: function filterText() {\n      this.pageNumber = 0;\n    }\n  },\n  computed: {\n    projects: function projects() {\n      return this.$store.state.projects.filter(function (p) {\n        return p.deleted === true;\n      });\n    },\n    streams: function streams() {\n      return this.$store.state.streams.filter(function (s) {\n        return s.deleted === true;\n      });\n    },\n    allResources: function allResources() {\n      var _this = this;\n\n      return [].concat(_toConsumableArray(this.streams), _toConsumableArray(this.projects)).filter(function (res) {\n        return res.owner === _this.$store.state.user._id;\n      }).sort(function (a, b) {\n        return new Date(b.updatedAt) - new Date(a.updatedAt);\n      });\n    },\n    allResourcesFiltered: function allResourcesFiltered() {\n      var _this2 = this;\n\n      if (this.filterText === '' || this.filterText === null) return this.allResources;\n      return this.allResources.filter(function (r) {\n        return r.name ? r.name.toLowerCase().includes(_this2.filterText.toLowerCase()) : true;\n      }).sort(function (a, b) {\n        return a.updatedAt > b.updatedAt;\n      });\n    },\n    allResourcesPaginated: function allResourcesPaginated() {\n      return this.allResourcesFiltered.slice(this.currentIndex + this.pageNumber * this.sliceSize, this.sliceSize * (this.pageNumber + 1));\n    }\n  },\n  data: function data() {\n    return {\n      filterText: '',\n      currentIndex: 0,\n      sliceSize: 6,\n      pageNumber: 0,\n      selectedResources: []\n    };\n  },\n  methods: {\n    deleteForever: function deleteForever(resource) {\n      if (resource.streamId) this.$store.dispatch('deleteStream', {\n        streamId: resource.streamId\n      });else this.$store.dispatch('deleteProject', {\n        _id: resource._id\n      });\n    },\n    deleteAllSelected: function deleteAllSelected() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(this.selectedResources), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var resource = _step.value;\n          if (resource.streamId) this.$store.dispatch('deleteStream', {\n            streamId: resource.streamId\n          });else this.$store.dispatch('deleteProject', {\n            _id: resource._id\n          });\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.clearSelection();\n    },\n    restore: function restore(resource) {\n      if (resource.streamId) this.$store.dispatch('updateStream', {\n        streamId: resource.streamId,\n        deleted: false\n      });else this.$store.dispatch('updateProject', {\n        _id: resource._id,\n        deleted: false\n      });\n    },\n    restoreAllSelected: function restoreAllSelected() {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _getIterator(this.selectedResources), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var resource = _step2.value;\n          if (resource.streamId) this.$store.dispatch('updateStream', {\n            streamId: resource.streamId,\n            deleted: false\n          });else this.$store.dispatch('updateProject', {\n            _id: resource._id,\n            deleted: false\n          });\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      this.clearSelection();\n    },\n    clearSelection: function clearSelection() {\n      this.selectedResources.forEach(function (resource) {\n        bus.$emit('unselect-all-resources');\n      });\n    },\n    selectAll: function selectAll() {\n      var _this3 = this;\n\n      this.allResourcesPaginated.forEach(function (resource) {\n        var index = _this3.selectedResources.findIndex(function (res) {\n          return res._id === resource._id;\n        });\n\n        if (index === -1) {\n          bus.$emit('select-resource', resource._id);\n        }\n      });\n    },\n    selectThis: function selectThis(resource) {\n      var index = this.selectedResources.findIndex(function (r) {\n        return r._id === resource._id;\n      });\n      if (index === -1) this.selectedResources.unshift(resource);else this.selectedResources.splice(index, 1);\n    }\n  },\n  created: function created() {}\n};",{"version":3,"sources":["Trash.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container grid-list-xl>\n    <!-- Toolbar for stream selection/bulk operations -->\n    <v-toolbar fixed v-if='selectedResources.length > 0' style='z-index:100' class='elevation-0'>\n      <v-toolbar-items>\n        <v-btn icon color='primary' class='md-raised md-dense md-primary' @click.native='clearSelection'>\n          <v-icon>close</v-icon>\n        </v-btn>\n        <v-btn flat @click.native='selectAll()'>select all</v-btn>\n      </v-toolbar-items>\n      <v-spacer></v-spacer>\n      <v-toolbar-items>\n        <v-btn flat color='error' @click.native='deleteAllSelected()'>Delete Permanently ({{selectedResources.length}})</v-btn>\n        <v-btn color='primary' depressed @click.native='restoreAllSelected()'>Restore</v-btn>\n      </v-toolbar-items>\n    </v-toolbar>\n    <v-layout row wrap>\n      <v-flex xs12 py-5 class='headline font-weight-light'>\n        Welcome to the recycle bin ({{allResources.length}} items). You can restore them or delete them permanently.<br><strong>Take care, there's no undo button!</strong>\n      </v-flex>\n      <v-flex xs12>\n        <v-text-field solo clearable label=\"Search for a resource\" prepend-inner-icon=\"search\" @input=\"\" spellcheck=\"false\" v-model='filterText'></v-text-field>\n        <div v-if='filterText && filterText!==\"\"'>\n          <p class='title font-weight-light my-3 mx-1'>Found {{allResourcesFiltered.length}} resources matching your search criteria.</p>\n        </div>\n      </v-flex>\n      <!-- Pagination top  -->\n      <v-flex xs12>\n        <v-btn icon small @click.native='pageNumber=0' :disabled='pageNumber===0'>\n          <v-icon>first_page</v-icon>\n        </v-btn>\n        <v-btn icon small @click.native='pageNumber-=1' :disabled='pageNumber===0'>\n          <v-icon>chevron_left</v-icon>\n        </v-btn>\n        <v-btn icon @click.native='pageNumber+=1' :disabled='pageNumber >= Math.round(allResourcesFiltered.length/sliceSize)'>\n          <v-icon>chevron_right</v-icon>\n        </v-btn>\n        <v-btn icon small @click.native='pageNumber=Math.round(allResourcesFiltered.length/sliceSize)' :disabled='pageNumber >= Math.round(allResourcesFiltered.length/sliceSize)'>\n          <v-icon>last_page</v-icon>\n        </v-btn>\n        <span class='caption' xxxstyle=\"position: relative;top:8px;\">{{pageNumber}} / {{(allResourcesFiltered.length/sliceSize).toFixed(0)}}</span>\n      </v-flex>\n      <v-flex xs12>\n        <v-layout row wrap>\n          <v-flex xs12 sm6 lg6 v-for='resource in allResourcesPaginated' :key='resource._id'>\n            <simple-card :resource='resource' v-on:selected='selectThis' xxxxv-on:deleted='clearSelection'></simple-card>\n          </v-flex>\n        </v-layout>\n      </v-flex>\n      <!-- Pagination bottom  -->\n      <v-flex xs12>\n        <v-btn icon small @click.native='pageNumber=0' :disabled='pageNumber===0'>\n          <v-icon>first_page</v-icon>\n        </v-btn>\n        <v-btn icon small @click.native='pageNumber-=1' :disabled='pageNumber===0'>\n          <v-icon>chevron_left</v-icon>\n        </v-btn>\n        <v-btn icon @click.native='pageNumber+=1' :disabled='pageNumber >= Math.round(allResourcesFiltered.length/sliceSize)'>\n          <v-icon>chevron_right</v-icon>\n        </v-btn>\n        <v-btn icon small @click.native='pageNumber=Math.round(allResourcesFiltered.length/sliceSize)' :disabled='pageNumber >= Math.round(allResourcesFiltered.length/sliceSize)'>\n          <v-icon>last_page</v-icon>\n        </v-btn>\n        <span class='caption' xxxstyle=\"position: relative;top:8px;\">{{pageNumber}} / {{(allResourcesFiltered.length/sliceSize).toFixed(0)}}</span>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n<script>\nimport SimpleCard from '../components/SimpleCard.vue'\n\nexport default {\n  name: 'TrashView',\n  components: {\n    SimpleCard\n  },\n  watch: {\n    filterText( ) {\n      this.pageNumber = 0\n    }\n  },\n  computed: {\n    projects( ) {\n      return this.$store.state.projects.filter( p => p.deleted === true )\n    },\n    streams( ) {\n      return this.$store.state.streams.filter( s => s.deleted === true )\n    },\n    allResources( ) {\n      return [ ...this.streams, ...this.projects ].filter( res => res.owner === this.$store.state.user._id ).sort( ( a, b ) => {\n        return new Date( b.updatedAt ) - new Date( a.updatedAt );\n      } )\n    },\n    allResourcesFiltered( ) {\n      if ( this.filterText === '' || this.filterText === null ) return this.allResources\n      return this.allResources.filter( r => r.name ? r.name.toLowerCase( ).includes( this.filterText.toLowerCase( ) ) : true ).sort( ( a, b ) => a.updatedAt > b.updatedAt )\n    },\n    allResourcesPaginated( ) {\n      return this.allResourcesFiltered.slice( this.currentIndex + this.pageNumber * this.sliceSize, this.sliceSize * ( this.pageNumber + 1 ) )\n    }\n  },\n  data( ) {\n    return {\n      filterText: '',\n      currentIndex: 0,\n      sliceSize: 6,\n      pageNumber: 0,\n      selectedResources: [ ]\n    }\n  },\n  methods: {\n    deleteForever( resource ) {\n      if ( resource.streamId )\n        this.$store.dispatch( 'deleteStream', { streamId: resource.streamId } )\n      else\n        this.$store.dispatch( 'deleteProject', { _id: resource._id } )\n    },\n    deleteAllSelected( ) {\n      for ( let resource of this.selectedResources ) {\n        if ( resource.streamId )\n          this.$store.dispatch( 'deleteStream', { streamId: resource.streamId } )\n        else\n          this.$store.dispatch( 'deleteProject', { _id: resource._id } )\n      }\n      this.clearSelection( )\n    },\n    restore( resource ) {\n      if ( resource.streamId )\n        this.$store.dispatch( 'updateStream', { streamId: resource.streamId, deleted: false } )\n      else\n        this.$store.dispatch( 'updateProject', { _id: resource._id, deleted: false } )\n    },\n    restoreAllSelected( ) {\n      for ( let resource of this.selectedResources ) {\n        if ( resource.streamId )\n          this.$store.dispatch( 'updateStream', { streamId: resource.streamId, deleted: false } )\n        else\n          this.$store.dispatch( 'updateProject', { _id: resource._id, deleted: false } )\n      }\n      this.clearSelection( )\n    },\n    clearSelection( ) {\n      this.selectedResources.forEach( resource => {\n        bus.$emit( 'unselect-all-resources' )\n      } )\n    },\n    selectAll( ) {\n      this.allResourcesPaginated.forEach( resource => {\n        let index = this.selectedResources.findIndex( res => res._id === resource._id )\n        if ( index === -1 ) {\n          bus.$emit( 'select-resource', resource._id )\n        }\n      } )\n    },\n    selectThis( resource ) {\n      let index = this.selectedResources.findIndex( r => r._id === resource._id )\n      if ( index === -1 )\n        this.selectedResources.unshift( resource )\n      else\n        this.selectedResources.splice( index, 1 )\n    }\n  },\n  created( ) {}\n}\n\n</script>\n<style scoped lang='scss'>\n</style>\n"],"sourceRoot":"src/views"}]}