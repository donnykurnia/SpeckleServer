{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/views/Processors.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/views/Processors.vue","mtime":1609071089432},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport debounce from 'lodash.debounce';\nimport ProcessorCard from '../components/ProcessorCard.vue';\nexport default {\n  name: 'ProcessorView',\n  components: {\n    ProcessorCard: ProcessorCard\n  },\n  computed: {\n    processors: function processors() {\n      var _this = this;\n\n      return this.$store.state.processors.filter(function (p) {\n        return p.owner.indexOf(_this.$store.state.user._id) !== -1;\n      });\n    },\n    filteredProcessors: function filteredProcessors() {\n      var _this2 = this;\n\n      if (this.searchfilter && this.searchfilter !== '') return this.processors.filter(function (p) {\n        return p.name.toLowerCase().includes(_this2.searchfilter.toLowerCase());\n      });\n      return this.processors;\n    },\n    paginatedProcessors: function paginatedProcessors() {\n      return this.filteredProcessors.slice(this.currentIndex + this.pageNumber * this.sliceSize, this.sliceSize * (this.pageNumber + 1));\n    }\n  },\n  data: function data() {\n    return {\n      currentIndex: 0,\n      sliceSize: 6,\n      pageNumber: 0,\n      searchfilter: '',\n      selectedProcessors: [],\n      isSearching: false\n    };\n  },\n  methods: {\n    selectThis: function selectThis(processor) {\n      var index = this.selectedProcessors.findIndex(function (p) {\n        return p._id === processor._id;\n      });\n      if (index === -1) this.selectedProcessors.unshift(processor);else this.selectedProcessors.splice(index, 1);\n    },\n    selectAll: function selectAll() {\n      var _this3 = this;\n\n      this.paginatedProcessors.forEach(function (processor) {\n        var index = _this3.selectedProcessors.findIndex(function (s) {\n          return s._id === processor._id;\n        });\n\n        if (index === -1) {\n          bus.$emit('select-processor', processor._id);\n        }\n      });\n    },\n    createProcessor: function createProcessor() {\n      var _this4 = this;\n\n      this.$store.dispatch('createProcessor', {\n        name: 'A brand new speckle processor'\n      }).then(function (res) {\n        _this4.$router.push(\"/processors/\".concat(res._id));\n      });\n    },\n    deleteSelectedProcessors: function deleteSelectedProcessors() {\n      var _this5 = this;\n\n      this.selectedProcessors.forEach(function (processor) {\n        _this5.$store.dispatch('deleteProcessor', {\n          _id: processor._id\n        });\n      });\n      this.selectedProcessors.splice(0, this.selectedProcessors.length);\n      this.clearSelection();\n    },\n    clearSelection: function clearSelection() {\n      bus.$emit('unselect-all-processors');\n    },\n    updateSearch: debounce(function (e) {\n      this.pageNumber = 0;\n      this.isSearching = false;\n      this.searchfilter = e;\n    }, 1000)\n  }\n};",{"version":3,"sources":["Processors.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container grid-list-xl>\n    <!-- Toolbar for processor selection/bulk operations -->\n    <v-toolbar fixed v-if='selectedProcessors.length > 0' style='z-index:100'>\n      <v-toolbar-items>\n        <v-btn icon color='primary' class='md-raised md-dense md-primary' @click.native='clearSelection'>\n          <v-icon>close</v-icon>\n        </v-btn>\n        <v-btn flat @click.native='selectAll()'>select all</v-btn>\n      </v-toolbar-items>\n      <v-spacer></v-spacer>\n      <v-toolbar-items>\n        <v-btn flat color='error' @click.native='deleteSelectedProcessors'>Delete</v-btn>\n      </v-toolbar-items>\n    </v-toolbar>\n    <!-- End toolbar -->\n    <v-layout row wrap>\n      <v-flex xs12 py-5 class='headline font-weight-light'>\n        Processor allows you to run scripts on streams.\n      </v-flex>\n      <!-- Empty state handler -->\n      <v-flex xs12 v-if='processors.length === 0'>\n        <p class='title font-weight-light'>Hmm, you don't have any processors yet. Don't worry! You can create a new one here (big blue button in the lower right corner)!\n        </p>\n      </v-flex>\n      <v-flex xs12>\n        <v-text-field solo clearable label=\"Search for a processor\" prepend-inner-icon=\"search\" @input=\"updateSearch\" spellcheck=\"false\" v-model='searchfilter' :loading='isSearching' append-icon=\"refresh\" @click:append=\"$store.dispatch( 'getProcessors' )\"></v-text-field>\n        <div v-if='searchfilter && searchfilter!==\"\"'>\n          <p class='title font-weight-light my-3 mx-1'>Found {{filteredProcessors.length}} processor{{filteredProcessors.length===1?'':'s'}} matching your search criteria.</p>\n        </div>\n      </v-flex>\n    </v-layout>\n    <!-- All the processor cards will flow below -->\n    <v-layout row wrap>\n      <!-- Pagination top (TODO: extract to component) -->\n      <v-flex xs12>\n        <v-btn icon small @click.native='pageNumber=0' :disabled='pageNumber===0'>\n          <v-icon>first_page</v-icon>\n        </v-btn>\n        <v-btn icon small @click.native='pageNumber-=1' :disabled='pageNumber===0'>\n          <v-icon>chevron_left</v-icon>\n        </v-btn>\n        <v-btn icon @click.native='pageNumber+=1' :disabled='pageNumber >= Math.round(filteredProcessors.length/sliceSize)'>\n          <v-icon>chevron_right</v-icon>\n        </v-btn>\n        <v-btn icon small @click.native='pageNumber=Math.round(filteredProcessors.length/sliceSize)' :disabled='pageNumber >= Math.round(filteredProcessors.length/sliceSize)'>\n          <v-icon>last_page</v-icon>\n        </v-btn>\n        <span class='caption' xxxstyle=\"position: relative;top:8px;\">{{pageNumber}} / {{(filteredProcessors.length/sliceSize).toFixed(0)}}</span>\n      </v-flex>\n      <!-- The actual processor cards -->\n      <v-flex xs12 sm6 v-for='processor in paginatedProcessors' :key='processor._id'>\n        <processor-card :resource='processor' v-on:selected='selectThis' v-on:deleted='clearSelection'></processor-card>\n      </v-flex>\n      <!-- Pagination bottom  -->\n      <v-flex xs12>\n        <v-btn icon small @click.native='pageNumber=0' :disabled='pageNumber===0'>\n          <v-icon>first_page</v-icon>\n        </v-btn>\n        <v-btn icon small @click.native='pageNumber-=1' :disabled='pageNumber===0'>\n          <v-icon>chevron_left</v-icon>\n        </v-btn>\n        <v-btn icon @click.native='pageNumber+=1' :disabled='pageNumber >= Math.round(filteredProcessors.length/sliceSize)'>\n          <v-icon>chevron_right</v-icon>\n        </v-btn>\n        <v-btn icon small @click.native='pageNumber=Math.round(filteredProcessors.length/sliceSize)' :disabled='pageNumber >= Math.round(filteredProcessors.length/sliceSize)'>\n          <v-icon>last_page</v-icon>\n        </v-btn>\n        <span class='caption' xxxstyle=\"position: relative;top:8px;\">{{pageNumber}} / {{(filteredProcessors.length/sliceSize).toFixed(0)}}</span>\n      </v-flex>\n    </v-layout>\n    <!-- Big fat fab button to create a new processor -->\n    <v-btn color=\"primary\" dark fixed large bottom right fab @click.native='createProcessor'>\n      <v-icon>add</v-icon>\n    </v-btn>\n  </v-container>\n</template>\n<script>\nimport debounce from 'lodash.debounce'\nimport ProcessorCard from '../components/ProcessorCard.vue'\n\nexport default {\n  name: 'ProcessorView',\n  components: {\n    ProcessorCard\n  },\n  computed: {\n    processors( ) {\n      return this.$store.state.processors.filter( p => p.owner.indexOf(this.$store.state.user._id) !== -1)\n    },\n    filteredProcessors( ) {\n      if ( this.searchfilter && this.searchfilter !== '' )\n        return this.processors.filter( p => p.name.toLowerCase().includes( this.searchfilter.toLowerCase() ) )\n      return this.processors\n    },\n    paginatedProcessors( ) {\n      return this.filteredProcessors.slice( this.currentIndex + this.pageNumber * this.sliceSize, this.sliceSize * ( this.pageNumber + 1 ) )\n    }\n  },\n  data( ) {\n    return {\n      currentIndex: 0,\n      sliceSize: 6,\n      pageNumber: 0,\n      searchfilter: '',\n      selectedProcessors: [ ],\n      isSearching: false\n    }\n  },\n  methods: {\n    selectThis( processor ) {\n      let index = this.selectedProcessors.findIndex( p => p._id === processor._id )\n      if ( index === -1 )\n        this.selectedProcessors.unshift( processor )\n      else\n        this.selectedProcessors.splice( index, 1 )\n    },\n    selectAll( ) {\n      this.paginatedProcessors.forEach( processor => {\n        let index = this.selectedProcessors.findIndex( s => s._id === processor._id )\n        if ( index === -1 ) {\n          bus.$emit( 'select-processor', processor._id )\n        }\n      } )\n    },\n    createProcessor( ) {\n      this.$store.dispatch( 'createProcessor', { name: 'A brand new speckle processor' } )\n        .then( res => {\n          this.$router.push( `/processors/${res._id}` )\n        } )\n    },\n    deleteSelectedProcessors( ) {\n      this.selectedProcessors.forEach( processor => {\n        this.$store.dispatch( 'deleteProcessor', { _id: processor._id } )\n      } )\n      this.selectedProcessors.splice( 0, this.selectedProcessors.length )\n      this.clearSelection( )\n    },\n    clearSelection( ) {\n      bus.$emit( 'unselect-all-processors' )\n    },\n    updateSearch: debounce( function( e ) {\n      this.pageNumber = 0\n      this.isSearching = false\n      this.searchfilter = e\n    }, 1000 ),\n  }\n}\n\n</script>\n<style scoped lang='scss'>\n</style>\n"],"sourceRoot":"src/views"}]}