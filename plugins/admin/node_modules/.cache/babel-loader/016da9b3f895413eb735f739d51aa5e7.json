{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/views/Projects.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/views/Projects.vue","mtime":1609071089433},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport debounce from 'lodash.debounce';\nimport ProjectCard from '../components/ProjectCard.vue';\nexport default {\n  name: 'ProjectsView',\n  components: {\n    ProjectCard: ProjectCard\n  },\n  computed: {\n    projects: function projects() {\n      return this.$store.state.projects.filter(function (p) {\n        return p.deleted === false;\n      });\n    },\n    filteredProjects: function filteredProjects() {\n      if (this.searchfilter && this.searchfilter !== '') return this.$store.getters.filteredResources(this.filters, \"projects\"); // return this.projects.filter( p => p.name.toLowerCase().includes( this.searchfilter.toLowerCase() ) )\n\n      return this.projects;\n    },\n    paginatedProjects: function paginatedProjects() {\n      return this.filteredProjects.slice(this.currentIndex + this.pageNumber * this.sliceSize, this.sliceSize * (this.pageNumber + 1));\n    },\n    allTags: function allTags() {\n      return this.$store.getters.allProjectTags;\n    },\n    allJobNumbers: function allJobNumbers() {\n      return this.$store.getters.allJobNumbersProjects;\n    }\n  },\n  data: function data() {\n    return {\n      currentIndex: 0,\n      sliceSize: 6,\n      pageNumber: 0,\n      searchfilter: '',\n      selectedProjects: [],\n      isSearching: false,\n      filters: []\n    };\n  },\n  methods: {\n    addSearchQuery: function addSearchQuery(key, tag) {\n      var _this = this;\n\n      this.pageNumber = 0;\n      var tempFilter = \"\".concat(key, \":\").concat(tag);\n      this.searchfilter = tempFilter;\n      setTimeout(function () {\n        _this.isSearching = false;\n      }, 50);\n\n      try {\n        var filters = tempFilter.split(' ').map(function (t) {\n          if (t.includes(':')) return {\n            key: t.split(':')[0],\n            value: t.split(':')[1]\n          };else if (!t.includes('public') && !t.includes('private') && !t.includes('mine') && !t.includes('shared')) // TODO: not elegant\n            return {\n              key: 'name',\n              value: t\n            };else return {\n            key: t,\n            value: null\n          };\n        });\n        this.filters = filters;\n      } catch (_unused) {\n        this.filters = [{\n          key: 'name',\n          value: e\n        }];\n      }\n\n      this.isSearching = false;\n    },\n    selectThis: function selectThis(project) {\n      var index = this.selectedProjects.findIndex(function (p) {\n        return p._id === project._id;\n      });\n      if (index === -1) this.selectedProjects.unshift(project);else this.selectedProjects.splice(index, 1);\n    },\n    selectAll: function selectAll() {\n      var _this2 = this;\n\n      this.paginatedProjects.forEach(function (project) {\n        var index = _this2.selectedProjects.findIndex(function (s) {\n          return s._id === project._id;\n        });\n\n        if (index === -1) {\n          bus.$emit('select-project', project._id);\n        }\n      });\n    },\n    createProject: function createProject() {\n      var _this3 = this;\n\n      this.$store.dispatch('createProject', {\n        name: 'A brand new speckle project'\n      }).then(function (res) {\n        _this3.$router.push(\"/projects/\".concat(res._id));\n      });\n    },\n    deleteSelectedProjects: function deleteSelectedProjects() {\n      var _this4 = this;\n\n      this.selectedProjects.forEach(function (project) {\n        _this4.$store.dispatch('updateProject', {\n          _id: project._id,\n          deleted: true\n        });\n      });\n      this.clearSelection();\n    },\n    clearSelection: function clearSelection() {\n      bus.$emit('unselect-all-projects');\n    },\n    updateSearch: debounce(function (e) {\n      this.pageNumber = 0;\n      this.isSearching = false;\n      this.searchfilter = e;\n      this.searchfilter = e;\n\n      try {\n        var filters = this.searchfilter.split(' ').map(function (t) {\n          if (t.includes(':')) return {\n            key: t.split(':')[0],\n            value: t.split(':')[1]\n          };else if (!t.includes('public') && !t.includes('private') && !t.includes('mine') && !t.includes('shared')) // TODO: not elegant\n            return {\n              key: 'name',\n              value: t\n            };else return {\n            key: t,\n            value: null\n          };\n        });\n        this.filters = filters;\n      } catch (_unused2) {\n        this.filters = [{\n          key: 'name',\n          value: e\n        }];\n      }\n    }, 1000)\n  },\n  created: function created() {}\n};",{"version":3,"sources":["Projects.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container grid-list-xl>\n    <!-- Toolbar for project selection/bulk operations -->\n    <v-toolbar fixed v-if='selectedProjects.length > 0' style='z-index:100'>\n      <v-toolbar-items>\n        <v-btn icon color='primary' class='md-raised md-dense md-primary' @click.native='clearSelection'>\n          <v-icon>close</v-icon>\n        </v-btn>\n        <v-btn flat @click.native='selectAll()'>select all</v-btn>\n      </v-toolbar-items>\n      <v-spacer></v-spacer>\n      <v-toolbar-items>\n        <v-btn flat color='error' @click.native='deleteSelectedProjects'>Archive</v-btn>\n      </v-toolbar-items>\n    </v-toolbar>\n    <!-- End toolbar -->\n    <v-layout row wrap>\n      <v-flex xs12 py-5 class='headline font-weight-light'>\n        Projects allow you to share streams with a team.\n      </v-flex>\n      <!-- Empty state handler -->\n      <v-flex xs12 v-if='projects.length === 0'>\n        <p class='title font-weight-light'>\n          👋 Hello {{$store.state.user.name}}! It looks like you haven't created any projects yet. Don't forget to check out the <a href='https://speckle.systems/docs/web/management' target='_blank'>guide</a>!\n        </p>\n      </v-flex>\n      <v-flex xs12>\n        <v-text-field solo clearable label=\"Search for a project\" prepend-inner-icon=\"search\" @input=\"updateSearch\" spellcheck=\"false\" v-model='searchfilter' :loading='isSearching' append-icon=\"refresh\" @click:append=\"$store.dispatch( 'getProjects' )\"></v-text-field>\n        <div v-if='searchfilter && searchfilter!==\"\"'>\n          <p class='title font-weight-light my-3 mx-1'>Found {{filteredProjects.length}} project{{filteredProjects.length===1?'':'s'}} matching your search criteria.</p>\n        </div>\n        <v-expansion-panel>\n          <v-expansion-panel-content>\n            <template v-slot:header>Search Options</template>\n            <v-card class='pa-3'>\n              <v-expansion-panel>\n                <v-expansion-panel-content>\n                  <template v-slot:header>Tags</template>\n                  <v-card class='pa-3'>\n                    <v-chip v-for='tag in allTags' :key='tag' small dense @click='addSearchQuery(\"tag\", tag)'>\n                      {{tag}}\n                    </v-chip>\n                  </v-card>\n                </v-expansion-panel-content>\n                <!-- <v-expansion-panel> -->\n                <v-expansion-panel-content>\n                  <template v-slot:header>Job Numbers</template>\n                  <v-card class='pa-3'>\n                    <v-chip v-for='jnumber in allJobNumbers' :key='jnumber' @click='addSearchQuery(\"jn\", jnumber)'>{{jnumber}}</v-chip>\n                  </v-card>\n                </v-expansion-panel-content>\n              </v-expansion-panel>\n            </v-card>\n          </v-expansion-panel-content>\n        </v-expansion-panel>\n      </v-flex>\n    </v-layout>\n    <!-- All the project cards will flow below -->\n    <v-layout row wrap>\n      <!-- Pagination top (TODO: extract to component) -->\n      <v-flex xs12>\n        <v-btn icon small @click.native='pageNumber=0' :disabled='pageNumber===0'>\n          <v-icon>first_page</v-icon>\n        </v-btn>\n        <v-btn icon small @click.native='pageNumber-=1' :disabled='pageNumber===0'>\n          <v-icon>chevron_left</v-icon>\n        </v-btn>\n        <v-btn icon @click.native='pageNumber+=1' :disabled='pageNumber >= Math.round(filteredProjects.length/sliceSize)'>\n          <v-icon>chevron_right</v-icon>\n        </v-btn>\n        <v-btn icon small @click.native='pageNumber=Math.round(filteredProjects.length/sliceSize)' :disabled='pageNumber >= Math.round(filteredProjects.length/sliceSize)'>\n          <v-icon>last_page</v-icon>\n        </v-btn>\n        <span class='caption' xxxstyle=\"position: relative;top:8px;\">{{pageNumber}} / {{(filteredProjects.length/sliceSize).toFixed(0)}}</span>\n      </v-flex>\n      <!-- The actual project cards -->\n      <v-flex xs12 sm6 v-for='project in paginatedProjects' :key='project._id'>\n        <project-card :resource='project' v-on:selected='selectThis' v-on:deleted='clearSelection'></project-card>\n      </v-flex>\n      <!-- Pagination bottom  -->\n      <v-flex xs12>\n        <v-btn icon small @click.native='pageNumber=0' :disabled='pageNumber===0'>\n          <v-icon>first_page</v-icon>\n        </v-btn>\n        <v-btn icon small @click.native='pageNumber-=1' :disabled='pageNumber===0'>\n          <v-icon>chevron_left</v-icon>\n        </v-btn>\n        <v-btn icon @click.native='pageNumber+=1' :disabled='pageNumber >= Math.round(filteredProjects.length/sliceSize)'>\n          <v-icon>chevron_right</v-icon>\n        </v-btn>\n        <v-btn icon small @click.native='pageNumber=Math.round(filteredProjects.length/sliceSize)' :disabled='pageNumber >= Math.round(filteredProjects.length/sliceSize)'>\n          <v-icon>last_page</v-icon>\n        </v-btn>\n        <span class='caption' xxxstyle=\"position: relative;top:8px;\">{{pageNumber}} / {{(filteredProjects.length/sliceSize).toFixed(0)}}</span>\n      </v-flex>\n    </v-layout>\n    <!-- Big fat fab button to create a new project -->\n    <v-btn color=\"primary\" dark fixed large bottom right fab @click.native='createProject'>\n      <v-icon>add</v-icon>\n    </v-btn>\n  </v-container>\n</template>\n<script>\nimport debounce from 'lodash.debounce'\nimport ProjectCard from '../components/ProjectCard.vue'\n\nexport default {\n  name: 'ProjectsView',\n  components: {\n    ProjectCard\n  },\n  computed: {\n    projects( ) {\n      return this.$store.state.projects.filter( p => p.deleted === false )\n    },\n    filteredProjects( ) {\n      if ( this.searchfilter && this.searchfilter !== '' )\n        return this.$store.getters.filteredResources( this.filters, \"projects\" )\n      // return this.projects.filter( p => p.name.toLowerCase().includes( this.searchfilter.toLowerCase() ) )\n      return this.projects\n    },\n    paginatedProjects( ) {\n      return this.filteredProjects.slice( this.currentIndex + this.pageNumber * this.sliceSize, this.sliceSize * ( this.pageNumber + 1 ) )\n    },\n    allTags( ) {\n      return this.$store.getters.allProjectTags\n    },\n    allJobNumbers( ) {\n      return this.$store.getters.allJobNumbersProjects\n    },\n  },\n  data( ) {\n    return {\n      currentIndex: 0,\n      sliceSize: 6,\n      pageNumber: 0,\n      searchfilter: '',\n      selectedProjects: [ ],\n      isSearching: false,\n      filters: [ ]\n    }\n  },\n  methods: {\n    addSearchQuery( key, tag ) {\n      this.pageNumber = 0\n      let tempFilter = `${key}:${tag}`\n      this.searchfilter = tempFilter\n      setTimeout( ( ) => { this.isSearching = false }, 50 )\n      try {\n        let filters = tempFilter.split( ' ' ).map( t => {\n          if ( t.includes( ':' ) )\n            return { key: t.split( ':' )[ 0 ], value: t.split( ':' )[ 1 ] }\n          else if ( !t.includes( 'public' ) && !t.includes( 'private' ) && !t.includes( 'mine' ) && !t.includes( 'shared' ) ) // TODO: not elegant\n            return { key: 'name', value: t }\n          else\n            return { key: t, value: null }\n        } )\n        this.filters = filters\n      } catch {\n        this.filters = [ { key: 'name', value: e } ]\n      }\n      this.isSearching = false\n    },\n    selectThis( project ) {\n      let index = this.selectedProjects.findIndex( p => p._id === project._id )\n      if ( index === -1 )\n        this.selectedProjects.unshift( project )\n      else\n        this.selectedProjects.splice( index, 1 )\n    },\n    selectAll( ) {\n      this.paginatedProjects.forEach( project => {\n        let index = this.selectedProjects.findIndex( s => s._id === project._id )\n        if ( index === -1 ) {\n          bus.$emit( 'select-project', project._id )\n        }\n      } )\n    },\n    createProject( ) {\n      this.$store.dispatch( 'createProject', { name: 'A brand new speckle project' } )\n        .then( res => {\n          this.$router.push( `/projects/${res._id}` )\n        } )\n    },\n    deleteSelectedProjects( ) {\n      this.selectedProjects.forEach( project => {\n        this.$store.dispatch( 'updateProject', { _id: project._id, deleted: true } )\n      } )\n      this.clearSelection( )\n    },\n    clearSelection( ) {\n      bus.$emit( 'unselect-all-projects' )\n    },\n    updateSearch: debounce( function ( e ) {\n      this.pageNumber = 0\n      this.isSearching = false\n      this.searchfilter = e\n      this.searchfilter = e\n      try {\n        let filters = this.searchfilter.split( ' ' ).map( t => {\n          if ( t.includes( ':' ) )\n            return { key: t.split( ':' )[ 0 ], value: t.split( ':' )[ 1 ] }\n          else if ( !t.includes( 'public' ) && !t.includes( 'private' ) && !t.includes( 'mine' ) && !t.includes( 'shared' ) ) // TODO: not elegant\n            return { key: 'name', value: t }\n          else\n            return { key: t, value: null }\n        } )\n        this.filters = filters\n      } catch {\n        this.filters = [ { key: 'name', value: e } ]\n      }\n    }, 1000 ),\n  },\n  created( ) {}\n}\n\n</script>\n<style scoped lang='scss'>\n</style>\n"],"sourceRoot":"src/views"}]}