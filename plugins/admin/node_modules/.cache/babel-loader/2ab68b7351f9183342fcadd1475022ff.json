{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/views/Stream.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/views/Stream.vue","mtime":1609071089434},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport debounce from 'lodash.debounce';\nimport union from 'lodash.union';\nimport StreamDetailTitle from '../components/StreamDetailTitle.vue';\nimport DetailDescription from '../components/DetailDescription.vue';\nimport StreamDetailUserPerms from '../components/StreamDetailUserPerms.vue';\nimport StreamDetailNetwork from '../components/StreamDetailNetwork.vue';\nimport StreamDetailComments from '../components/StreamDetailComments.vue';\nexport default {\n  name: 'StreamDetailView',\n  components: {\n    StreamDetailTitle: StreamDetailTitle,\n    DetailDescription: DetailDescription,\n    StreamDetailUserPerms: StreamDetailUserPerms,\n    StreamDetailNetwork: StreamDetailNetwork,\n    StreamDetailComments: StreamDetailComments\n  },\n  watch: {\n    stream: function stream() {\n      this.fetchData();\n    }\n  },\n  computed: {\n    stream: function stream() {\n      var _this = this;\n\n      var stream = this.$store.state.streams.find(function (s) {\n        return s.streamId === _this.$route.params.streamId;\n      });\n\n      if (stream === null) {\n        console.log('null fukcing stream');\n      }\n\n      return stream;\n    },\n    canEdit: function canEdit() {\n      if (this.$store.state.user.role == 'admin') return true;\n      return this.isOwner ? true : this.stream.canWrite.indexOf(this.$store.state.user._id) !== -1;\n    },\n    isOwner: function isOwner() {\n      return this.stream.owner === this.$store.state.user._id;\n    }\n  },\n  data: function data() {\n    return {\n      error: '',\n      editDescription: false,\n      active: null\n    };\n  },\n  methods: {\n    getEndRoute: function getEndRoute() {\n      var ending = this.$route.path.split('/').reverse()[0];\n      if (ending === this.$route.params.streamId || ending === '') return 'overview';else return ending;\n    },\n    restore: function restore() {\n      this.$store.dispatch('updateStream', {\n        streamId: this.stream.streamId,\n        deleted: false\n      });\n    },\n    fetchData: function fetchData() {\n      var _this2 = this;\n\n      var stream = this.$store.state.streams.find(function (s) {\n        return s.streamId === _this2.$route.params.streamId;\n      });\n\n      if (!stream) {\n        this.$store.dispatch('getStream', {\n          streamId: this.$route.params.streamId\n        }).then(function (res) {\n          _this2.$store.dispatch('getUser', {\n            _id: res.data.resource.owner\n          });\n\n          union(res.data.resource.canRead, res.data.resource.canWrite).forEach(function (_id) {\n            return _this2.$store.dispatch('getUser', {\n              _id: _id\n            });\n          });\n        }).catch(function (err) {\n          if (err.message.includes('404')) _this2.error = \"Stream \".concat(_this2.$route.params.streamId, \" was not found.\");\n          if (err.message.includes('401')) _this2.error = \"Stream \".concat(_this2.$route.params.streamId, \" is not accessible to you due to its protection level.\");\n        });\n      } else {\n        this.$store.dispatch('getUser', {\n          _id: stream.owner\n        });\n        union(stream.canRead, stream.canWrite).forEach(function (_id) {\n          return _this2.$store.dispatch('getUser', {\n            _id: _id\n          });\n        });\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.fetchData();\n  }\n};",{"version":3,"sources":["Stream.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container xxx-grid-list-xl v-if='stream'>\n    <v-toolbar absolute v-if='stream.deleted'>\n      <span>This stream is in your trashbin. </span>\n      <v-spacer></v-spacer>\n      <v-btn color='primary' v-if='canEdit' @click.native='restore'> Restore? </v-btn>\n    </v-toolbar>\n    <v-layout row wrap class='mb-3'>\n      <v-flex xs12>\n        <stream-detail-title :stream='stream'></stream-detail-title>\n      </v-flex>\n      <v-flex xs12>\n        <v-tabs v-model=\"active\" grow class='pa-0 ma-0' slider-color='primary'>\n          <v-tab key=\"Overview\" ripple :to='{name:\"stream overview\"}'>\n            Overview\n          </v-tab>\n          <v-tab key=\"Sharing\" ripple :to='{name:\"stream sharing\"}'>\n            Sharing\n          </v-tab>\n          <v-tab key=\"History\" ripple :to='{name:\"stream history\"}'>\n            Versions\n          </v-tab>\n          <v-tab key=\"Data\" ripple :to='{name:\"stream data\"}'>\n            Data\n          </v-tab>\n        </v-tabs>\n      </v-flex>\n    </v-layout>\n    <!-- Where the sub routes live -->\n    <!-- <keep-alive> -->\n      <router-view></router-view>\n    <!-- </keep-alive> -->\n  </v-container>\n</template>\n<script>\nimport debounce from 'lodash.debounce'\nimport union from 'lodash.union'\n\nimport StreamDetailTitle from '../components/StreamDetailTitle.vue'\nimport DetailDescription from '../components/DetailDescription.vue'\nimport StreamDetailUserPerms from '../components/StreamDetailUserPerms.vue'\nimport StreamDetailNetwork from '../components/StreamDetailNetwork.vue'\nimport StreamDetailComments from '../components/StreamDetailComments.vue'\n\nexport default {\n  name: 'StreamDetailView',\n  components: {\n    StreamDetailTitle,\n    DetailDescription,\n    StreamDetailUserPerms,\n    StreamDetailNetwork,\n    StreamDetailComments\n  },\n  watch: {\n    stream( ) {\n      this.fetchData( )\n    }\n  },\n  computed: {\n    stream( ) {\n      let stream = this.$store.state.streams.find( s => s.streamId === this.$route.params.streamId )\n      if ( stream === null ) {\n        console.log( 'null fukcing stream' )\n      }\n      return stream\n    },\n    canEdit( ) {\n      if (this.$store.state.user.role == 'admin') return true\n      return this.isOwner ? true : this.stream.canWrite.indexOf( this.$store.state.user._id ) !== -1\n    },\n    isOwner( ) {\n      return this.stream.owner === this.$store.state.user._id\n    }\n  },\n  data( ) {\n    return {\n      error: '',\n      editDescription: false,\n      active: null\n    }\n  },\n  methods: {\n    getEndRoute( ) {\n      let ending = this.$route.path.split( '/' ).reverse( )[ 0 ]\n      if ( ending === this.$route.params.streamId || ending === '' ) return 'overview'\n      else return ending\n    },\n    restore( ) {\n      this.$store.dispatch( 'updateStream', { streamId: this.stream.streamId, deleted: false } )\n    },\n    fetchData( ) {\n      let stream = this.$store.state.streams.find( s => s.streamId === this.$route.params.streamId )\n      if ( !stream ) {\n        this.$store.dispatch( 'getStream', { streamId: this.$route.params.streamId } )\n          .then( res => {\n            this.$store.dispatch( 'getUser', { _id: res.data.resource.owner } )\n            union( res.data.resource.canRead, res.data.resource.canWrite ).forEach( _id => this.$store.dispatch( 'getUser', { _id: _id } ) )\n          } )\n          .catch( err => {\n            if ( err.message.includes( '404' ) ) this.error = `Stream ${this.$route.params.streamId} was not found.`\n            if ( err.message.includes( '401' ) ) this.error = `Stream ${this.$route.params.streamId} is not accessible to you due to its protection level.`\n          } )\n      } else {\n        this.$store.dispatch( 'getUser', { _id: stream.owner } )\n        union( stream.canRead, stream.canWrite ).forEach( _id => this.$store.dispatch( 'getUser', { _id: _id } ) )\n      }\n    }\n  },\n  mounted( ) {\n    this.fetchData( )\n  }\n}\n\n</script>\n<style scoped lang='scss'>\n</style>\n"],"sourceRoot":"src/views"}]}