{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/store/admin.js","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/store/admin.js","mtime":1609071089424},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport _Object$keys from \"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/@babel/runtime-corejs2/core-js/object/keys\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/web.dom.iterable\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport Axios from 'axios'; // the admin module is a seperate store that includes all the users / streams / projects on the system\n// its ADD mutations are unique, and are called by get*Admin actions contained in this module\n// but its UPDATE and DELETE mutations are the same as those in the rootStore, so rootStore actions update\n// or delete state for projects, streams, and the current user across both stores\n\nvar adminStore = {\n  state: {\n    streams: [],\n    users: [],\n    projects: []\n  },\n  mutations: {\n    //streams\n    ADD_STREAMS_ADMIN: function ADD_STREAMS_ADMIN(state, streams) {\n      streams.forEach(function (stream) {\n        if (state.streams.findIndex(function (x) {\n          return x.streamId === stream.streamId;\n        }) === -1) {\n          // defensive code (vue 3.0 we're off to typescript baby, can't wait)\n          if (!stream.description) stream.description = '...';\n          if (!stream.tags) stream.tags = [];\n          state.streams.unshift(stream);\n        }\n      });\n    },\n    UPDATE_STREAM: function UPDATE_STREAM(state, props) {\n      var found = state.streams.find(function (s) {\n        return s.streamId === props.streamId;\n      });\n      if (!found) return console.error('User not found; aborting update.');\n\n      _Object$keys(props).forEach(function (key) {\n        found[key] = props[key];\n      });\n\n      found.updatedAt = new Date().toISOString();\n    },\n    DELETE_STREAM: function DELETE_STREAM(state, stream) {\n      var index = state.streams.findIndex(function (s) {\n        return s.streamId === stream.streamId;\n      });\n\n      if (index > -1) {\n        state.streams.splice(index, 1);\n      } else console.log(\"Failed to remove stream \".concat(stream.streamId, \" from store.\"));\n    },\n    //users\n    ADD_USERS_ADMIN: function ADD_USERS_ADMIN(state, users) {\n      users.forEach(function (user) {\n        var found = state.users.find(function (u) {\n          return u._id === user._id;\n        });\n        if (!found) state.users.unshift(user);else found = user; // update the user\n      });\n    },\n    UPDATE_USER: function UPDATE_USER(state, user) {\n      var found = null;\n      found = state.users.find(function (u) {\n        return u._id === user._id;\n      });\n      if (!found) return console.error('User not found; aborting update.');\n\n      _Object$keys(user).forEach(function (key) {\n        found[key] = user[key];\n      });\n    },\n    //projects\n    ADD_PROJECTS_ADMIN: function ADD_PROJECTS_ADMIN(state, projects) {\n      projects.forEach(function (project) {\n        if (state.projects.findIndex(function (p) {\n          return p._id === project._id;\n        }) === -1) {\n          // potentially enforce here extra fields\n          if (!project.tags) project.tags = [];\n          if (!project.deleted) project.deleted = false;\n          state.projects.unshift(project);\n        }\n      });\n    },\n    UPDATE_PROJECT: function UPDATE_PROJECT(state, props) {\n      var found = state.projects.find(function (p) {\n        return p._id === props._id;\n      });\n      if (null == found) return;\n\n      _Object$keys(props).forEach(function (key) {\n        found[key] = props[key];\n      });\n\n      found.updatedAt = new Date().toISOString();\n    },\n    DELETE_PROJECT: function DELETE_PROJECT(state, props) {\n      var index = state.projects.findIndex(function (p) {\n        return p._id === props._id;\n      });\n\n      if (index > -1) {\n        state.projects.splice(index, 1);\n      } else console.log(\"Failed to remove project \".concat(props._id, \" from store.\"));\n    }\n  },\n  getters: {},\n  actions: {\n    //streams\n    getStreamsAdmin: function getStreamsAdmin(context) {\n      return new _Promise(function (resolve, reject) {\n        Axios.get('streams/admin').then(function (res) {\n          context.commit('ADD_STREAMS_ADMIN', res.data.resources);\n          return resolve(res.data.resources);\n        }).catch(function (err) {\n          console.log(err);\n          return reject(err);\n        });\n      });\n    },\n    //users\n    getUsersAdmin: function getUsersAdmin(context) {\n      return new _Promise(function (resolve, reject) {\n        Axios.get('accounts/admin').then(function (res) {\n          context.commit('ADD_USERS_ADMIN', res.data.resource);\n          return resolve(res.data.resources);\n        }).catch(function (err) {\n          console.log(err);\n          return reject(err);\n        });\n      });\n    },\n    updateUserAdmin: function updateUserAdmin(context, user) {\n      return new _Promise(function (resolve, reject) {\n        Axios.put(\"accounts/\" + user._id, user).then(function (res) {\n          return resolve(context.commit('UPDATE_USER', user));\n        }).catch(function (err) {\n          return reject(err);\n        });\n      });\n    },\n    //projects\n    getProjectsAdmin: function getProjectsAdmin(context) {\n      return new _Promise(function (resolve, reject) {\n        Axios.get('projects/admin').then(function (res) {\n          context.commit('ADD_PROJECTS_ADMIN', res.data.resources);\n          return resolve(res.data.resources);\n        }).catch(function (err) {\n          console.log(err);\n          return reject(err);\n        });\n      });\n    }\n  }\n};\nexport default adminStore;",{"version":3,"sources":["/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/store/admin.js"],"names":["Vue","Vuex","Axios","adminStore","state","streams","users","projects","mutations","ADD_STREAMS_ADMIN","forEach","stream","findIndex","x","streamId","description","tags","unshift","UPDATE_STREAM","props","found","find","s","console","error","key","updatedAt","Date","toISOString","DELETE_STREAM","index","splice","log","ADD_USERS_ADMIN","user","u","_id","UPDATE_USER","ADD_PROJECTS_ADMIN","project","p","deleted","UPDATE_PROJECT","DELETE_PROJECT","getters","actions","getStreamsAdmin","context","resolve","reject","get","then","res","commit","data","resources","catch","err","getUsersAdmin","resource","updateUserAdmin","put","getProjectsAdmin"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport Axios from 'axios'\n\n// the admin module is a seperate store that includes all the users / streams / projects on the system\n// its ADD mutations are unique, and are called by get*Admin actions contained in this module\n// but its UPDATE and DELETE mutations are the same as those in the rootStore, so rootStore actions update\n// or delete state for projects, streams, and the current user across both stores\nconst adminStore = {\n  state: {\n    streams: [ ],\n    users: [ ],\n    projects: [ ]\n  },\n  mutations: {\n    //streams\n    ADD_STREAMS_ADMIN( state, streams ) {\n      streams.forEach( stream => {\n        if ( state.streams.findIndex( x => x.streamId === stream.streamId ) === -1 ) {\n          // defensive code (vue 3.0 we're off to typescript baby, can't wait)\n          if ( !stream.description ) stream.description = '...'\n          if ( !stream.tags ) stream.tags = [ ]\n          state.streams.unshift( stream )\n        }\n      } )\n    },\n    UPDATE_STREAM( state, props ) {\n      let found = state.streams.find( s => s.streamId === props.streamId )\n      if ( !found ) return console.error( 'User not found; aborting update.' )\n      Object.keys( props ).forEach( key => {\n        found[ key ] = props[ key ]\n      } )\n      found.updatedAt = ( new Date( ) ).toISOString( )\n    },\n    DELETE_STREAM( state, stream ) {\n      let index = state.streams.findIndex( s => s.streamId === stream.streamId )\n      if ( index > -1 ) {\n        state.streams.splice( index, 1 )\n      } else\n        console.log( `Failed to remove stream ${stream.streamId} from store.` )\n    },\n    //users\n    ADD_USERS_ADMIN( state, users ) {\n      users.forEach( user => {\n        let found = state.users.find( u => u._id === user._id )\n        if ( !found )\n          state.users.unshift( user )\n        else found = user // update the user\n      } )\n    },\n    UPDATE_USER( state, user ) {\n      let found = null\n      found = state.users.find( u => u._id === user._id )\n      if ( !found )\n        return console.error( 'User not found; aborting update.' )\n      Object.keys( user ).forEach( key => {\n        found[ key ] = user[ key ]\n      } )\n    },\n    //projects\n    ADD_PROJECTS_ADMIN( state, projects ) {\n      projects.forEach( project => {\n        if ( state.projects.findIndex( p => p._id === project._id ) === -1 ) {\n          // potentially enforce here extra fields\n          if ( !project.tags ) project.tags = [ ]\n          if ( !project.deleted ) project.deleted = false\n          state.projects.unshift( project )\n        }\n      } )\n    },\n    UPDATE_PROJECT( state, props ) {\n      let found = state.projects.find( p => p._id === props._id )\n      if ( null == found ) return\n      Object.keys( props ).forEach( key => {\n        found[ key ] = props[ key ]\n      } )\n      found.updatedAt = ( new Date( ) ).toISOString( )\n    },\n    DELETE_PROJECT( state, props ) {\n      let index = state.projects.findIndex( p => p._id === props._id )\n      if ( index > -1 ) {\n        state.projects.splice( index, 1 )\n      } else\n        console.log( `Failed to remove project ${props._id} from store.` )\n    },\n  },\n  getters: {},\n  actions: {\n    //streams\n    getStreamsAdmin( context ) {\n      return new Promise( ( resolve, reject ) => {\n        Axios.get( 'streams/admin' )\n          .then( res => {\n            context.commit( 'ADD_STREAMS_ADMIN', res.data.resources )\n            return resolve( res.data.resources )\n          } )\n          .catch( err => {\n            console.log( err )\n            return reject( err )\n          } )\n      } )\n    },\n\n    //users\n    getUsersAdmin( context ) {\n      return new Promise( ( resolve, reject ) => {\n        Axios.get( 'accounts/admin' )\n          .then( res => {\n            context.commit( 'ADD_USERS_ADMIN', res.data.resource )\n            return resolve( res.data.resources )\n          } )\n          .catch( err => {\n            console.log( err )\n            return reject( err )\n          } )\n      } )\n    },\n    updateUserAdmin( context, user ) {\n      return new Promise( ( resolve, reject ) => {\n        Axios.put( \"accounts/\" + user._id, user )\n          .then( res => {\n            return resolve( context.commit( 'UPDATE_USER', user ) )\n          } )\n          .catch( err => {\n            return reject( err )\n          } )\n      } )\n\n    },\n    //projects\n    getProjectsAdmin( context ) {\n      return new Promise( ( resolve, reject ) => {\n        Axios.get( 'projects/admin' )\n          .then( res => {\n            context.commit( 'ADD_PROJECTS_ADMIN', res.data.resources )\n            return resolve( res.data.resources )\n          } )\n          .catch( err => {\n            console.log( err )\n            return reject( err )\n          } )\n      } )\n    },\n  }\n}\n\nexport default adminStore\n"]}]}