{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/renderer/SelectionBox.js","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/renderer/SelectionBox.js","mtime":1609071089421},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.sub\";\nimport \"core-js/modules/es6.number.constructor\";\n\n/**\n * @author HypnosNova / https://www.threejs.org.cn/gallery\n * This is a class to check whether objects are in a selection area in 3D space\n * Note: modified for speckle use\n */\nimport * as THREE from 'three';\n\nfunction SelectionBox(camera, scene, deep) {\n  this.camera = camera;\n  this.scene = scene;\n  this.startPoint = new THREE.Vector3();\n  this.endPoint = new THREE.Vector3();\n  this.collection = [];\n  this.deep = deep || Number.MAX_VALUE;\n}\n\nSelectionBox.prototype.select = function (startPoint, endPoint) {\n  this.startPoint = startPoint || this.startPoint;\n  this.endPoint = endPoint || this.endPoint;\n  this.collection = [];\n  var boxSelectionFrustum = this.createFrustum(this.startPoint, this.endPoint);\n  this.searchChildInFrustum(boxSelectionFrustum, this.scene);\n  return this.collection;\n};\n\nSelectionBox.prototype.createFrustum = function (startPoint, endPoint) {\n  startPoint = startPoint || this.startPoint;\n  endPoint = endPoint || this.endPoint;\n  this.camera.updateProjectionMatrix();\n  this.camera.updateMatrixWorld();\n  this.camera.updateMatrix();\n  var tmpPoint = startPoint.clone();\n  tmpPoint.x = Math.min(startPoint.x, endPoint.x);\n  tmpPoint.y = Math.max(startPoint.y, endPoint.y);\n  endPoint.x = Math.max(startPoint.x, endPoint.x);\n  endPoint.y = Math.min(startPoint.y, endPoint.y);\n  var vecNear = this.camera.position.clone();\n  var vecTopLeft = tmpPoint.clone();\n  var vecTopRight = new THREE.Vector3(endPoint.x, tmpPoint.y, 0);\n  var vecDownRight = endPoint.clone();\n  var vecDownLeft = new THREE.Vector3(tmpPoint.x, endPoint.y, 0);\n  vecTopLeft.unproject(this.camera);\n  vecTopRight.unproject(this.camera);\n  vecDownRight.unproject(this.camera);\n  vecDownLeft.unproject(this.camera);\n  var vectemp1 = vecTopLeft.clone().sub(vecNear);\n  var vectemp2 = vecTopRight.clone().sub(vecNear);\n  var vectemp3 = vecDownRight.clone().sub(vecNear);\n  vectemp1.normalize();\n  vectemp2.normalize();\n  vectemp3.normalize();\n  vectemp1.multiplyScalar(this.deep);\n  vectemp2.multiplyScalar(this.deep);\n  vectemp3.multiplyScalar(this.deep);\n  vectemp1.add(vecNear);\n  vectemp2.add(vecNear);\n  vectemp3.add(vecNear);\n  var planeTop = new THREE.Plane();\n  planeTop.setFromCoplanarPoints(vecNear, vecTopLeft, vecTopRight);\n  var planeRight = new THREE.Plane();\n  planeRight.setFromCoplanarPoints(vecNear, vecTopRight, vecDownRight);\n  var planeDown = new THREE.Plane();\n  planeDown.setFromCoplanarPoints(vecDownRight, vecDownLeft, vecNear);\n  var planeLeft = new THREE.Plane();\n  planeLeft.setFromCoplanarPoints(vecDownLeft, vecTopLeft, vecNear);\n  var planeFront = new THREE.Plane();\n  planeFront.setFromCoplanarPoints(vecTopRight, vecDownRight, vecDownLeft);\n  var planeBack = new THREE.Plane();\n  planeBack.setFromCoplanarPoints(vectemp3, vectemp2, vectemp1);\n  planeBack.normal = planeBack.normal.multiplyScalar(-1);\n  return new THREE.Frustum(planeTop, planeRight, planeDown, planeLeft, planeFront, planeBack);\n};\n\nSelectionBox.prototype.searchChildInFrustum = function (frustum, object) {\n  if (object instanceof THREE.Mesh) {\n    if (object.material !== undefined) {\n      object.geometry.computeBoundingSphere();\n      var center = object.geometry.boundingSphere.center.clone().applyMatrix4(object.matrixWorld);\n\n      if (frustum.containsPoint(center) && object.visible) {\n        this.collection.push(object);\n      }\n    }\n  }\n\n  if (object.children.length > 0) {\n    for (var x = 0; x < object.children.length; x++) {\n      this.searchChildInFrustum(frustum, object.children[x]);\n    }\n  }\n};\n\nexport default SelectionBox;",{"version":3,"sources":["/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/renderer/SelectionBox.js"],"names":["THREE","SelectionBox","camera","scene","deep","startPoint","Vector3","endPoint","collection","Number","MAX_VALUE","prototype","select","boxSelectionFrustum","createFrustum","searchChildInFrustum","updateProjectionMatrix","updateMatrixWorld","updateMatrix","tmpPoint","clone","x","Math","min","y","max","vecNear","position","vecTopLeft","vecTopRight","vecDownRight","vecDownLeft","unproject","vectemp1","sub","vectemp2","vectemp3","normalize","multiplyScalar","add","planeTop","Plane","setFromCoplanarPoints","planeRight","planeDown","planeLeft","planeFront","planeBack","normal","Frustum","frustum","object","Mesh","material","undefined","geometry","computeBoundingSphere","center","boundingSphere","applyMatrix4","matrixWorld","containsPoint","visible","push","children","length"],"mappings":"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","sourcesContent":["/**\n * @author HypnosNova / https://www.threejs.org.cn/gallery\n * This is a class to check whether objects are in a selection area in 3D space\n * Note: modified for speckle use\n */\n\nimport * as THREE from 'three'\n\nfunction SelectionBox ( camera, scene, deep ) {\n\n  this.camera = camera;\n  this.scene = scene;\n  this.startPoint = new THREE.Vector3();\n  this.endPoint = new THREE.Vector3();\n  this.collection = [];\n  this.deep = deep || Number.MAX_VALUE;\n\n}\n\nSelectionBox.prototype.select = function ( startPoint, endPoint ) {\n\n  this.startPoint = startPoint || this.startPoint;\n  this.endPoint = endPoint || this.endPoint;\n  this.collection = [];\n\n  var boxSelectionFrustum = this.createFrustum( this.startPoint, this.endPoint );\n  this.searchChildInFrustum( boxSelectionFrustum, this.scene );\n\n  return this.collection;\n\n}\n\nSelectionBox.prototype.createFrustum = function ( startPoint, endPoint ) {\n\n  startPoint = startPoint || this.startPoint;\n  endPoint = endPoint || this.endPoint\n\n  this.camera.updateProjectionMatrix();\n  this.camera.updateMatrixWorld();\n  this.camera.updateMatrix();\n\n  var tmpPoint = startPoint.clone();\n  tmpPoint.x = Math.min( startPoint.x, endPoint.x );\n  tmpPoint.y = Math.max( startPoint.y, endPoint.y );\n  endPoint.x = Math.max( startPoint.x, endPoint.x );\n  endPoint.y = Math.min( startPoint.y, endPoint.y );\n\n  var vecNear = this.camera.position.clone();\n  var vecTopLeft = tmpPoint.clone();\n  var vecTopRight = new THREE.Vector3( endPoint.x, tmpPoint.y, 0 );\n  var vecDownRight = endPoint.clone();\n  var vecDownLeft = new THREE.Vector3( tmpPoint.x, endPoint.y, 0 );\n  vecTopLeft.unproject( this.camera );\n  vecTopRight.unproject( this.camera );\n  vecDownRight.unproject( this.camera );\n  vecDownLeft.unproject( this.camera );\n\n  var vectemp1 = vecTopLeft.clone().sub( vecNear );\n  var vectemp2 = vecTopRight.clone().sub( vecNear );\n  var vectemp3 = vecDownRight.clone().sub( vecNear );\n  vectemp1.normalize();\n  vectemp2.normalize();\n  vectemp3.normalize();\n\n  vectemp1.multiplyScalar( this.deep );\n  vectemp2.multiplyScalar( this.deep );\n  vectemp3.multiplyScalar( this.deep );\n  vectemp1.add( vecNear );\n  vectemp2.add( vecNear );\n  vectemp3.add( vecNear );\n\n  var planeTop = new THREE.Plane();\n  planeTop.setFromCoplanarPoints( vecNear, vecTopLeft, vecTopRight );\n  var planeRight = new THREE.Plane();\n  planeRight.setFromCoplanarPoints( vecNear, vecTopRight, vecDownRight );\n  var planeDown = new THREE.Plane();\n  planeDown.setFromCoplanarPoints( vecDownRight, vecDownLeft, vecNear );\n  var planeLeft = new THREE.Plane();\n  planeLeft.setFromCoplanarPoints( vecDownLeft, vecTopLeft, vecNear );\n  var planeFront = new THREE.Plane();\n  planeFront.setFromCoplanarPoints( vecTopRight, vecDownRight, vecDownLeft );\n  var planeBack = new THREE.Plane();\n  planeBack.setFromCoplanarPoints( vectemp3, vectemp2, vectemp1 );\n  planeBack.normal = planeBack.normal.multiplyScalar( -1 );\n\n  return new THREE.Frustum( planeTop, planeRight, planeDown, planeLeft, planeFront, planeBack );\n\n}\n\nSelectionBox.prototype.searchChildInFrustum = function ( frustum, object ) {\n\n  if ( object instanceof THREE.Mesh ) {\n\n    if ( object.material !== undefined ) {\n\n      object.geometry.computeBoundingSphere();\n      var center = object.geometry.boundingSphere.center.clone().applyMatrix4( object.matrixWorld );\n\n      if ( frustum.containsPoint( center ) && object.visible ) {\n\n        this.collection.push( object );\n\n      }\n\n    }\n\n  }\n\n  if ( object.children.length > 0 ) {\n\n    for ( var x = 0; x < object.children.length; x++ ) {\n\n      this.searchChildInFrustum( frustum, object.children[x] );\n\n    }\n\n  }\n\n}\n\nexport default SelectionBox\n"]}]}