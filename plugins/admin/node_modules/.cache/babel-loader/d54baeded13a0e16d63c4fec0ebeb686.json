{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/ForceDirectedLayout.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/ForceDirectedLayout.vue","mtime":1609071089408},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$values from \"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/@babel/runtime-corejs2/core-js/object/values\";\nimport \"core-js/modules/es6.string.fixed\";\nimport \"core-js/modules/es6.function.name\";\nimport _Object$keys from \"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/@babel/runtime-corejs2/core-js/object/keys\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _Array$from from \"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/@babel/runtime-corejs2/core-js/array/from\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\n\nvar _this2 = this;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as d3 from \"d3\";\nimport ParCoords from 'parcoord-es';\nimport MicrosoftExcel from \"../../public/img/icons/MicrosoftExcel.svg\";\nimport Grasshopper3D from \"../../public/img/icons/Grasshopper3D.svg\";\nimport Rhino3D from \"../../public/img/icons/Rhino3D.svg\";\nimport GSA from \"../../public/img/icons/GSA.svg\";\nimport Revit from \"../../public/img/icons/Revit.svg\";\nimport Dynamo from \"../../public/img/icons/Dynamo.svg\";\nexport default {\n  name: \"ForceDirectedLayout\",\n  props: {\n    clientdata: Array,\n    svgHeight: Number,\n    showDocGroups: Array,\n    clientdatafilter: Array,\n    timeFilter: Array,\n    toggleFix: Boolean,\n    brush: Boolean,\n    documentLinksForce: Number,\n    switchForce: Boolean,\n    inspectTimeframe: Boolean,\n    inspectSelectedTags: Boolean,\n    streamTags: Array,\n    refocus: Boolean,\n    selectedEdgesDisplay: String,\n    selectedGraphLayout: String,\n    parcoords_selstreams: Array\n  },\n  watch: {\n    // parcoords_selstreams: function(){\n    //   let context = this\n    //   Array.from(document.querySelector(\"#rectParcoords\").children).forEach(\n    //     function(d) {\n    //       if(context.$props.parcoords_selstreams.includes(d3.select(d).datum()._id)){\n    //         d.classList.add(\"parcoordsSelection\")\n    //       }else{\n    //         d.classList.remove(\"parcoordsSelection\")\n    //       }\n    //     }\n    //   )\n    // },\n    selectedGraphLayout: function selectedGraphLayout() {\n      this.drawGraph.tick();\n    },\n    selectedEdgesDisplay: function selectedEdgesDisplay() {\n      this.drawGraph.tick();\n    },\n    refocus: function refocus() {\n      var container = d3.select(\".everything\");\n      var zoom = d3.zoom().scaleExtent([0, 0]).on(\"zoom\", function () {\n        container.attr(\"transform\", d3.event.transform);\n      });\n      d3.select(\"#graphLayout\").call(zoom.transform, d3.zoomIdentity.translate(0, 0).scale(1));\n    },\n    inspectSelectedTags: function inspectSelectedTags() {\n      var taggedStreams = [];\n\n      _Array$from(document.querySelector(\"#rectStream\").children).forEach(function (d) {\n        if (d.classList.contains(\"tagSelected\")) {\n          taggedStreams.push(d3.select(d).datum().streamId);\n        } else {}\n      });\n\n      var base = new URL(this.$store.state.server);\n      var viewerUrl = base.origin + \"/#/view/\".concat(taggedStreams.join(\",\"));\n      window.open(viewerUrl, \"_blank\").focus();\n    },\n    streamTags: function streamTags() {\n      var context = this;\n\n      _Array$from(document.querySelector(\"#rectStream\").children).forEach(function (d) {\n        var myStreamTags = _Array$from(d3.select(d).datum().tags);\n\n        var selected = context.findCommonElement(myStreamTags, context.streamTags);\n\n        if (selected) {\n          d.classList.remove(\"tagSelected\"); //context.selectedTaggedStreams.splice( context.selectedTaggedStreams.indexOf(d3.select(d).datum().streamId), 1 )\n\n          if (context.selectedTaggedStreams.indexOf(d3.select(d).datum().streamId) != -1) {\n            context.selectedTaggedStreams.splice(context.selectedTaggedStreams.indexOf(d3.select(d).datum().streamId), 1);\n          }\n\n          d.classList.add(\"tagSelected\");\n          context.selectedTaggedStreams.push(d3.select(d).datum().streamId);\n        } else {\n          d.classList.remove(\"tagSelected\");\n\n          if (context.selectedTaggedStreams.indexOf(d3.select(d).datum().streamId) != -1) {\n            context.selectedTaggedStreams.splice(context.selectedTaggedStreams.indexOf(d3.select(d).datum().streamId), 1);\n          }\n        }\n      });\n\n      context.$emit(\"triggeredTags\", context.selectedTaggedStreams);\n    },\n    inspectTimeframe: function inspectTimeframe() {\n      var selectedStreams = [];\n\n      _Array$from(document.querySelector(\"#rectStream\").children).forEach(function (d) {\n        if (d.classList.contains(\"selected\")) {\n          selectedStreams.push(d3.select(d).datum().streamId);\n        }\n      });\n\n      var base = new URL(this.$store.state.server);\n      var viewerUrl = base.origin + \"/#/view/\".concat(selectedStreams.join(\",\"));\n      window.open(viewerUrl, \"_blank\").focus();\n    },\n    brush: function brush() {},\n    switchForce: function switchForce() {\n      if (this.switchForce) {\n        this.$data.simulation.force(\"link\").links(this.forceLinks.filter(function (d) {\n          return d.type != \"documentGuidForceGroup\";\n        }));\n        this.$data.simulation.alpha(1).restart();\n      } else {\n        this.$data.simulation.force(\"link\").links(this.forceLinks.filter(function (d) {\n          return d.type != \"ownerForceGroup\";\n        }));\n        this.$data.simulation.alpha(1).restart();\n      }\n    },\n    documentLinksForce: function documentLinksForce() {\n      var _this = this;\n\n      this.$data.simulation.force(\"link\").distance(function (d) {\n        if (d.type == \"ownerForceGroup\") {\n          return _this.documentLinksForce;\n        } else if (d.type == \"documentGuidForceGroup\") {\n          return _this.documentLinksForce;\n        } else {\n          return 116;\n        }\n      });\n      this.$data.simulation.alpha(1).restart();\n    },\n    toggleFix: function toggleFix() {\n      if (this.toggleFix) {\n        this.$data.simulation.stop();\n        d3.selectAll(\"circle\").classed(\"fixed\", function (d) {\n          d.fixed = true;\n        });\n        d3.selectAll(\"rect\").classed(\"fixed\", function (d) {\n          d.fixed = true;\n        });\n      } else {\n        this.$data.simulation.alphaTarget(0.3).restart();\n        d3.selectAll(\"circle\").classed(\"fixed\", function (d) {\n          d.fixed = false;\n        });\n        d3.selectAll(\"rect\").classed(\"fixed\", function (d) {\n          d.fixed = false;\n        });\n      }\n    },\n    clientdatafilter: function clientdatafilter() {},\n    timeFilter: function timeFilter() {\n      this.updateDisplayNodes(\"#circleSender\");\n      this.updateDisplayNodes(\"#circleReceiver\");\n      this.updateDisplayNodes(\"#rectStream\");\n      this.updateDisplayNodes(\"#text\");\n      this.updateDisplayLinks(\"#pathLink\");\n    }\n  },\n  data: function data() {\n    return {\n      forceLinks: [],\n      shiftKey: null,\n      filteredNodes: null,\n      colour: null,\n      groupPath: null,\n      simulation: null,\n      selectedTaggedStreams: [],\n      svgWidth: document.getElementById(\"appClientGraph\").offsetWidth,\n      context: _this2,\n      hullPadding: 11,\n      roundedHull: function roundedHull(polyPoints) {\n        // Returns the SVG path data string representing the polygon, expanded and rounded.\n        // Handle special cases\n        if (!polyPoints || polyPoints.length < 1) return \"\";\n        if (polyPoints.length === 1) return this.roundedHull1(polyPoints);\n        if (polyPoints.length === 2) return this.roundedHull2(polyPoints);\n        var segments = new Array(polyPoints.length); // Calculate each offset (outwards) segment of the convex hull.\n\n        for (var segmentIndex = 0; segmentIndex < segments.length; ++segmentIndex) {\n          var p0 = segmentIndex === 0 ? polyPoints[polyPoints.length - 1] : polyPoints[segmentIndex - 1];\n          var p1 = polyPoints[segmentIndex]; // Compute the offset vector for the line segment, with length = hullPadding.\n\n          var offset = vecScale(this.hullPadding, this.unitNormal(p0, p1));\n          segments[segmentIndex] = [this.vecSum(p0, offset), this.vecSum(p1, offset)];\n        }\n\n        var arcData = \"A \" + [this.hullPadding, this.hullPadding, \"0,0,0,\"].join(\",\");\n        segments = segments.map(function (segment, index) {\n          var pathFragment = \"\";\n\n          if (index === 0) {\n            var _pathFragment = \"M \" + segments[segments.length - 1][1] + \" \";\n          }\n\n          pathFragment += arcData + segment[0] + \" L \" + segment[1];\n          return pathFragment;\n        });\n        return segments.join(\" \");\n      },\n      roundedHull1: function roundedHull1(polyPoints) {\n        // Returns the path for a rounded hull around a single point (a circle).\n        var p1 = [polyPoints[0][0], polyPoints[0][1] - this.hullPadding];\n        var p2 = [polyPoints[0][0], polyPoints[0][1] + this.hullPadding];\n        return \"M \" + p1 + \" A \" + [this.hullPadding, this.hullPadding, \"0,0,0\", p2].join(\",\") + \" A \" + [this.hullPadding, this.hullPadding, \"0,0,0\", p1].join(\",\");\n      },\n      roundedHull2: function roundedHull2(polyPoints) {\n        // Returns the path for a rounded hull around two points (a \"capsule\" shape).\n        var offsetVector = this.vecScale(this.hullPadding, this.unitNormal(polyPoints[0], polyPoints[1]));\n        var invOffsetVector = this.vecScale(-1, offsetVector);\n        var p0 = this.vecSum(polyPoints[0], offsetVector);\n        var p1 = this.vecSum(polyPoints[1], offsetVector);\n        var p2 = this.vecSum(polyPoints[1], invOffsetVector);\n        var p3 = this.vecSum(polyPoints[0], invOffsetVector);\n        return \"M \" + p0 + \" L \" + p1 + \" A \" + [this.hullPadding, this.hullPadding, \"0,0,0\", p2].join(\",\") + \" L \" + p3 + \" A \" + [this.hullPadding, this.hullPadding, \"0,0,0\", p0].join(\",\");\n      },\n      vecScale: function vecScale(scale, v) {\n        // Returns the vector 'v' scaled by 'scale'.\n        return [scale * v[0], scale * v[1]];\n      },\n      vecSum: function vecSum(pv1, pv2) {\n        // Returns the sum of two vectors, or a combination of a point and a vector.\n        return [pv1[0] + pv2[0], pv1[1] + pv2[1]];\n      },\n      unitNormal: function unitNormal(p0, p1) {\n        // Returns the unit normal to the line segment from p0 to p1.\n        var n = [p0[1] - p1[1], p1[0] - p0[0]];\n        var nLength = Math.sqrt(n[0] * n[0] + n[1] * n[1]);\n        return [n[0] / nLength, n[1] / nLength];\n      }\n    };\n  },\n  methods: {\n    menuClient: function menuClient() {\n      return [{\n        title: \"Client Info\",\n        action: function action(d, i) {\n          var data = d3.select(d).datum();\n          window.alert(d3.select(d).datum().documentType + \": \" + d3.select(d).datum().documentName + \"\\n\" + \"Created at\" + \": \" + d3.select(d).datum().createdAt + \"\\n\" + \"Updated at\" + \": \" + d3.select(d).datum().updatedAt + \"\\n\" + \"Owner is\" + \": \" + d3.select(d).datum().owner);\n        }\n      }];\n    },\n    menuStream: function menuStream() {\n      var context = this;\n      return [{\n        title: \"View Stream in Viewer\",\n        action: function action(d, i) {\n          var data = d3.select(d).datum();\n          var base = new URL(context.$store.state.server);\n          var viewerUrl = base.origin + \"/#/view/\".concat(data.streamId);\n          window.open(viewerUrl, \"_blank\").focus();\n        },\n        disabled: false // optional, defaults to false\n\n      }, {\n        title: \"View Stream in Admin\",\n        action: function action(d, i) {\n          var data = d3.select(d).datum();\n          var base = new URL(context.$store.state.server);\n          var adminUrl = base.origin + \"/#/streams/\".concat(data.streamId);\n          window.open(adminUrl, \"_blank\").focus();\n        },\n        disabled: false // optional, defaults to false\n\n      }, {\n        title: \"View Stream Data\",\n        action: function action(d, i) {\n          var data = d3.select(d).datum();\n          var base = new URL(context.$store.state.server);\n          var dataUrl = base + \"/streams/\".concat(data.streamId);\n          window.open(dataUrl, \"_blank\").focus();\n        }\n      }, {\n        title: \"View Connected Clients\",\n        action: function action(d, i) {\n          var data = d3.select(d).datum();\n          var base = new URL(context.$store.state.server);\n          var dataUrlClients = base + \"/streams/\".concat(data.streamId, \"/clients\");\n          window.open(dataUrlClients, \"_blank\").focus();\n        }\n      }];\n    },\n    zoom_actions: function zoom_actions() {\n      d3.select(\".everything\").attr(\"transform\", d3.event.transform);\n    },\n    findCommonElement: function findCommonElement(array1, array2) {\n      for (var i = 0; i < array1.length; i++) {\n        for (var j = 0; j < array2.length; j++) {\n          if (array1[i] === array2[j]) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n    // Drag events for the whole d3 force simulation\n    drag: function drag() {\n      var parentContext = this;\n\n      function dragstarted(d) {\n        if (!d3.event.active) parentContext.simulation.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      }\n\n      function dragged(d) {\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n      }\n\n      function dragended(d) {\n        if (!d3.event.active) parentContext.simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n      }\n\n      return d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended);\n    },\n    updateDisplayLinks: function updateDisplayLinks(id) {\n      var context = this;\n\n      _Array$from(document.querySelector(id).children).forEach(function (node) {\n        var nodeTimeComparerSource = new Date(node.getAttribute(\"source_timestamp\")).toISOString().split(\".\")[0] + \".000Z\";\n        var nodeTimeComparerTarget = new Date(node.getAttribute(\"target_timestamp\")).toISOString().split(\".\")[0] + \".000Z\";\n\n        if (nodeTimeComparerSource >= context.timeFilter[0] && nodeTimeComparerSource <= context.timeFilter[1] && nodeTimeComparerTarget >= context.timeFilter[0] && nodeTimeComparerTarget <= context.timeFilter[1]) {\n          node.style.opacity = 1;\n          node.style.transition = \"visibility 0s, opacity 0.4s linear\";\n        } else {\n          node.style.opacity = 0.2;\n          node.style.transition = \"visibility 0s, opacity 0.4s linear\";\n        }\n      });\n    },\n    updateDisplayNodes: function updateDisplayNodes(id) {\n      var context = this;\n\n      _Array$from(document.querySelector(id).children).forEach(function (node) {\n        var nodeTimeComparer = new Date(node.getAttribute(\"timestamp\")).toISOString().split(\".\")[0] + \".000Z\";\n\n        if (nodeTimeComparer >= context.timeFilter[0] && nodeTimeComparer <= context.timeFilter[1]) {\n          node.classList.remove(\"unselected\");\n          node.classList.add(\"selected\");\n          node.style.transition = \"visibility 0s, opacity 0.4s linear\";\n          node.style.opacity = 1;\n        } else {\n          //node.style.display = \"none\"\n          node.classList.remove(\"selected\");\n          node.classList.add(\"unselected\");\n          node.style.opacity = 0.2;\n          node.style.transition = \"visibility 0s, opacity 0.4s linear\";\n        }\n      });\n\n      var selectedStreams = [];\n\n      _Array$from(document.querySelector(\"#rectStream\").children).forEach(function (d) {\n        if (d.classList.contains(\"selected\")) {\n          selectedStreams.push(d3.select(d).datum().streamId);\n        }\n      });\n\n      context.$emit(\"triggeredTimeFrame\", selectedStreams);\n    },\n    contextMenu: function contextMenu(type, menu, openCallback) {\n      // create the div element that will hold the context menu\n      d3.selectAll(\".d3-context-menu\").data([1]).enter().append(\"div\").attr(\"class\", \"d3-context-menu\"); // close menu\n\n      d3.select(\".application--wrap\").on(\"click.d3-context-menu\", function () {\n        d3.select(\".d3-context-menu\").style(\"display\", \"none\");\n      }); // this gets executed when a contextmenu event occurs\n\n      return function (data, index) {\n        var elm = this;\n        d3.selectAll(\".d3-context-menu\").html(\"\");\n        var list = d3.selectAll(\".d3-context-menu\").append(\"ul\");\n        list.selectAll(\"li\").data(menu).enter().append(\"li\").attr(\"class\", type).html(function (d) {\n          return d.title;\n        }).on(\"click\", function (d, i) {\n          d.action(elm, data, index);\n          d3.select(\".d3-context-menu\").style(\"display\", \"none\");\n        }); // the openCallback allows an action to fire before the menu is displayed\n        // an example usage would be closing a tooltip\n\n        if (openCallback) openCallback(data, index); // display context menu.\n\n        d3.select(\".d3-context-menu\").style(\"left\", d3.event.pageX - 2 + \"px\").style(\"top\", d3.event.pageY - 2 + \"px\").style(\"display\", \"block\");\n        d3.event.preventDefault();\n      };\n    },\n    groupBy: function groupBy(arr, property) {\n      return arr.reduce(function (memo, x) {\n        if (!memo[x[property]]) {\n          memo[x[property]] = [];\n        }\n\n        memo[x[property]].push(x);\n        return memo;\n      }, {});\n    },\n    drawGraph: function drawGraph() {\n      var _this3 = this;\n\n      var _nodes = this.clientdata[0];\n      var links = this.clientdata[1]; // Sorts all nodes by creation timestamps\n\n      _nodes.sort(function (a, b) {\n        return a.createdAt < b.createdAt ? -1 : a.createdAt > b.createdAt ? 1 : 0;\n      });\n\n      var thisContext = this;\n\n      for (var i = 0; i < links.length; i++) {\n        if (links[i].action === \"sending\") {\n          var source = _nodes.map(function (e) {\n            if (e.type === \"Client\") {\n              return e._id;\n            }\n          }).indexOf(links[i].source); // defines a source per client\n\n\n          var sourceClient = _nodes.map(function (e) {\n            if (e.type === \"Client\") {\n              return e._id;\n            }\n          }).indexOf(links[i].sourceClient); // defines a source per document\n\n\n          var sourceDoc = _nodes.map(function (e) {\n            if (e.type === \"Client\") {\n              return e.documentGuid;\n            }\n          }).indexOf(links[i].sourceDoc);\n\n          var target = _nodes.map(function (e) {\n            return e._id;\n          }).indexOf(links[i].target);\n\n          thisContext.forceLinks.push({\n            source: source,\n            sourceDoc: sourceDoc,\n            sourceClient: sourceClient,\n            target: target,\n            type: \"sending\",\n            display: true\n          });\n        }\n\n        if (links[i].action === \"receiving\") {\n          var _source = _nodes.map(function (e) {\n            return e._id;\n          }).indexOf(links[i].source);\n\n          var _target = _nodes.map(function (e) {\n            if (e.type === \"Client\") {\n              return e._id;\n            }\n          }).indexOf(links[i].target); // defines a target per document\n\n\n          var targetDoc = _nodes.map(function (e) {\n            if (e.type === \"Client\") {\n              return e.documentGuid;\n            }\n          }).indexOf(links[i].targetDoc); // defines a target per client\n\n\n          var targetClient = _nodes.map(function (e) {\n            if (e.type === \"Client\") {\n              return e._id;\n            }\n          }).indexOf(links[i].targetClient);\n\n          thisContext.forceLinks.push({\n            source: _source,\n            target: _target,\n            targetDoc: targetDoc,\n            targetClient: targetClient,\n            type: \"receiving\",\n            display: true\n          });\n        }\n      }\n\n      var clientNodes = _nodes.filter(function (data) {\n        return data.type == \"Client\";\n      });\n\n      var parentGroups = this.groupBy(clientNodes, \"owner\");\n      var circleOwnerData = [];\n\n      for (var property in parentGroups) {\n        var parGroup = parentGroups[property]; // let sumX = 0\n        // let sumY = 0\n        // for (let i = 0; i < parGroup.length; i++) {\n        //   sumX += parGroup[i].x\n        //   sumY += parGroup[i].y\n        // }\n        // let avX = sumX / parGroup.length\n        // let avY = sumY / parGroup.length\n\n        var circCenterOwner = {\n          \"radius\": 4,\n          \"color\": \"#7ebff3\",\n          userInfo: parGroup[0].userInfo\n        };\n        circleOwnerData.push(circCenterOwner);\n      }\n\n      for (var _property in parentGroups) {\n        var _parGroup = parentGroups[_property];\n\n        for (var _i = 0; _i < _parGroup.length - 1; _i++) {\n          for (var j = _i + 1; j < _parGroup.length; j++) {\n            thisContext.forceLinks.push({\n              source: _parGroup[_i],\n              target: _parGroup[j],\n              type: \"ownerForceGroup\",\n              display: false\n            });\n          }\n        }\n      }\n\n      var childGroups = this.groupBy(clientNodes, \"documentGuid\");\n      var circleDocData = [];\n\n      for (var _property2 in childGroups) {\n        var childGroup = childGroups[_property2];\n        var infoDoc = \"\";\n\n        if (childGroup[0].documentType === \"Rhino\") {\n          infoDoc = \"rhi\";\n          circleDocData.push({\n            \"radius\": 4,\n            \"color\": \"hotpink\",\n            \"infoDoc\": \"rhi\"\n          });\n        } else if (childGroup[0].documentType === \"Dynamo\") {\n          infoDoc = \"dyn\";\n          circleDocData.push({\n            \"radius\": 4,\n            \"color\": \"hotpink\",\n            \"infoDoc\": \"dyn\"\n          });\n        } else if (childGroup[0].documentType === \"GSA\") {\n          infoDoc = \"gsa\";\n          circleDocData.push({\n            \"radius\": 4,\n            \"color\": \"hotpink\",\n            \"infoDoc\": \"gsa\"\n          });\n        } else if (childGroup[0].documentType === \"Grasshopper\") {\n          infoDoc = \"grasshopper\";\n          circleDocData.push({\n            \"radius\": 4,\n            \"color\": \"hotpink\",\n            \"infoDoc\": \"grasshopper\"\n          });\n        } // if(childGroup[0].documentType === \"Revit\"){\n        //   infoDoc = `Revit`\n        // }\n        // if(childGroup[0].documentType === \"Excel\"){\n        //   infoDoc = `📊`\n        // }\n        // let sumX = 0\n        // let sumY = 0\n        // for (let i = 0; i < childGroup.length; i++) {\n        //   sumX += childGroup[i].x\n        //   sumY += childGroup[i].y\n        // }\n        // let avX = sumX / childGroup.length\n        // let avY = sumY / childGroup.length\n        //let circCenterDoc = {\"radius\": 4, \"color\": \"hotpink\", \"infoDoc\": infoDoc}\n\n      }\n\n      for (var _property3 in childGroups) {\n        var _childGroup = childGroups[_property3];\n\n        for (var _i2 = 0; _i2 < _childGroup.length - 1; _i2++) {\n          for (var _j = _i2 + 1; _j < _childGroup.length; _j++) {\n            thisContext.forceLinks.push({\n              source: _childGroup[_i2],\n              target: _childGroup[_j],\n              type: \"documentGuidForceGroup\",\n              display: false\n            });\n          }\n        }\n      } // d3.select(\"#graphLayout\")\n      //   .call( d3.brush()                     // Add the brush feature using the d3.brush function\n      //     .extent( [ [0,0], [this.$data.svgWidth,this.$props.svgHeight] ] )       // initialise the brush area: start at 0,0 and finishes at width,height: it means I select the whole graph area\n      //   )\n\n\n      var svg = d3.select(\"#graphLayout\"); // let brush = svg.append(\"g\")\n      //   .attr(\"class\", \"brush\");\n      // if(this.$props.brush){\n      // brush.call(d3.brush()\n      //       .extent([[0, 0], [this.$data.svgWidth, this.$props.svgHeight]])\n      //       .on(\"start\", brushstarted)\n      //       .on(\"brush\", brushed)\n      //       .on(\"end\", brushended));\n      // }\n\n      this.$data.simulation = d3.forceSimulation().nodes(d3.values(_nodes)) //.force(\"forceX\", d3.forceX(0).strength(0.08))\n      .force(\"link\", d3.forceLink(thisContext.forceLinks).distance(function (d) {\n        if (d.type == \"ownerForceGroup\") {\n          return _this3.documentLinksForce;\n        } else if (d.type == \"documentGuidForceGroup\") {\n          return _this3.documentLinksForce;\n        } else {\n          return 100;\n        }\n      })).force(\"center\", d3.forceCenter(this.$data.svgWidth / 2, this.$props.svgHeight / 2)).force(\"charge\", d3.forceManyBody().strength(function (d) {\n        if (d.type == \"ownerForceGroup\") {\n          return 200;\n        } else if (d.type == \"documentGuidForceGroup\") {\n          return 200;\n        } else {\n          return -700;\n        }\n      })).on(\"tick\", tick);\n\n      if (this.selectedGraphLayout == \"Free\") {\n        this.$data.simulation.force(\"forceX\", d3.forceX(0).strength(0)).force(\"forceY\", d3.forceY(0).strength(0));\n      }\n\n      if (this.selectedGraphLayout == \"Horizontal\") {\n        this.$data.simulation.force(\"forceX\", d3.forceX(0).strength(0)).force(\"forceY\", d3.forceY(0).strength(0.08));\n      }\n\n      if (this.selectedGraphLayout == \"Vertical\") {\n        this.$data.simulation.force(\"forceX\", d3.forceX(0).strength(0.08)).force(\"forceY\", d3.forceY(0).strength(0));\n      } //add zoom capabilities\n\n\n      var zoom_handler = d3.zoom().on(\"zoom\", this.zoom_actions);\n      zoom_handler(svg); // REMOVE ZOOM\n\n      svg.on(\"dblclick.zoom\", null);\n      this.$data.simulation.nodes().forEach(function (d) {\n        d.selected = false;\n        d.previouslySelected = false;\n      });\n\n      if (this.switchForce) {\n        // docs\n        var filterLinks = this.forceLinks.filter(function (d) {\n          return d.type != \"documentGuidForceGroup\";\n        });\n        this.$data.simulation.force(\"link\").links(filterLinks);\n        this.$data.simulation.alpha(1).restart();\n      } else {\n        var _filterLinks = this.forceLinks.filter(function (d) {\n          return d.type != \"ownerForceGroup\";\n        });\n\n        this.$data.simulation.force(\"link\").links(_filterLinks);\n        this.$data.simulation.alpha(1).restart();\n      }\n\n      this.$data.colour = d3.scaleLinear().domain([0, _nodes.length - 1]).interpolate(d3.interpolateHcl).range([d3.rgb(\"lightgray\"), d3.rgb(\"blue\")]);\n      var xScale = d3.scaleLinear().domain([0, this.svgWidth]).range([0, this.svgWidth]);\n      var yScale = d3.scaleLinear().domain([0, this.svgHeight]).range([0, this.svgHeight]); // Define the div for the tooltip\n\n      var divCircle = d3.select(\".tooltip\").style(\"opacity\", 0);\n      var divOwner = d3.select(\".tooltipOwner\").style(\"opacity\", 0);\n      var divDoc = d3.select(\".tooltipDoc\").style(\"opacity\", 0);\n      svg.select(\"#hullOwner\").selectAll(\"path\").data(_Object$keys(parentGroups)).enter().append(\"path\").attr(\"class\", \"subhullOwner\").on(\"mouseover\", function (d) {\n        divOwner.style(\"opacity\", 0.8);\n        divOwner.html(\"Owner: \".concat(d.values[0].owner)).style(\"left\", d3.event.pageX + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n      }).on(\"mouseout\", function (d) {\n        divOwner.style(\"opacity\", 0);\n      });\n      svg.select(\"#hullOwner\").selectAll(\"path\"); // let childGroups = this.groupBy(clientNodes, \"documentGuid\");\n\n      svg.select(\"#hullDoc\").selectAll(\"path\").data(_Object$keys(childGroups)).enter().append(\"path\").attr(\"class\", \"subhullDoc\").on(\"mouseover\", function (d) {\n        divDoc.style(\"opacity\", 0.8);\n        divDoc.html(\"DocumentGuid: \".concat(d.values[0].documentGuid, \"<br/>\\n            DocumentType: \").concat(d.values[0].documentType, \"<br/>\\n            DocumentName: \").concat(d.values[0].documentName)).style(\"left\", d3.event.pageX + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n      }).on(\"mouseout\", function (d) {\n        divDoc.style(\"opacity\", 0);\n      });\n      var groupOwners = d3.nest().key(function (d) {\n        return d.owner;\n      }).entries(this.simulation.nodes().filter(function (data) {\n        return data.type == \"Client\";\n      }));\n      var groupDocs = d3.nest().key(function (d) {\n        return d.documentGuid;\n      }).entries(this.simulation.nodes().filter(function (data) {\n        return data.type == \"Client\";\n      }));\n      var context = this;\n\n      var groupPath = function groupPath(d) {\n        if (d.values.length >= 3) {\n          return \"M\" + d3.polygonHull(d.values.map(function (i) {\n            return [i.x, i.y];\n          })).join(\"L\") + \"Z\";\n        } else {\n          return context.$data.roundedHull(d.values.map(function (i) {\n            return [i.x, i.y];\n          }));\n        }\n      }; //\n\n\n      svg.select(\"#marker\").selectAll(\"marker\").data(this.$data.simulation.force(\"link\").links().filter(function (data) {\n        return data.display;\n      })).enter().append(\"svg:marker\").attr(\"source_timestamp\", function (data) {\n        return data.source.createdAt;\n      }).attr(\"target_timestamp\", function (data) {\n        return data.target.createdAt;\n      }).attr(\"id\", function (data) {\n        return data.type;\n      }).attr(\"viewBox\", \"0 -5 10 10\") // handles the size difference between streams and client\n      .attr(\"refX\", function (data) {\n        if (data.type === \"sending\") {\n          return 21;\n        } else if (data.type === \"receiving\") {\n          return 15;\n        }\n      }).attr(\"refY\", 0).attr(\"markerWidth\", 20).attr(\"markerHeight\", 12).attr(\"orient\", \"auto\").attr(\"fill-opacity\", 1) //.attr(\"fill\", data => this.colour(data.target.index))\n      .attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"stroke-linecap\", \"round\"); // .append(\"svg:path\")\n      // .attr(\"d\", \"M0,-5L10,0L0,5\") \n\n      var path = svg.select(\"#pathLink\").selectAll(\"path\").data(this.$data.simulation.force(\"link\").links().filter(function (data) {\n        return data.display;\n      })).enter().append(\"svg:path\").attr(\"stroke-width\", 1.5).attr(\"stroke-width\", function (data) {\n        if (data.source.type === \"Stream\") {\n          if (data.source.objectsNumber > 15) {\n            return 8;\n          } else if (data.source.objectsNumber < 2) {\n            return 3;\n          } else {\n            return data.source.objectsNumber;\n          }\n        }\n\n        if (data.target.type === \"Stream\") {\n          if (data.target.objectsNumber > 15) {\n            return 8;\n          } else if (data.target.objectsNumber < 2) {\n            return 3;\n          } else {\n            return data.target.objectsNumber;\n          }\n        }\n      }).attr(\"stroke-linecap\", \"round\").attr(\"source_timestamp\", function (data) {\n        return data.source.createdAt;\n      }).attr(\"target_timestamp\", function (data) {\n        return data.target.createdAt;\n      }).attr(\"class\", function (d) {\n        return \"link \" + d.type;\n      }).attr(\"marker-end\", function (d) {\n        return \"url(#\" + d.type + \")\";\n      }); //\n      //\n\n      var circleSender = svg.select(\"#circleSender\").selectAll(\"circle\").data(this.$data.simulation.nodes().filter(function (data) {\n        return data.role == \"Sender\" || data.role == \"sender\";\n      })).enter().append(\"svg:circle\").attr(\"class\", \"sender\").attr(\"class\", \"node\").attr(\"r\", 6).attr(\"timestamp\", function (d) {\n        return d.createdAt;\n      }).on(\"dblclick\", dblclick).call(this.drag(this.$data.simulation)) // .on(\"mouseover\", function(d) {\n      //   divCircle.\n      //       style(\"opacity\", .8) \n      //       divCircle.html(`Owner: ${d.owner}<br/>\n      //       ${d.documentType}: ${d.documentName}<br/>\n      //       Created at: ${d.createdAt}<br/>\n      //       Updated at: ${d.updatedAt}`)\n      //       .style(\"left\", (d3.event.pageX) + \"px\")\n      //       .style(\"top\", (d3.event.pageY - 28) + \"px\") \n      //   })\n      // .on(\"mouseout\", function(d) {\n      //   divCircle.style(\"opacity\", 0) \n      // })\n      //\n      .on(\"contextmenu\", this.contextMenu(\"client\", this.menuClient));\n      var circleReceiver = svg.select(\"#circleReceiver\").selectAll(\"circle\").data(this.$data.simulation.nodes().filter(function (data) {\n        return data.role == \"Receiver\" || data.role == \"receiver\";\n      })).enter().append(\"svg:circle\").attr(\"class\", \"receiver\").attr(\"class\", \"node\").attr(\"r\", 6).attr(\"timestamp\", function (d) {\n        return d.createdAt;\n      }).on(\"dblclick\", dblclick).call(this.drag(this.$data.simulation)) // .on(\"mouseover\", function(d) {\n      //   divCircle.\n      //       style(\"opacity\", .8) \n      //       divCircle.html(`Owner: ${d.owner}<br/>\n      //       ${d.documentType}: ${d.documentName}<br/>\n      //       Created at: ${d.createdAt}<br/>\n      //       Updated at: ${d.updatedAt}`)\n      //       .style(\"left\", (d3.event.pageX) + \"px\")\n      //       .style(\"top\", (d3.event.pageY - 28) + \"px\") \n      //   })\n      // .on(\"mouseout\", function(d) {\n      //   divCircle.style(\"opacity\", 0) \n      // })\n      //\n      .on(\"contextmenu\", this.contextMenu(\"client\", this.menuClient));\n      var rectWidth = 24;\n      var rectHeight = 24; // let rectParcoords = svg\n      //   .select(\"#rectParcoords\")\n      //   .selectAll(\"rect\")\n      //   .data(this.$data.simulation.nodes().filter(d => d.type == \"Stream\"))\n      //   .enter()\n      //   .append(\"svg:rect\")\n      //   .attr(\"class\", \"parcoordsSelection\")\n      //   //.attr(\"class\", \"parcoordsSelection\")\n      //   .attr(\"x\", -rectWidth*3 / 2)\n      //   .attr(\"y\", -rectHeight*3 / 2)\n      //   .attr(\"width\", rectWidth*3)\n      //   .attr(\"height\", rectHeight*3)\n      //   .attr(\"rx\", 3)\n      //   .attr(\"ry\", 3)\n      //   .attr(\"fill\", \"none\")\n      //   .attr(\"timestamp\", function(d) {\n      //     return d.createdAt \n      //   })\n\n      var rect = svg.select(\"#rectStream\").selectAll(\"rect\").data(this.$data.simulation.nodes().filter(function (d) {\n        return d.type == \"Stream\";\n      })).enter().append(\"svg:rect\").attr(\"class\", \"node\").attr(\"x\", -rectWidth / 2).attr(\"y\", -rectHeight / 2).attr(\"width\", rectWidth).attr(\"height\", rectHeight).attr(\"rx\", 3).attr(\"ry\", 3).attr(\"timestamp\", function (d) {\n        return d.createdAt;\n      }).on(\"dblclick\", dblclick).call(this.drag(this.$data.simulation)).on(\"contextmenu\", this.contextMenu(\"stream\", this.menuStream));\n      var text = svg.select(\"#text\").selectAll(\"g\").data(this.$data.simulation.nodes()).enter().append(\"svg:g\").attr(\"timestamp\", function (d) {\n        return d.createdAt;\n      });\n      text.append(\"svg:text\").attr(\"x\", 8).attr(\"y\", \".31em\").attr(\"class\", \"shadow\") //.style(\"transform\", \"rotate(-45deg)\")\n      .style(\"font-size\", function (d) {\n        if (d.type == \"Client\") {\n          return \"30px\";\n        } else {\n          return \"30px\";\n        }\n      }).text(function (d) {\n        return d.name;\n      });\n      text.append(\"svg:text\").attr(\"x\", 8).attr(\"y\", \".31em\") //.style(\"transform\", \"rotate(-45deg)\")\n      .style(\"font-size\", function (d) {\n        if (d.type == \"Client\") {\n          return \"30px\";\n        } else {\n          return \"30px\";\n        }\n      }).text(function (d) {\n        return d.name;\n      });\n      var circleOwner = svg.select(\"#cenOwner\").selectAll(\"circle\"); // .data(circleOwnerData)\n      // .enter()\n      // .append(\"circle\")\n      // .attr(\"cx\", function (d) { return d.cx  })\n      // .attr(\"cy\", function (d) { return d.cy  })\n      // .attr(\"r\", function (d) { return d.radius  })\n      // .style(\"fill\", function (d) { return d.color  })\n\n      var textOwner = svg.select(\"#textOwner\").selectAll(\"text\").data(circleOwnerData).enter().append(\"svg:g\");\n      textOwner.append(\"svg:text\").attr(\"x\", 0).attr(\"y\", 0).style(\"font-size\", \"50px\").attr('x', 0).attr('y', 0).style(\"font-weight\", \"800\").text(function (d) {\n        return \"\".concat(d.userInfo.surname.charAt(0)).concat(d.userInfo.name.charAt(0));\n      }).append('svg:tspan').attr('x', 90).attr('y', 0).style(\"font-size\", \"30px\").text(function (d) {\n        return \"(\".concat(d.userInfo.company, \")\");\n      }).append('svg:tspan');\n      var circleDoc = svg.select(\"#cenDoc\").selectAll(\"circle\").data(circleDocData); // .enter()\n      // .append(\"circle\")\n      // .attr(\"r\", function (d) { return d.radius  })\n      // .style(\"fill\", function (d) { return d.color  })\n\n      var textDoc = svg.select(\"#textDoc\").selectAll(\"text\").data(groupDocs).enter().append(\"svg:g\");\n      textDoc.append(\"svg:image\").attr(\"xlink:href\", function (d) {\n        var docType = d.values[0].documentType;\n\n        if (docType === \"Rhino\") {\n          return Rhino3D;\n        } else if (docType === \"Dynamo\") {\n          return Dynamo;\n        } else if (docType === \"Excel\") {\n          return MicrosoftExcel;\n        } else if (docType === \"GSA\") {\n          return GSA;\n        } else if (docType === \"Grasshopper\") {\n          return Grasshopper3D;\n        } else if (docType === \"Revit\") {\n          return Revit;\n        } else {\n          return \"404\";\n        }\n      }).attr(\"width\", 150).attr(\"height\", 150).attr(\"x\", -75).attr(\"y\", -75); // .style(\"font-size\", \"50px\")\n      // .text(function(d) {\n      //   let docType = d.values[0].documentType\n      //   if(docType === \"Rhino\"){\n      //     return `🦏`\n      //   }\n      //   else if(docType === \"Dynamo\"){\n      //     return `🔧`\n      //   }\n      //   else if(docType === \"Excel\"){\n      //     //return `📊`\n      //     return `<line></line>`\n      //   }\n      //   else if(docType === \"GSA\"){\n      //     return `💎`\n      //   }\n      //   else if(docType === \"Grasshopper\"){\n      //     return `🦗`\n      //   }else{\n      //     return docType\n      //   }\n      // })\n\n      var parentContext = this;\n\n      function brushstarted() {\n        if (d3.event.sourceEvent.type !== \"end\") {\n          svg.select(\"#rectStream\").selectAll(\"rect\").classed(\"selected\", function (d) {\n            return d.selected = d.previouslySelected = parentContext.$data.shiftKey && d.selected;\n          });\n        }\n      }\n\n      function brushed() {\n        if (d3.event.sourceEvent.type !== \"end\") {\n          var selection = d3.event.selection;\n          svg.select(\"#rectStream\").selectAll(\"rect\").classed(\"selected\", function (d) {\n            return d.selected = d.previouslySelected ^ (selection != null && selection[0][0] <= d.x && d.x < selection[1][0] && selection[0][1] <= d.y && d.y < selection[1][1]);\n          });\n        }\n      }\n\n      function brushended() {\n        if (d3.event.selection != null) {\n          d3.select(this).call(d3.event.target.move, null);\n        }\n      }\n\n      function dblclick(d) {\n        d3.select(this).classed(\"fixed\", d.fixed = !d.fixed);\n      }\n\n      function dragstart(d) {\n        if (this.toggleFix) {\n          d3.select(this).classed(\"fixed\", d.fixed = true);\n        } else {\n          d3.select(this).classed(\"fixed\", d.fixed = false);\n        }\n      } //let parentContext = this \n\n\n      function tick() {\n        svg.selectAll(\".node\").attr(\"fill\", function (data) {\n          return parentContext.colour(data.index);\n        }).attr(\"cx\", function (d) {\n          return d.x;\n        }).attr(\"cy\", function (d) {\n          return d.y;\n        });\n        svg.select(\"#hullOwner\").selectAll(\".subhullOwner\").each(function (d, i) {\n          var sumX = 0;\n          var sumY = 0;\n\n          for (var _i3 = 0; _i3 < _Object$values(d)[1].length; _i3++) {\n            sumX += _Object$values(d)[1][_i3].x;\n            sumY += _Object$values(d)[1][_i3].y;\n          }\n\n          var avX = sumX / _Object$values(d)[1].length;\n\n          var avY = sumY / _Object$values(d)[1].length;\n\n          svg.select(\"#cenOwner\").selectAll(\"circle\").each(function (d, j) {\n            if (j === i && avX && avY) {\n              d3.select(this).attr(\"cx\", avX).attr(\"cy\", avY);\n            }\n          });\n          svg.select(\"#textOwner\").selectAll(\"text\").each(function (d, j) {\n            if (j === i && avX && avY) {\n              d3.select(this).attr(\"transform\", function (d) {\n                return \"translate(\" + avX + \",\" + avY + \")\";\n              });\n            }\n          });\n        });\n        svg.select(\"#hullOwner\").selectAll(\".subhullOwner\").data(groupOwners).attr(\"d\", groupPath).enter().insert(\"path\").attr(\"d\", groupPath);\n        svg.select(\"#hullDoc\").selectAll(\".subhullDoc\").each(function (d, i) {\n          var sumX = 0;\n          var sumY = 0;\n\n          for (var _i4 = 0; _i4 < _Object$values(d)[1].length; _i4++) {\n            sumX += _Object$values(d)[1][_i4].x;\n            sumY += _Object$values(d)[1][_i4].y;\n          }\n\n          var avX = sumX / _Object$values(d)[1].length;\n\n          var avY = sumY / _Object$values(d)[1].length;\n\n          svg.select(\"#cenDoc\").selectAll(\"circle\").each(function (d, j) {\n            if (j == i && avX && avY) {\n              d3.select(this).attr(\"cx\", avX).attr(\"cy\", avY);\n            }\n          });\n          svg.select(\"#textDoc\").selectAll(\"image\").each(function (d, j) {\n            if (j == i && avX && avY) {\n              d3.select(this).attr(\"transform\", function (d) {\n                return \"translate(\" + avX + \",\" + avY + \")\";\n              });\n            }\n          });\n        });\n        svg.select(\"#hullDoc\").selectAll(\".subhullDoc\").data(groupDocs).attr(\"d\", groupPath).enter().insert(\"path\").attr(\"d\", groupPath);\n        path.attr(\"d\", function (d) {\n          var dx = d.target.x - d.source.x,\n              dy = d.target.y - d.source.y,\n              dr = Math.sqrt(dx * dx + dy * dy);\n          var x0 = d.source.x;\n          var y0 = d.source.y;\n          var x1 = d.target.x;\n          var y1 = d.target.y;\n          var xcontrol = x1 * 0.5 + x0 * 0.5;\n          var ycontrol = y1 * 0.5 + y0 * 0.5;\n          var smartDiagonal;\n\n          if (Math.abs(x0 - x1) > Math.abs(y0 - y1)) {\n            smartDiagonal = [\"M\", x0, y0, \"C\", xcontrol, y0, xcontrol, y1, x1, y1].join(\" \");\n          }\n\n          if (Math.abs(y0 - y1) > Math.abs(x0 - x1)) {\n            smartDiagonal = [\"M\", x1, y1, \"C\", x1, ycontrol, x0, ycontrol, x0, y0].join(\" \");\n          }\n\n          if (parentContext.selectedEdgesDisplay == \"Diagonal Horizontal\") {\n            return [\"M\", x0, y0, \"C\", xcontrol, y0, xcontrol, y1, x1, y1].join(\" \");\n          }\n\n          if (parentContext.selectedEdgesDisplay == \"Diagonal Vertical\") {\n            return [\"M\", x1, y1, \"C\", x1, ycontrol, x0, ycontrol, x0, y0].join(\" \");\n          }\n\n          if (parentContext.selectedEdgesDisplay == \"Diagonal Smart\") {\n            return smartDiagonal;\n          }\n\n          if (parentContext.selectedEdgesDisplay == \"Line\") {\n            return [\"M\", x0, y0, \"L\", x1, y1].join(\" \");\n          }\n\n          if (parentContext.selectedEdgesDisplay == \"Arc\") {\n            return [\"M\", x0, y0, \"A\", dr, dr, \" 0 0,1 \", x1, y1].join(\" \");\n          }\n        }).attr(\"stroke\", function (data) {\n          return parentContext.colour(data.source.index);\n        }); //\n        // svg.selectAll('marker')\n        // .attr('fill', data =>\n        //   colour(data.target.index)\n        // ) \n        // circleSender.attr(\"transform\", function(d) {\n        //   return \"translate(\" + d.x + \",\" + d.y + \")\" \n        // })\n        //  \n        // circleReceiver.attr(\"transform\", function(d) {\n        //   return \"translate(\" + d.x + \",\" + d.y + \")\" \n        // }) \n\n        rect.attr(\"transform\", function (d) {\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\n        });\n        text.attr(\"transform\", function (d) {\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\n        });\n      }\n\n      this.drawGraph.tick = tick; // create a reference to the inner function\n\n      this.updateDisplayNodes(\"#circleSender\");\n      this.updateDisplayNodes(\"#circleReceiver\");\n      this.updateDisplayNodes(\"#rectStream\");\n      this.updateDisplayNodes(\"#text\");\n      this.updateDisplayLinks(\"#pathLink\");\n    }\n  },\n  mounted: function mounted() {\n    this.svgWidth = document.getElementById(\"clientGraph\").offsetWidth;\n    this.drawGraph();\n  },\n  computed: {\n    myserver: function myserver() {\n      // `this` points to the vm instance\n      return this;\n    }\n  }\n};",{"version":3,"sources":["ForceDirectedLayout.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"clientGraph\">\n    <svg width=\"100%\" :height=\"svgHeight\" id=\"graphLayout\">\n      <g class=\"everything\">\n        <g v-show=\"!switchForce\" id=\"hullDoc\" />\n        <g v-show=\"!switchForce\" id=\"cenDoc\" />\n        <g v-show=\"!switchForce\" id=\"textDoc\" />\n        <g v-show=\"switchForce\" id=\"hullOwner\" />\n        <g v-show=\"switchForce\" id=\"cenOwner\" />\n        <g v-show=\"switchForce\" id=\"textOwner\" />\n        <g id=\"pathLink\" />\n        <g id=\"marker\" />\n        <g id=\"circleSender\" />\n        <g id=\"circleReceiver\" />\n        <!-- <g id=\"rectParcoords\" /> -->\n        <g id=\"rectStream\" />\n        <g id=\"text\" />\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\"\nimport ParCoords from 'parcoord-es'\nimport MicrosoftExcel from \"../../public/img/icons/MicrosoftExcel.svg\"\nimport Grasshopper3D from \"../../public/img/icons/Grasshopper3D.svg\"\nimport Rhino3D from \"../../public/img/icons/Rhino3D.svg\"\nimport GSA from \"../../public/img/icons/GSA.svg\"\nimport Revit from \"../../public/img/icons/Revit.svg\"\nimport Dynamo from \"../../public/img/icons/Dynamo.svg\"\n\nexport default {\n  name: \"ForceDirectedLayout\",\n\n  props: {\n    clientdata: Array,\n    svgHeight: Number,\n    showDocGroups: Array,\n    clientdatafilter: Array,\n    timeFilter: Array,\n    toggleFix: Boolean,\n    brush: Boolean,\n    documentLinksForce: Number,\n    switchForce: Boolean,\n    inspectTimeframe: Boolean,\n    inspectSelectedTags: Boolean,\n    streamTags: Array,\n    refocus: Boolean,\n    selectedEdgesDisplay: String,\n    selectedGraphLayout: String,\n    parcoords_selstreams: Array,\n  },\n\n  watch: {\n    // parcoords_selstreams: function(){\n    //   let context = this\n    //   Array.from(document.querySelector(\"#rectParcoords\").children).forEach(\n    //     function(d) {\n    //       if(context.$props.parcoords_selstreams.includes(d3.select(d).datum()._id)){\n    //         d.classList.add(\"parcoordsSelection\")\n    //       }else{\n    //         d.classList.remove(\"parcoordsSelection\")\n    //       }\n\n    //     }\n    //   )\n    // },\n    selectedGraphLayout: function() {\n      this.drawGraph.tick()\n    },\n\n    selectedEdgesDisplay: function() {\n      this.drawGraph.tick()\n    },\n\n    refocus: function() {\n      let container = d3.select(\".everything\")\n      let zoom = d3\n        .zoom()\n        .scaleExtent([0, 0])\n        .on(\"zoom\", () => {\n          container.attr(\"transform\", d3.event.transform)\n        })\n      d3.select(\"#graphLayout\").call(\n        zoom.transform,\n        d3.zoomIdentity.translate(0, 0).scale(1)\n      ) \n    },\n    inspectSelectedTags: function() {\n      let taggedStreams = [] \n      Array.from(document.querySelector(\"#rectStream\").children).forEach(\n        function(d) {\n          if (d.classList.contains(\"tagSelected\")) {\n            taggedStreams.push(d3.select(d).datum().streamId) \n          } else {\n          }\n        }\n      ) \n      let base = new URL(this.$store.state.server)\n      let viewerUrl = base.origin + `/#/view/${taggedStreams.join(\",\")}`\n      window.open(viewerUrl, \"_blank\").focus() \n    },\n    streamTags: function() {\n      let context = this \n      Array.from(document.querySelector(\"#rectStream\").children).forEach(\n        function(d) {\n          let myStreamTags = Array.from(d3.select(d).datum().tags) \n          let selected = context.findCommonElement(\n            myStreamTags,\n            context.streamTags\n          ) \n          if (selected) {\n            d.classList.remove(\"tagSelected\") \n            //context.selectedTaggedStreams.splice( context.selectedTaggedStreams.indexOf(d3.select(d).datum().streamId), 1 )\n            if (\n              context.selectedTaggedStreams.indexOf(\n                d3.select(d).datum().streamId\n              ) != -1\n            ) {\n              context.selectedTaggedStreams.splice(\n                context.selectedTaggedStreams.indexOf(\n                  d3.select(d).datum().streamId\n                ),\n                1\n              ) \n            }\n            d.classList.add(\"tagSelected\") \n            context.selectedTaggedStreams.push(d3.select(d).datum().streamId) \n          } else {\n            d.classList.remove(\"tagSelected\") \n            if (\n              context.selectedTaggedStreams.indexOf(\n                d3.select(d).datum().streamId\n              ) != -1\n            ) {\n              context.selectedTaggedStreams.splice(\n                context.selectedTaggedStreams.indexOf(\n                  d3.select(d).datum().streamId\n                ),\n                1\n              ) \n            }\n          }\n        }\n      ) \n      context.$emit(\"triggeredTags\", context.selectedTaggedStreams) \n    },\n    inspectTimeframe: function() {\n      let selectedStreams = [] \n      Array.from(document.querySelector(\"#rectStream\").children).forEach(\n        function(d) {\n          if (d.classList.contains(\"selected\")) {\n            selectedStreams.push(d3.select(d).datum().streamId) \n          }\n        }\n      ) \n\n      let base = new URL(this.$store.state.server)\n      let viewerUrl = base.origin + `/#/view/${selectedStreams.join(\",\")}`\n\n      window.open(viewerUrl, \"_blank\").focus() \n    },\n    brush: function() {\n    },\n    switchForce: function() {\n      if (this.switchForce) {\n        this.$data.simulation\n          .force(\"link\")\n          .links(\n            this.forceLinks.filter(d => d.type != \"documentGuidForceGroup\")\n          ) \n        this.$data.simulation.alpha(1).restart() \n      } else {\n        this.$data.simulation\n          .force(\"link\")\n          .links(this.forceLinks.filter(d => d.type != \"ownerForceGroup\")) \n        this.$data.simulation.alpha(1).restart() \n      }\n    },\n\n    documentLinksForce: function() {\n      this.$data.simulation.force(\"link\").distance(d => {\n        if (d.type == \"ownerForceGroup\") {\n          return this.documentLinksForce \n        } else if (d.type == \"documentGuidForceGroup\") {\n          return this.documentLinksForce \n        } else {\n          return 116 \n        }\n      }) \n      this.$data.simulation.alpha(1).restart() \n    },\n    toggleFix: function() {\n      if (this.toggleFix) {\n        this.$data.simulation.stop() \n        d3.selectAll(\"circle\").classed(\"fixed\", d => {\n          d.fixed = true \n        }) \n        d3.selectAll(\"rect\").classed(\"fixed\", d => {\n          d.fixed = true \n        }) \n      } else {\n        this.$data.simulation.alphaTarget(0.3).restart() \n        d3.selectAll(\"circle\").classed(\"fixed\", d => {\n          d.fixed = false \n        }) \n        d3.selectAll(\"rect\").classed(\"fixed\", d => {\n          d.fixed = false \n        }) \n      }\n    },\n    clientdatafilter: function() {\n \n    },\n\n    timeFilter: function() {\n      this.updateDisplayNodes(\"#circleSender\") \n      this.updateDisplayNodes(\"#circleReceiver\") \n      this.updateDisplayNodes(\"#rectStream\") \n      this.updateDisplayNodes(\"#text\") \n      this.updateDisplayLinks(\"#pathLink\") \n    }\n  },\n\n  data: () => ({\n    forceLinks: [],\n    shiftKey: null,\n    filteredNodes: null,\n    colour: null,\n    groupPath: null,\n    simulation: null,\n    selectedTaggedStreams: [],\n    svgWidth: document.getElementById(\"appClientGraph\").offsetWidth,\n    context: this,\n\n\n    hullPadding: 11,\n\n    roundedHull: function(polyPoints) {\n      \n      // Returns the SVG path data string representing the polygon, expanded and rounded.\n\n      // Handle special cases\n      if (!polyPoints || polyPoints.length < 1) return \"\" \n      if (polyPoints.length === 1) return this.roundedHull1(polyPoints) \n      if (polyPoints.length === 2) return this.roundedHull2(polyPoints) \n\n      let segments = new Array(polyPoints.length) \n\n      // Calculate each offset (outwards) segment of the convex hull.\n      for (\n        let segmentIndex = 0;\n        segmentIndex < segments.length;\n        ++segmentIndex\n      ) {\n        let p0 =\n          segmentIndex === 0\n            ? polyPoints[polyPoints.length - 1]\n            : polyPoints[segmentIndex - 1]\n        let p1 = polyPoints[segmentIndex]\n\n        // Compute the offset vector for the line segment, with length = hullPadding.\n        let offset = vecScale(this.hullPadding, this.unitNormal(p0, p1))\n\n        segments[segmentIndex] = [this.vecSum(p0, offset), this.vecSum(p1, offset)] \n      }\n\n      let arcData = \"A \" + [this.hullPadding, this.hullPadding, \"0,0,0,\"].join(\",\") \n\n      segments = segments.map(function(segment, index) {\n        let pathFragment = \"\" \n        if (index === 0) {\n          let pathFragment = \"M \" + segments[segments.length - 1][1] + \" \" \n        }\n        pathFragment += arcData + segment[0] + \" L \" + segment[1] \n\n        return pathFragment \n      }) \n\n      return segments.join(\" \") \n    },\n    roundedHull1: function(polyPoints) {\n      // Returns the path for a rounded hull around a single point (a circle).\n      let p1 = [polyPoints[0][0], polyPoints[0][1] - this.hullPadding] \n      let p2 = [polyPoints[0][0], polyPoints[0][1] + this.hullPadding] \n      return (\n        \"M \" +\n        p1 +\n        \" A \" +\n        [this.hullPadding, this.hullPadding, \"0,0,0\", p2].join(\",\") +\n        \" A \" +\n        [this.hullPadding, this.hullPadding, \"0,0,0\", p1].join(\",\")\n      ) \n    },\n    roundedHull2: function(polyPoints) {\n      // Returns the path for a rounded hull around two points (a \"capsule\" shape).\n      let offsetVector = this.vecScale(\n        this.hullPadding,\n        this.unitNormal(polyPoints[0], polyPoints[1])\n      ) \n      let invOffsetVector = this.vecScale(-1, offsetVector) \n      let p0 = this.vecSum(polyPoints[0], offsetVector) \n      let p1 = this.vecSum(polyPoints[1], offsetVector) \n      let p2 = this.vecSum(polyPoints[1], invOffsetVector) \n      let p3 = this.vecSum(polyPoints[0], invOffsetVector) \n      return (\n        \"M \" +\n        p0 +\n        \" L \" +\n        p1 +\n        \" A \" +\n        [this.hullPadding, this.hullPadding, \"0,0,0\", p2].join(\",\") +\n        \" L \" +\n        p3 +\n        \" A \" +\n        [this.hullPadding, this.hullPadding, \"0,0,0\", p0].join(\",\")\n      ) \n    },\n    vecScale: function(scale, v) {\n      // Returns the vector 'v' scaled by 'scale'.\n      return [scale * v[0], scale * v[1]] \n    },\n    vecSum: function(pv1, pv2) {\n      // Returns the sum of two vectors, or a combination of a point and a vector.\n      return [pv1[0] + pv2[0], pv1[1] + pv2[1]] \n    },\n    unitNormal: function(p0, p1) {\n      // Returns the unit normal to the line segment from p0 to p1.\n      let n = [p0[1] - p1[1], p1[0] - p0[0]] \n      let nLength = Math.sqrt(n[0] * n[0] + n[1] * n[1]) \n      return [n[0] / nLength, n[1] / nLength] \n    }\n  }),\n\n  methods: {\n\n    menuClient(){ \n      \n      return [\n        {\n          title: \"Client Info\",\n          action: function(d, i) {\n            let data = d3.select(d).datum() \n            window.alert(\n              d3.select(d).datum().documentType +\n                \": \" +\n                d3.select(d).datum().documentName +\n                \"\\n\" +\n                \"Created at\" +\n                \": \" +\n                d3.select(d).datum().createdAt +\n                \"\\n\" +\n                \"Updated at\" +\n                \": \" +\n                d3.select(d).datum().updatedAt +\n                \"\\n\" +\n                \"Owner is\" +\n                \": \" +\n                d3.select(d).datum().owner\n            ) \n          }\n        }\n      ]},\n      menuStream(){ \n            \n            let context = this\n            \n            return [\n            \n            {\n              title: \"View Stream in Viewer\",\n              action: function(d, i) {\n                let data = d3.select(d).datum()\n                let base = new URL(context.$store.state.server)\n                let viewerUrl = base.origin + `/#/view/${data.streamId}`\n                window.open(viewerUrl, \"_blank\").focus() \n              },\n              disabled: false // optional, defaults to false\n            },\n            {\n              title: \"View Stream in Admin\",\n              action: function(d, i) {\n                let data = d3.select(d).datum()\n                let base = new URL(context.$store.state.server)\n                let adminUrl = base.origin + `/#/streams/${data.streamId}`\n                window.open(adminUrl, \"_blank\").focus()\n              },\n              disabled: false // optional, defaults to false\n            },\n            {\n              title: \"View Stream Data\",\n              action: function(d, i) {\n                let data = d3.select(d).datum()\n                let base = new URL(context.$store.state.server)\n                let dataUrl = base + `/streams/${data.streamId}`\n                window.open(dataUrl, \"_blank\").focus()\n              }\n            },\n            {\n              title: \"View Connected Clients\",\n              action: function(d, i) {\n                let data = d3.select(d).datum()\n                let base = new URL(context.$store.state.server)\n                let dataUrlClients = base + `/streams/${data.streamId}/clients`\n                window.open(dataUrlClients, \"_blank\").focus() \n              }\n            }\n          ]},\n\n    zoom_actions() {\n      d3.select(\".everything\").attr(\"transform\", d3.event.transform) \n    },\n\n    findCommonElement(array1, array2) {\n      for (let i = 0; i < array1.length; i++) {\n        for (let j = 0; j < array2.length; j++) {\n          if (array1[i] === array2[j]) {\n            return true\n          }\n        }\n      }\n      return false\n    },\n\n    // Drag events for the whole d3 force simulation\n    drag() {\n      let parentContext = this \n      function dragstarted(d) {\n        if (!d3.event.active)\n          parentContext.simulation.alphaTarget(0.3).restart() \n        d.fx = d.x \n        d.fy = d.y \n      }\n\n      function dragged(d) {\n        d.fx = d3.event.x \n        d.fy = d3.event.y \n      }\n\n      function dragended(d) {\n        if (!d3.event.active) parentContext.simulation.alphaTarget(0) \n        d.fx = null \n        d.fy = null \n      }\n\n      return d3\n        .drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended) \n    },\n\n    updateDisplayLinks(id) {\n\n      let context = this \n      Array.from(document.querySelector(id).children).forEach(function(node) {\n        let nodeTimeComparerSource =\n          new Date(node.getAttribute(\"source_timestamp\"))\n            .toISOString()\n            .split(\".\")[0] + \".000Z\" \n        let nodeTimeComparerTarget =\n          new Date(node.getAttribute(\"target_timestamp\"))\n            .toISOString()\n            .split(\".\")[0] + \".000Z\" \n\n        if (\n          nodeTimeComparerSource >= context.timeFilter[0] &&\n          nodeTimeComparerSource <= context.timeFilter[1] &&\n          (nodeTimeComparerTarget >= context.timeFilter[0] &&\n            nodeTimeComparerTarget <= context.timeFilter[1])\n        ) {\n          node.style.opacity = 1 \n          node.style.transition = \"visibility 0s, opacity 0.4s linear\" \n        } else {\n          node.style.opacity = 0.2 \n          node.style.transition = \"visibility 0s, opacity 0.4s linear\" \n        }\n      }) \n    },\n    updateDisplayNodes(id) {\n      let context = this \n\n      Array.from(document.querySelector(id).children).forEach(function(node) {\n        let nodeTimeComparer =\n          new Date(node.getAttribute(\"timestamp\")).toISOString().split(\".\")[0] +\n          \".000Z\" \n        if (\n          nodeTimeComparer >= context.timeFilter[0] &&\n          nodeTimeComparer <= context.timeFilter[1]\n        ) {\n          node.classList.remove(\"unselected\") \n          node.classList.add(\"selected\") \n          node.style.transition = \"visibility 0s, opacity 0.4s linear\" \n\n          node.style.opacity = 1 \n        } else {\n          //node.style.display = \"none\"\n          node.classList.remove(\"selected\") \n          node.classList.add(\"unselected\") \n          node.style.opacity = 0.2 \n          node.style.transition = \"visibility 0s, opacity 0.4s linear\" \n        }\n      }) \n\n      let selectedStreams = [] \n      Array.from(document.querySelector(\"#rectStream\").children).forEach(\n        function(d) {\n          if (d.classList.contains(\"selected\")) {\n            selectedStreams.push(d3.select(d).datum().streamId) \n          }\n        }\n      ) \n      context.$emit(\"triggeredTimeFrame\", selectedStreams) \n    },\n\n    contextMenu(type, menu, openCallback) {\n      // create the div element that will hold the context menu\n      d3.selectAll(\".d3-context-menu\")\n        .data([1])\n        .enter()\n        .append(\"div\")\n        .attr(\"class\", \"d3-context-menu\") \n\n      // close menu\n      d3.select(\".application--wrap\").on(\"click.d3-context-menu\", function() {\n        d3.select(\".d3-context-menu\").style(\"display\", \"none\") \n      }) \n\n      // this gets executed when a contextmenu event occurs\n      return function(data, index) {\n        let elm = this \n\n        d3.selectAll(\".d3-context-menu\").html(\"\") \n        let list = d3.selectAll(\".d3-context-menu\").append(\"ul\") \n        list\n          .selectAll(\"li\")\n          .data(menu)\n          .enter()\n          .append(\"li\")\n          .attr(\"class\", type)\n          .html(function(d) {\n            return d.title \n          })\n          .on(\"click\", function(d, i) {\n            d.action(elm, data, index) \n            d3.select(\".d3-context-menu\").style(\"display\", \"none\") \n          }) \n\n        // the openCallback allows an action to fire before the menu is displayed\n        // an example usage would be closing a tooltip\n        if (openCallback) openCallback(data, index) \n\n        // display context menu.\n        d3.select(\".d3-context-menu\")\n          .style(\"left\", d3.event.pageX - 2 + \"px\")\n          .style(\"top\", d3.event.pageY - 2 + \"px\")\n          .style(\"display\", \"block\") \n\n        d3.event.preventDefault() \n      } \n    },\n    groupBy(arr, property) {\n      return arr.reduce(function(memo, x) {\n        if (!memo[x[property]]) {\n          memo[x[property]] = [] \n        }\n        memo[x[property]].push(x) \n        return memo \n      }, {}) \n    },\n\n    drawGraph() {\n      let _nodes = this.clientdata[0] \n      let links = this.clientdata[1] \n\n      // Sorts all nodes by creation timestamps\n      _nodes.sort(function(a, b) {\n        return a.createdAt < b.createdAt\n          ? -1\n          : a.createdAt > b.createdAt\n          ? 1\n          : 0 \n      }) \n\n      let thisContext = this \n\n      for (let i = 0; i < links.length; i++) {\n        if (links[i].action === \"sending\") {\n          let source = _nodes\n            .map(function(e) {\n              if (e.type === \"Client\") {\n                return e._id \n              }\n            })\n            .indexOf(links[i].source) \n\n          // defines a source per client\n          let sourceClient = _nodes\n            .map(function(e) {\n              if (e.type === \"Client\") {\n                return e._id \n              }\n            })\n            .indexOf(links[i].sourceClient) \n\n          // defines a source per document\n          let sourceDoc = _nodes\n            .map(function(e) {\n              if (e.type === \"Client\") {\n                return e.documentGuid \n              }\n            })\n            .indexOf(links[i].sourceDoc) \n\n          let target = _nodes\n            .map(function(e) {\n              return e._id \n            })\n            .indexOf(links[i].target) \n\n          thisContext.forceLinks.push({\n            source,\n            sourceDoc,\n            sourceClient,\n            target,\n            type: `sending`,\n            display: true\n          }) \n        }\n        if (links[i].action === \"receiving\") {\n          let source = _nodes\n            .map(function(e) {\n              return e._id \n            })\n            .indexOf(links[i].source) \n\n          let target = _nodes\n            .map(function(e) {\n              if (e.type === \"Client\") {\n                return e._id \n              }\n            })\n            .indexOf(links[i].target) \n\n          // defines a target per document\n          let targetDoc = _nodes\n            .map(function(e) {\n              if (e.type === \"Client\") {\n                return e.documentGuid \n              }\n            })\n            .indexOf(links[i].targetDoc) \n\n          // defines a target per client\n          let targetClient = _nodes\n            .map(function(e) {\n              if (e.type === \"Client\") {\n                return e._id \n              }\n            })\n            .indexOf(links[i].targetClient) \n\n          thisContext.forceLinks.push({\n            source,\n            target,\n            targetDoc,\n            targetClient,\n            type: `receiving`,\n            display: true\n          }) \n        }\n      }\n\n      let clientNodes = _nodes.filter(data => data.type == \"Client\") \n      let parentGroups = this.groupBy(clientNodes, \"owner\") \n\n    \n    let circleOwnerData = []\n      for (let property in parentGroups) {\n        let parGroup = parentGroups[property] \n\n        // let sumX = 0\n        // let sumY = 0\n        // for (let i = 0; i < parGroup.length; i++) {\n        //   sumX += parGroup[i].x\n        //   sumY += parGroup[i].y\n        // }\n        // let avX = sumX / parGroup.length\n        // let avY = sumY / parGroup.length\n        let circCenterOwner = {\"radius\": 4, \"color\": \"#7ebff3\", userInfo: parGroup[0].userInfo}\n        circleOwnerData.push(circCenterOwner)\n      }\n\n\n      for (let property in parentGroups) {\n        let parGroup = parentGroups[property] \n        for (let i = 0; i < parGroup.length - 1; i++) {\n          for (let j = i + 1; j < parGroup.length; j++) {\n            thisContext.forceLinks.push({\n              source: parGroup[i],\n              target: parGroup[j],\n              type: \"ownerForceGroup\",\n              display: false\n            }) \n          }\n        }\n      }\n\n\n\n    let childGroups = this.groupBy(clientNodes, \"documentGuid\") \n\n    \n    let circleDocData = []\n      for (let property in childGroups) {\n        let childGroup = childGroups[property] \n        let infoDoc = \"\"\n\n        if(childGroup[0].documentType === \"Rhino\"){\n          infoDoc = `rhi`\n          circleDocData.push({\"radius\": 4, \"color\": \"hotpink\", \"infoDoc\": `rhi`})\n        }\n        else if(childGroup[0].documentType === \"Dynamo\"){\n          infoDoc = `dyn`\n          circleDocData.push({\"radius\": 4, \"color\": \"hotpink\", \"infoDoc\": `dyn`})\n        }\n        else if(childGroup[0].documentType === \"GSA\"){\n          infoDoc = `gsa`\n          circleDocData.push({\"radius\": 4, \"color\": \"hotpink\", \"infoDoc\": `gsa`})\n        }\n        else if(childGroup[0].documentType === \"Grasshopper\"){\n          infoDoc = `grasshopper`\n          circleDocData.push({\"radius\": 4, \"color\": \"hotpink\", \"infoDoc\": `grasshopper`})\n\n        }\n        // if(childGroup[0].documentType === \"Revit\"){\n        //   infoDoc = `Revit`\n        // }\n        // if(childGroup[0].documentType === \"Excel\"){\n        //   infoDoc = `📊`\n        // }\n        \n        \n        // let sumX = 0\n        // let sumY = 0\n        // for (let i = 0; i < childGroup.length; i++) {\n        //   sumX += childGroup[i].x\n        //   sumY += childGroup[i].y\n        // }\n        // let avX = sumX / childGroup.length\n        // let avY = sumY / childGroup.length\n\n        //let circCenterDoc = {\"radius\": 4, \"color\": \"hotpink\", \"infoDoc\": infoDoc}\n        \n      }\n\n      for (let property in childGroups) {\n        let childGroup = childGroups[property];\n        for (let i = 0; i < childGroup.length - 1; i++) {          \n          for (let j = i + 1; j < childGroup.length; j++) {\n            thisContext.forceLinks.push({\n              source: childGroup[i],\n              target: childGroup[j],\n              type: \"documentGuidForceGroup\",\n              display: false\n            });\n          }\n        }\n      }\n\n      // d3.select(\"#graphLayout\")\n      //   .call( d3.brush()                     // Add the brush feature using the d3.brush function\n      //     .extent( [ [0,0], [this.$data.svgWidth,this.$props.svgHeight] ] )       // initialise the brush area: start at 0,0 and finishes at width,height: it means I select the whole graph area\n      //   )\n\n      let svg = d3.select(\"#graphLayout\") \n\n      // let brush = svg.append(\"g\")\n      //   .attr(\"class\", \"brush\");\n\n      // if(this.$props.brush){\n      // brush.call(d3.brush()\n      //       .extent([[0, 0], [this.$data.svgWidth, this.$props.svgHeight]])\n      //       .on(\"start\", brushstarted)\n      //       .on(\"brush\", brushed)\n      //       .on(\"end\", brushended));\n      // }\n\n      this.$data.simulation = d3\n        .forceSimulation()\n        .nodes(d3.values(_nodes))\n        //.force(\"forceX\", d3.forceX(0).strength(0.08))\n        .force(\n          \"link\",\n          d3.forceLink(thisContext.forceLinks).distance(d => {\n            if (d.type == \"ownerForceGroup\") {\n              return this.documentLinksForce \n            } else if (d.type == \"documentGuidForceGroup\") {\n              return this.documentLinksForce \n            } else {\n              return 100 \n            }\n          })\n        )\n        .force(\n          \"center\",\n          d3.forceCenter(this.$data.svgWidth / 2, this.$props.svgHeight / 2)\n        )\n        .force(\n          \"charge\",\n          d3.forceManyBody().strength(function(d) {\n            if (d.type == \"ownerForceGroup\") {\n              return 200 \n            } else if (d.type == \"documentGuidForceGroup\") {\n              return 200 \n            } else {\n              return -700 \n            }\n          })\n        )\n        .on(\"tick\", tick) \n\n      if (this.selectedGraphLayout == \"Free\") {\n        this.$data.simulation\n          .force(\"forceX\", d3.forceX(0).strength(0))\n          .force(\"forceY\", d3.forceY(0).strength(0)) \n      }\n\n      if (this.selectedGraphLayout == \"Horizontal\") {\n        this.$data.simulation\n          .force(\"forceX\", d3.forceX(0).strength(0))\n          .force(\"forceY\", d3.forceY(0).strength(0.08)) \n      }\n\n      if (this.selectedGraphLayout == \"Vertical\") {\n        this.$data.simulation\n          .force(\"forceX\", d3.forceX(0).strength(0.08))\n          .force(\"forceY\", d3.forceY(0).strength(0)) \n      }\n\n      //add zoom capabilities\n      let zoom_handler = d3.zoom().on(\"zoom\", this.zoom_actions) \n\n      zoom_handler(svg) \n      // REMOVE ZOOM\n      svg.on(\"dblclick.zoom\", null) \n      this.$data.simulation.nodes().forEach(function(d) {\n        d.selected = false \n        d.previouslySelected = false \n      }) \n\n      if (this.switchForce) {\n        // docs\n        let filterLinks = this.forceLinks.filter(\n          d => d.type != \"documentGuidForceGroup\"\n        ) \n        this.$data.simulation.force(\"link\").links(filterLinks) \n        this.$data.simulation.alpha(1).restart() \n      } else {\n        let filterLinks = this.forceLinks.filter(\n          d => d.type != \"ownerForceGroup\"\n        ) \n        this.$data.simulation.force(\"link\").links(filterLinks) \n        this.$data.simulation.alpha(1).restart() \n      }\n\n      this.$data.colour = d3\n        .scaleLinear()\n        .domain([0, _nodes.length - 1])\n        .interpolate(d3.interpolateHcl)\n        .range([d3.rgb(\"lightgray\"), d3.rgb(\"blue\")]) \n\n      let xScale = d3\n        .scaleLinear()\n        .domain([0, this.svgWidth])\n        .range([0, this.svgWidth]) \n      let yScale = d3\n        .scaleLinear()\n        .domain([0, this.svgHeight])\n        .range([0, this.svgHeight]) \n\n      // Define the div for the tooltip\n      let divCircle = d3.select(\".tooltip\").style(\"opacity\", 0) \n      let divOwner = d3.select(\".tooltipOwner\").style(\"opacity\", 0) \n      let divDoc = d3.select(\".tooltipDoc\").style(\"opacity\", 0) \n      \n      svg\n        .select(\"#hullOwner\")\n        .selectAll(\"path\")\n        .data(Object.keys(parentGroups))\n        .enter()\n        .append(\"path\")\n\n        .attr(\"class\", \"subhullOwner\")\n\n        .on(\"mouseover\", function(d) {\n          \n          divOwner.style(\"opacity\", 0.8) \n          divOwner\n            .html(`Owner: ${d.values[0].owner}`)\n            .style(\"left\", d3.event.pageX + \"px\")\n            .style(\"top\", d3.event.pageY - 28 + \"px\") \n        })\n        .on(\"mouseout\", function(d) {\n          divOwner.style(\"opacity\", 0) \n        }) \n      svg.select(\"#hullOwner\").selectAll(\"path\") \n\n      // let childGroups = this.groupBy(clientNodes, \"documentGuid\");\n\n      svg\n        .select(\"#hullDoc\")\n        .selectAll(\"path\")\n        .data(Object.keys(childGroups))\n        .enter()\n        .append(\"path\")\n        .attr(\"class\", \"subhullDoc\")\n        .on(\"mouseover\", function(d) {\n          \n          divDoc.style(\"opacity\", 0.8) \n          divDoc\n            .html(\n              `DocumentGuid: ${d.values[0].documentGuid}<br/>\n            DocumentType: ${d.values[0].documentType}<br/>\n            DocumentName: ${d.values[0].documentName}`\n            )\n            .style(\"left\", d3.event.pageX + \"px\")\n            .style(\"top\", d3.event.pageY - 28 + \"px\") \n        })\n        .on(\"mouseout\", function(d) {\n          divDoc.style(\"opacity\", 0) \n        }) \n\n      let groupOwners = d3\n        .nest()\n        .key(function(d) {\n          return d.owner \n        })\n        .entries(this.simulation.nodes().filter(data => data.type == \"Client\")) \n      \n      let groupDocs = d3\n        .nest()\n        .key(function(d) {\n          return d.documentGuid \n        })\n        .entries(this.simulation.nodes().filter(data => data.type == \"Client\")) \n\n      let context = this\n      let groupPath = function(d) {\n        if(d.values.length >= 3){\n          return (\n            \"M\" +\n            d3\n              .polygonHull(\n                d.values.map(function(i) {\n                  return [i.x, i.y] \n                })\n              )\n              .join(\"L\") +\n            \"Z\"\n          )\n        }\n        else{\n         return (\n            context.$data.roundedHull(\n                d.values.map(function(i) {\n                  return [i.x, i.y] \n                })\n              )\n          )\n        }\n      } \n\n      //\n      svg\n        .select(\"#marker\")\n        .selectAll(\"marker\")\n        .data(\n          this.$data.simulation\n            .force(\"link\")\n            .links()\n            .filter(data => data.display)\n        )\n        .enter()\n        .append(\"svg:marker\")\n        .attr(\"source_timestamp\", data => data.source.createdAt)\n        .attr(\"target_timestamp\", data => data.target.createdAt)\n        .attr(\"id\", data => data.type)\n        .attr(\"viewBox\", \"0 -5 10 10\")\n        // handles the size difference between streams and client\n        .attr(\"refX\", data => {\n          if (data.type === \"sending\") {\n            return 21 \n          } else if (data.type === \"receiving\") {\n            return 15 \n          }\n        })\n        .attr(\"refY\", 0)\n        .attr(\"markerWidth\", 20)\n        .attr(\"markerHeight\", 12)\n        .attr(\"orient\", \"auto\")\n        .attr(\"fill-opacity\", 1)\n\n        //.attr(\"fill\", data => this.colour(data.target.index))\n        .attr(\"markerUnits\", \"userSpaceOnUse\")\n        .attr(\"stroke-linecap\", \"round\") \n      // .append(\"svg:path\")\n      // .attr(\"d\", \"M0,-5L10,0L0,5\") \n      let path = svg\n        .select(\"#pathLink\")\n        .selectAll(\"path\")\n        .data(\n          this.$data.simulation\n            .force(\"link\")\n            .links()\n            .filter(data => data.display)\n        )\n        .enter()\n        .append(\"svg:path\")\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"stroke-width\", data => {\n          if (data.source.type === \"Stream\") {\n            if (data.source.objectsNumber > 15) {\n              return 8 \n            } else if (data.source.objectsNumber < 2) {\n              return 3 \n            } else {\n              return data.source.objectsNumber \n            }\n          }\n          if (data.target.type === \"Stream\") {\n            if (data.target.objectsNumber > 15) {\n              return 8 \n            } else if (data.target.objectsNumber < 2) {\n              return 3 \n            } else {\n              return data.target.objectsNumber \n            }\n          }\n        })\n        .attr(\"stroke-linecap\", \"round\")\n        .attr(\"source_timestamp\", data => data.source.createdAt)\n        .attr(\"target_timestamp\", data => data.target.createdAt)\n        .attr(\"class\", function(d) {\n          return \"link \" + d.type \n        })\n\n        .attr(\"marker-end\", function(d) {\n          return \"url(#\" + d.type + \")\" \n        }) \n      //\n      //\n      let circleSender = svg\n        .select(\"#circleSender\")\n        .selectAll(\"circle\")\n        .data(\n          this.$data.simulation.nodes().filter(data => data.role == \"Sender\" || data.role == \"sender\")\n        )\n        .enter()\n        .append(\"svg:circle\")\n        .attr(\"class\", \"sender\")\n        .attr(\"class\", \"node\")\n        .attr(\"r\", 6)\n        .attr(\"timestamp\", function(d) {\n          return d.createdAt \n        })\n        .on(\"dblclick\", dblclick)\n        .call(this.drag(this.$data.simulation))\n        // .on(\"mouseover\", function(d) {\n        //   divCircle.\n        //       style(\"opacity\", .8) \n        //       divCircle.html(`Owner: ${d.owner}<br/>\n        //       ${d.documentType}: ${d.documentName}<br/>\n        //       Created at: ${d.createdAt}<br/>\n        //       Updated at: ${d.updatedAt}`)\n        //       .style(\"left\", (d3.event.pageX) + \"px\")\n        //       .style(\"top\", (d3.event.pageY - 28) + \"px\") \n        //   })\n        // .on(\"mouseout\", function(d) {\n        //   divCircle.style(\"opacity\", 0) \n        // })\n        //\n        .on(\"contextmenu\", this.contextMenu(\"client\", this.menuClient)) \n      let circleReceiver = svg\n        .select(\"#circleReceiver\")\n        .selectAll(\"circle\")\n        .data(\n          this.$data.simulation.nodes().filter(data => data.role == \"Receiver\" || data.role == \"receiver\")\n        )\n        .enter()\n        .append(\"svg:circle\")\n        .attr(\"class\", \"receiver\")\n        .attr(\"class\", \"node\")\n        .attr(\"r\", 6)\n        .attr(\"timestamp\", function(d) {\n          return d.createdAt \n        })\n        .on(\"dblclick\", dblclick)\n        .call(this.drag(this.$data.simulation))\n        // .on(\"mouseover\", function(d) {\n        //   divCircle.\n        //       style(\"opacity\", .8) \n        //       divCircle.html(`Owner: ${d.owner}<br/>\n        //       ${d.documentType}: ${d.documentName}<br/>\n        //       Created at: ${d.createdAt}<br/>\n        //       Updated at: ${d.updatedAt}`)\n        //       .style(\"left\", (d3.event.pageX) + \"px\")\n        //       .style(\"top\", (d3.event.pageY - 28) + \"px\") \n        //   })\n        // .on(\"mouseout\", function(d) {\n        //   divCircle.style(\"opacity\", 0) \n        // })\n        //\n        .on(\"contextmenu\", this.contextMenu(\"client\", this.menuClient)) \n      const rectWidth = 24 \n      const rectHeight = 24 \n      \n\n      \n      // let rectParcoords = svg\n      //   .select(\"#rectParcoords\")\n      //   .selectAll(\"rect\")\n      //   .data(this.$data.simulation.nodes().filter(d => d.type == \"Stream\"))\n      //   .enter()\n      //   .append(\"svg:rect\")\n      //   .attr(\"class\", \"parcoordsSelection\")\n      //   //.attr(\"class\", \"parcoordsSelection\")\n      //   .attr(\"x\", -rectWidth*3 / 2)\n      //   .attr(\"y\", -rectHeight*3 / 2)\n      //   .attr(\"width\", rectWidth*3)\n      //   .attr(\"height\", rectHeight*3)\n      //   .attr(\"rx\", 3)\n      //   .attr(\"ry\", 3)\n      //   .attr(\"fill\", \"none\")\n      //   .attr(\"timestamp\", function(d) {\n      //     return d.createdAt \n      //   })\n\n      let rect = svg\n        .select(\"#rectStream\")\n        .selectAll(\"rect\")\n        .data(this.$data.simulation.nodes().filter(d => d.type == \"Stream\"))\n        .enter()\n        .append(\"svg:rect\")\n        .attr(\"class\", \"node\")\n        .attr(\"x\", -rectWidth / 2)\n        .attr(\"y\", -rectHeight / 2)\n        .attr(\"width\", rectWidth)\n        .attr(\"height\", rectHeight)\n        .attr(\"rx\", 3)\n        .attr(\"ry\", 3)\n        .attr(\"timestamp\", function(d) {\n          return d.createdAt \n        })\n        .on(\"dblclick\", dblclick)\n        .call(this.drag(this.$data.simulation))\n        .on(\"contextmenu\", this.contextMenu(\"stream\", this.menuStream)) \n\n      let text = svg\n        .select(\"#text\")\n        .selectAll(\"g\")\n        .data(this.$data.simulation.nodes())\n        .enter()\n        .append(\"svg:g\")\n        .attr(\"timestamp\", function(d) {\n          return d.createdAt \n        }) \n      text\n        .append(\"svg:text\")\n        .attr(\"x\", 8)\n        .attr(\"y\", \".31em\")\n        .attr(\"class\", \"shadow\")\n        //.style(\"transform\", \"rotate(-45deg)\")\n        .style(\"font-size\", function(d) {\n          if (d.type == \"Client\") {\n            return \"30px\"\n          } else {\n            return \"30px\" \n          }\n        })\n        .text(function(d) {\n          return d.name \n        }) \n      text\n        .append(\"svg:text\")\n        .attr(\"x\", 8)\n        .attr(\"y\", \".31em\")\n        //.style(\"transform\", \"rotate(-45deg)\")\n        .style(\"font-size\", function(d) {\n          if (d.type == \"Client\") {\n            return \"30px\"\n          } else {\n            return \"30px\" \n          }\n        })\n        .text(function(d) {\n          return d.name \n        }) \n\n\n\n\n    let circleOwner = svg\n        .select(\"#cenOwner\")\n        .selectAll(\"circle\")\n        // .data(circleOwnerData)\n        // .enter()\n        // .append(\"circle\")\n        // .attr(\"cx\", function (d) { return d.cx  })\n        // .attr(\"cy\", function (d) { return d.cy  })\n        // .attr(\"r\", function (d) { return d.radius  })\n        // .style(\"fill\", function (d) { return d.color  })\n\n      let textOwner = svg\n        .select(\"#textOwner\")\n        .selectAll(\"text\")\n        \n        .data(circleOwnerData)\n        .enter()\n        .append(\"svg:g\")\n        \n      textOwner\n        .append(\"svg:text\")\n        .attr(\"x\", 0)\n        .attr(\"y\", 0)\n        .style(\"font-size\", \"50px\")\n        .attr('x', 0)\n        .attr('y', 0)\n        .style(\"font-weight\", \"800\")\n        .text(function(d) { return `${d.userInfo.surname.charAt(0)}${d.userInfo.name.charAt(0)}`  })\n        .append('svg:tspan')\n        .attr('x', 90)\n        .attr('y', 0)\n        .style(\"font-size\", \"30px\")\n        .text(function(d) { return `(${d.userInfo.company})`  })\n        .append('svg:tspan')\n\n\n    let circleDoc = svg\n        .select(\"#cenDoc\")\n        .selectAll(\"circle\")\n        .data(circleDocData)\n        // .enter()\n        // .append(\"circle\")\n        // .attr(\"r\", function (d) { return d.radius  })\n        // .style(\"fill\", function (d) { return d.color  })\n        \n    let textDoc = svg\n        .select(\"#textDoc\")\n        .selectAll(\"text\")\n        .data(groupDocs)\n        .enter()      \n        .append(\"svg:g\")\n      textDoc\n        .append(\"svg:image\")\n        .attr(\"xlink:href\", function (d) { \n          let docType = d.values[0].documentType\n\n         if(docType === \"Rhino\"){\n            return Rhino3D\n          }\n          else if(docType === \"Dynamo\"){\n            return Dynamo\n          }\n          else if(docType === \"Excel\"){\n            return MicrosoftExcel\n          }\n          else if(docType === \"GSA\"){\n             return GSA\n          }\n          else if(docType === \"Grasshopper\"){\n            return Grasshopper3D\n          }\n          else if(docType === \"Revit\"){\n            return Revit\n          }else{\n            return \"404\"\n          }\n          \n          })\n        .attr(\"width\", 150)\n        .attr(\"height\", 150)\n        .attr(\"x\", -75)\n        .attr(\"y\", -75)\n        \n        // .style(\"font-size\", \"50px\")\n        // .text(function(d) {\n        //   let docType = d.values[0].documentType\n        //   if(docType === \"Rhino\"){\n        //     return `🦏`\n        //   }\n        //   else if(docType === \"Dynamo\"){\n        //     return `🔧`\n        //   }\n        //   else if(docType === \"Excel\"){\n        //     //return `📊`\n        //     return `<line></line>`\n\n        //   }\n        //   else if(docType === \"GSA\"){\n        //     return `💎`\n        //   }\n        //   else if(docType === \"Grasshopper\"){\n        //     return `🦗`\n        //   }else{\n        //     return docType\n        //   }\n        // })\n\n\n\n\n\n\n      let parentContext = this \n      function brushstarted() {\n        if (d3.event.sourceEvent.type !== \"end\") {\n          svg\n            .select(\"#rectStream\")\n            .selectAll(\"rect\")\n            .classed(\"selected\", function(d) {\n              return (d.selected = d.previouslySelected =\n                parentContext.$data.shiftKey && d.selected) \n            }) \n        }\n      }\n\n      function brushed() {\n        if (d3.event.sourceEvent.type !== \"end\") {\n          let selection = d3.event.selection \n          svg\n            .select(\"#rectStream\")\n            .selectAll(\"rect\")\n            .classed(\"selected\", function(d) {\n              return (d.selected =\n                d.previouslySelected ^\n                (selection != null &&\n                  selection[0][0] <= d.x &&\n                  d.x < selection[1][0] &&\n                  selection[0][1] <= d.y &&\n                  d.y < selection[1][1])) \n            }) \n        }\n      }\n\n      function brushended() {\n        if (d3.event.selection != null) {\n          d3.select(this).call(d3.event.target.move, null) \n        }\n      }\n\n      function dblclick(d) {\n        d3.select(this).classed(\"fixed\", (d.fixed = !d.fixed)) \n      }\n      function dragstart(d) {\n        if (this.toggleFix) {\n          d3.select(this).classed(\"fixed\", (d.fixed = true)) \n        } else {\n          d3.select(this).classed(\"fixed\", (d.fixed = false)) \n        }\n      }\n\n      //let parentContext = this \n      function tick() {\n        \n        svg\n          .selectAll(\".node\")\n          .attr(\"fill\", \n          data => parentContext.colour(data.index)\n          )\n          .attr(\"cx\", function(d) {\n            return d.x \n          })\n          .attr(\"cy\", function(d) {\n            return d.y \n          }) \n        \n\n        svg\n          .select(\"#hullOwner\")\n          .selectAll(\".subhullOwner\")\n          .each(function (d,i) {\n\n              let sumX = 0\n              let sumY = 0\n              for (let i = 0; i < Object.values(d)[1].length; i++) {\n                sumX += Object.values(d)[1][i].x\n                sumY += Object.values(d)[1][i].y\n              }\n              let avX = sumX / Object.values(d)[1].length\n              let avY = sumY / Object.values(d)[1].length\n\n              svg\n                .select(\"#cenOwner\")\n                .selectAll(\"circle\")\n                .each(function (d, j) {\n                  if (j === i && avX && avY) {\n                    d3.select(this)\n                      .attr(\"cx\", avX)\n                      .attr(\"cy\", avY)    \n                  }\n                })\n            \n              svg\n                .select(\"#textOwner\")\n                .selectAll(\"text\")\n                .each(function (d, j) {\n                  if (j === i && avX && avY) {\n                    d3.select(this)\n                    .attr(\"transform\", function(d) {\n                      return \"translate(\" + avX + \",\" + avY + \")\" \n                    })\n                  }\n                })\n        }) \n\n\n        svg\n          .select(\"#hullOwner\")\n          .selectAll(\".subhullOwner\")\n          .data(groupOwners)\n          .attr(\"d\", groupPath)\n          .enter()\n          .insert(\"path\")\n          .attr(\"d\", groupPath)\n        \n        \n        svg\n          .select(\"#hullDoc\")\n          .selectAll(\".subhullDoc\")\n          .each(function (d,i) {\n\n              let sumX = 0\n              let sumY = 0\n              for (let i = 0; i < Object.values(d)[1].length; i++) {\n                sumX += Object.values(d)[1][i].x\n                sumY += Object.values(d)[1][i].y\n              }\n              let avX = sumX / Object.values(d)[1].length\n              let avY = sumY / Object.values(d)[1].length\n\n              svg\n                .select(\"#cenDoc\")\n                .selectAll(\"circle\")\n                .each(function (d, j) {\n                  if (j == i && avX && avY) {\n                    d3.select(this)\n                      .attr(\"cx\", avX)\n                      .attr(\"cy\", avY)    \n                  }\n                })\n            \n              svg\n                .select(\"#textDoc\")\n                .selectAll(\"image\")\n                .each(function (d, j) {\n                  if (j == i && avX && avY) {\n                    d3.select(this)\n                    .attr(\"transform\", function(d) {\n                      return \"translate(\" + avX + \",\" + avY + \")\" \n                    })\n                  }\n                })\n        }) \n        \n                \n        svg\n          .select(\"#hullDoc\")\n          .selectAll(\".subhullDoc\")\n          .data(groupDocs)\n          .attr(\"d\", groupPath)\n          .enter()\n          .insert(\"path\")\n          .attr(\"d\", groupPath) \n        \n        path\n          .attr(\"d\", function(d) {\n            let dx = d.target.x - d.source.x,\n              dy = d.target.y - d.source.y,\n              dr = Math.sqrt(dx * dx + dy * dy) \n            let x0 = d.source.x \n            let y0 = d.source.y \n            let x1 = d.target.x \n            let y1 = d.target.y \n            let xcontrol = x1 * 0.5 + x0 * 0.5 \n            let ycontrol = y1 * 0.5 + y0 * 0.5 \n            let smartDiagonal \n            if (Math.abs(x0 - x1) > Math.abs(y0 - y1)) {\n              smartDiagonal = [\n                \"M\",\n                x0,\n                y0,\n                \"C\",\n                xcontrol,\n                y0,\n                xcontrol,\n                y1,\n                x1,\n                y1\n              ].join(\" \") \n            }\n            if (Math.abs(y0 - y1) > Math.abs(x0 - x1)) {\n              smartDiagonal = [\n                \"M\",\n                x1,\n                y1,\n                \"C\",\n                x1,\n                ycontrol,\n                x0,\n                ycontrol,\n                x0,\n                y0\n              ].join(\" \") \n            }\n\n            if (parentContext.selectedEdgesDisplay == \"Diagonal Horizontal\") {\n              return [\n                \"M\",\n                x0,\n                y0,\n                \"C\",\n                xcontrol,\n                y0,\n                xcontrol,\n                y1,\n                x1,\n                y1\n              ].join(\" \") \n            }\n            if (parentContext.selectedEdgesDisplay == \"Diagonal Vertical\") {\n              return [\n                \"M\",\n                x1,\n                y1,\n                \"C\",\n                x1,\n                ycontrol,\n                x0,\n                ycontrol,\n                x0,\n                y0\n              ].join(\" \") \n            }\n            if (parentContext.selectedEdgesDisplay == \"Diagonal Smart\") {\n              return smartDiagonal \n            }\n            if (parentContext.selectedEdgesDisplay == \"Line\") {\n              return [\"M\", x0, y0, \"L\", x1, y1].join(\" \") \n            }\n            if (parentContext.selectedEdgesDisplay == \"Arc\") {\n              return [\"M\", x0, y0, \"A\", dr, dr, \" 0 0,1 \", x1, y1].join(\" \") \n            }\n          })\n          .attr(\"stroke\", data => parentContext.colour(data.source.index)) \n        //\n        // svg.selectAll('marker')\n        // .attr('fill', data =>\n        //   colour(data.target.index)\n        // ) \n        // circleSender.attr(\"transform\", function(d) {\n        //   return \"translate(\" + d.x + \",\" + d.y + \")\" \n        // })\n        //  \n        // circleReceiver.attr(\"transform\", function(d) {\n        //   return \"translate(\" + d.x + \",\" + d.y + \")\" \n        // }) \n        rect.attr(\"transform\", function(d) {\n          return \"translate(\" + d.x + \",\" + d.y + \")\" \n        }) \n        text.attr(\"transform\", function(d) {\n          return \"translate(\" + d.x + \",\" + d.y + \")\" \n        }) \n\n      }\n\n      this.drawGraph.tick = tick  // create a reference to the inner function\n\n      this.updateDisplayNodes(\"#circleSender\") \n      this.updateDisplayNodes(\"#circleReceiver\") \n      this.updateDisplayNodes(\"#rectStream\") \n      this.updateDisplayNodes(\"#text\") \n      this.updateDisplayLinks(\"#pathLink\") \n    }\n  },\n  mounted() {\n    this.svgWidth = document.getElementById(\"clientGraph\").offsetWidth \n    this.drawGraph() \n  },\n\n  computed: {\n    myserver: function () {\n      // `this` points to the vm instance\n      return this\n    }\n      \n  }\n} \n</script>\n\n<style>\n.bar-positive {\n  fill: steelblue;\n  transition: r 0.2s ease-in-out;\n}\n\n.svg-container {\n  display: inline-block;\n  position: relative;\n  width: 100%;\n  padding-bottom: 1%;\n  vertical-align: top;\n  overflow: hidden;\n}\n\n\n#graphLayout {\n  cursor: all-scroll;\n}\n\n#rectStream {\n  cursor: pointer;\n  stroke: lightgray;\n  stroke-width: 2px;\n}\n\n.parcoordsSelection {\n  stroke: black;\n  stroke-width: 4px;\n  stroke-dasharray: 20,5;\n  /* transition: \"visibility 0s, opacity 0.4s linear\" */\n}\n\n.tagSelected {\n  stroke: rgba(0, 255, 200, 0.4);\n  stroke-width: 5px;\n\n  fill: rgba(0, 255, 200, 0.4);\n}\n\ncircle {\n  cursor: pointer;\n  stroke: lightgray;\n  stroke-width: 2px;\n}\n\ntext {\n  font: 15px arial;\n  pointer-events: none;\n  opacity: 0.7;\n}\n\ntext.shadow {\n  stroke: #fff;\n  stroke-width: 3px;\n  stroke-opacity: 0.8;\n}\n\n\n\n\n.d3-context-menu {\n  position: absolute;\n  display: none;\n  background-color: rgb(240, 240, 240);\n  border-radius: 8px;\n  box-shadow: rgb(73, 73, 73) 3px 3px 7px;\n  font-family: Arial, sans-serif;\n  font-size: 10px;\n  min-width: 150px;\n  border: 0px solid #d4d4d4;\n  border: 0px solid #ffffff00;\n  z-index: 1200;\n  padding-top: 3px;\n  padding-bottom: 3px;\n}\n\n.d3-context-menu ul {\n  list-style-type: none;\n  margin: 4px 0px;\n  padding: 0px;\n  cursor: pointer;\n}\n\n.d3-context-menu ul li {\n  padding: 4px 16px;\n}\n\n.d3-context-menu ul li.stream:hover {\n  background-color: hotpink;\n  color: #fefefe;\n  transition: 700ms;\n}\n\n.d3-context-menu ul li.client:hover {\n  background-color: #0099ff;\n  color: #fefefe;\n  transition: 700ms;\n}\n\n.tooltip {\n  position: absolute;\n  text-align: center;\n  width: 250px;\n  height: 60px;\n  padding: 2px;\n  font: 12px sans-serif;\n  background: #94e1ff;\n  border: 2px;\n  border-color: black;\n  border-width: 2px;\n  border-radius: 8px;\n  pointer-events: none;\n}\n\n.tooltipOwner {\n  position: absolute;\n  text-align: center;\n  width: 250px;\n  height: 15px;\n  padding: 2px;\n  font: 12px sans-serif;\n  background: #50ccfd;\n  border: 0px;\n  border-radius: 8px;\n  pointer-events: none;\n}\n\n.tooltipDoc {\n  position: absolute;\n  text-align: center;\n  width: 350px;\n  height: 45px;\n  padding: 2px;\n  font: 12px sans-serif;\n  background: hotpink;\n  border: 0px;\n  border-radius: 8px;\n  pointer-events: none;\n}\n\n.hull {\n  fill: steelblue;\n  fill-opacity: 1;\n  stroke: steelblue;\n  stroke-width: 22px;\n  stroke-opacity: 1;\n  stroke-linejoin: round;\n}\n\n.subhullOwner {\n  fill: rgb(126, 191, 243);\n  stroke: rgb(126, 191, 243);\n  stroke-width: 40;\n  opacity: 0.5;\n  stroke-linejoin: round;\n}\n\n.subhullDoc {\n  fill: hotpink;\n  stroke: hotpink;\n  stroke-width: 40;\n  opacity: 0.5;\n  stroke-linejoin: round;\n}\n\npath.link {\n  fill: none;\n}\n\nmarker {\n  stroke-width: 1000 !important;\n}\n.brush {\n  stroke: #222;\n  fill-opacity: 0.125;\n  shape-rendering: crispEdges;\n}\n</style>\n"],"sourceRoot":"src/components"}]}