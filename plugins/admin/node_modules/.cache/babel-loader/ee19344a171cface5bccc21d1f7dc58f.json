{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/StreamDetailNetwork.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/StreamDetailNetwork.vue","mtime":1609071089414},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport debounce from 'lodash.debounce';\nimport ClientCard from './ClientCard.vue';\nexport default {\n  name: 'StreamDetailNetwork',\n  components: {\n    ClientCard: ClientCard\n  },\n  props: {\n    stream: Object\n  },\n  watch: {\n    stream: function stream(newStream, oldStream) {\n      this.fetchData();\n    }\n  },\n  computed: {\n    canEdit: function canEdit() {\n      return this.isOwner ? true : this.stream.canWrite.indexOf(this.$store.state.user._id) !== -1;\n    },\n    isOwner: function isOwner() {\n      return this.stream.owner === this.$store.state.user._id;\n    },\n    senders: function senders() {\n      if (this.stream.onlineEditable) return [{\n        role: 'sender',\n        documentType: '',\n        documentName: 'Web UI',\n        updatedAt: this.stream.updatedAt,\n        owner: this.stream.owner\n      }];\n      return this.$store.getters.streamClients(this.stream.streamId).filter(function (c) {\n        return c.role.toLowerCase() === 'sender';\n      });\n    },\n    receivers: function receivers() {\n      return this.$store.getters.streamClients(this.stream.streamId).filter(function (c) {\n        return c.role.toLowerCase() === 'receiver';\n      });\n    },\n    clients: function clients() {\n      return this.$store.getters.streamClients(this.stream.streamId);\n    }\n  },\n  methods: {\n    fetchData: function fetchData() {\n      this.$store.dispatch('getStreamClients', {\n        streamId: this.stream.streamId\n      });\n    }\n  },\n  created: function created() {\n    this.fetchData();\n  }\n};",{"version":3,"sources":["StreamDetailNetwork.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAA,QAAA,MAAA,iBAAA;AACA,OAAA,UAAA,MAAA,kBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,qBADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,UAAA,EAAA;AAAA,GAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GAHA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,kBACA,SADA,EACA,SADA,EACA;AACA,WAAA,SAAA;AACA;AAHA,GANA;AAWA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,KAAA,OAAA,GAAA,IAAA,GAAA,KAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,GAAA,MAAA,CAAA,CAAA;AACA,KAHA;AAIA,IAAA,OAJA,qBAIA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,KAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,GAAA;AACA,KANA;AAOA,IAAA,OAPA,qBAOA;AACA,UAAA,KAAA,MAAA,CAAA,cAAA,EACA,OAAA,CAAA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,YAAA,EAAA,EAFA;AAGA,QAAA,YAAA,EAAA,QAHA;AAIA,QAAA,SAAA,EAAA,KAAA,MAAA,CAAA,SAJA;AAKA,QAAA,KAAA,EAAA,KAAA,MAAA,CAAA;AALA,OAAA,CAAA;AAOA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,MAAA,CAAA,QAAA,EAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,IAAA,CAAA,WAAA,OAAA,QAAA;AAAA,OAAA,CAAA;AACA,KAjBA;AAkBA,IAAA,SAlBA,uBAkBA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,MAAA,CAAA,QAAA,EAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,IAAA,CAAA,WAAA,OAAA,UAAA;AAAA,OAAA,CAAA;AACA,KApBA;AAqBA,IAAA,OArBA,qBAqBA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,MAAA,CAAA,QAAA,CAAA;AACA;AAvBA,GAXA;AAoCA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,kBAAA,EAAA;AAAA,QAAA,QAAA,EAAA,KAAA,MAAA,CAAA;AAAA,OAAA;AACA;AAHA,GApCA;AAyCA,EAAA,OAzCA,qBAyCA;AACA,SAAA,SAAA;AACA;AA3CA,CAAA","sourcesContent":["<template>\n  <v-card class='elevation-0 pt-4'>\n    <v-toolbar dense class='elevation-0 transparent title font-weight-light'>\n      <v-icon small left>cloud_upload</v-icon>&nbsp;\n      <span class='title font-weight-light'>Source</span>\n    </v-toolbar>\n    <v-divider></v-divider>\n    <v-card-text>\n      <client-card v-for='client in senders' :key='client._id' :client='client'></client-card>\n      <p v-if='senders.length===0'>There seem to be no source clients for this stream.</p>\n    </v-card-text>\n    <v-toolbar dense class='elevation-0 transparent title font-weight-light mt-4'>\n      <v-icon small left>cloud_download</v-icon>&nbsp;\n      <span class='title font-weight-light'>Receivers</span>\n    </v-toolbar>\n    <v-divider></v-divider>\n    <v-card-text>\n      <client-card v-for='client in receivers' :key='client._id' :client='client'></client-card>\n      <p v-if='receivers.length===0'>There seem to be no stream receivers.</p>\n    </v-card-text>\n  </v-card>\n</template>\n<script>\nimport debounce from 'lodash.debounce'\nimport ClientCard from './ClientCard.vue'\nexport default {\n  name: 'StreamDetailNetwork',\n  components: { ClientCard },\n  props: {\n    stream: Object,\n  },\n  watch: {\n    stream( newStream, oldStream ) {\n      this.fetchData( )\n    }\n  },\n  computed: {\n    canEdit( ) {\n      return this.isOwner ? true : this.stream.canWrite.indexOf( this.$store.state.user._id ) !== -1\n    },\n    isOwner( ) {\n      return this.stream.owner === this.$store.state.user._id\n    },\n    senders( ) {\n      if ( this.stream.onlineEditable )\n        return [ {\n          role: 'sender',\n          documentType: '',\n          documentName: 'Web UI',\n          updatedAt: this.stream.updatedAt,\n          owner: this.stream.owner\n        } ]\n      return this.$store.getters.streamClients( this.stream.streamId ).filter( c => c.role.toLowerCase( ) === 'sender' )\n    },\n    receivers( ) {\n      return this.$store.getters.streamClients( this.stream.streamId ).filter( c => c.role.toLowerCase( ) === 'receiver' )\n    },\n    clients( ) {\n      return this.$store.getters.streamClients( this.stream.streamId )\n    }\n  },\n  methods: {\n    fetchData( ) {\n      this.$store.dispatch( 'getStreamClients', { streamId: this.stream.streamId } )\n    }\n  },\n  created( ) {\n    this.fetchData( )\n  }\n}\n\n</script>\n<style scoped lang='scss'>\n</style>\n"],"sourceRoot":"src/components"}]}