{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/SearchEverything.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/SearchEverything.vue","mtime":1609071089413},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport debounce from 'lodash.debounce';\nexport default {\n  name: 'SearchEverything',\n  props: {},\n  watch: {\n    filterText: function filterText(val) {\n      // if ( val === '' || val === null ) {\n      //   this.isLoading = false\n      //   return\n      // }\n      this.isLoading = true;\n    }\n  },\n  computed: {\n    projects: function projects() {\n      return this.$store.state.projects.filter(function (p) {\n        return p.deleted === false;\n      });\n    },\n    streams: function streams() {\n      return this.$store.state.streams.filter(function (stream) {\n        return stream.parent === null && stream.deleted === false;\n      }).sort(function (a, b) {\n        return new Date(b.updatedAt) - new Date(a.updatedAt);\n      });\n    },\n    filteredStreams: function filteredStreams() {\n      // if ( !this.actualSearchFilter || this.actualSearchFilter === '' ) return [ ]\n      // return this.streams.filter( stream => stream.name ? stream.name.toLowerCase( ).includes( this.actualSearchFilter.toLowerCase( ) ) : true ).sort( ( a, b ) => a.updatedAt > b.updatedAt )\n      return this.$store.getters.filteredResources(this.filters, \"streams\");\n    },\n    filteredProjects: function filteredProjects() {\n      // if ( !this.actualSearchFilter || this.actualSearchFilter === '' ) return [ ]\n      // return this.projects.filter( r => r.name ? r.name.toLowerCase( ).includes( this.actualSearchFilter.toLowerCase( ) ) : true ).sort( ( a, b ) => a.updatedAt > b.updatedAt )\n      return this.$store.getters.filteredResources(this.filters, \"projects\");\n    }\n  },\n  data: function data() {\n    return {\n      filterText: '',\n      isLoading: false,\n      filters: []\n    };\n  },\n  methods: {\n    updateSearch: debounce(function (e) {\n      this.isLoading = false;\n      this.searchfilter = e;\n\n      try {\n        var filters = this.searchfilter.split(' ').map(function (t) {\n          if (t.includes(':')) return {\n            key: t.split(':')[0],\n            value: t.split(':')[1]\n          };else if (!t.includes('public') && !t.includes('private') && !t.includes('mine') && !t.includes('shared')) // TODO: not elegant\n            return {\n              key: 'name',\n              value: t\n            };else return {\n            key: t,\n            value: null\n          };\n        });\n        this.filters = filters;\n        console.log(this.filters);\n      } catch (_unused) {\n        this.filters = [{\n          key: 'name',\n          value: e\n        }];\n      }\n    }, 1000),\n    refreshResources: function refreshResources() {\n      this.$store.dispatch('getStreams', 'omit=objects,layers&isComputedResult=false&sort=updatedAt');\n      this.$store.dispatch('getProjects');\n    }\n  }\n};",{"version":3,"sources":["SearchEverything.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-layout row wrap class='mb-5' justify-left>\n    <v-flex xs12>\n      <v-text-field solo clearable @input=\"updateSearch\" label=\"Search for a stream or project\" prepend-inner-icon=\"search\" @click:append=\"refreshResources()\" append-icon=\"refresh\" spellcheck=\"false\" v-model='filterText' :loading='isLoading'></v-text-field>\n    </v-flex>\n    <v-flex xs12 v-if='filterText' style='position: relative; top: -30px'>\n      <v-card class='xxxtransparent elevation-10'>\n        <v-layout row wrap>\n          <v-flex xs12 md6 pa-3>\n            <div class='title font-weight-light mb-3 pl-3'>Streams ({{filteredStreams.length}})</div>\n            <v-list two-line v-if='filteredStreams.length > 0' style='max-height: 210px; overflow-y: auto; overflow-x: hidden;'>\n              <v-list-tile v-for='stream in filteredStreams' :key='stream.streamId' :to='`/streams/${stream.streamId}`'>\n                <v-list-tile-content>\n                  <v-list-tile-title>\n                    {{stream.name}}\n                  </v-list-tile-title>\n                  <v-list-tile-sub-title class='caption'>\n                    <v-icon small>fingerprint</v-icon><span class='caption' style=\"user-select:all;\">{{stream.streamId}}</span>&nbsp;<v-icon small>edit</v-icon>\n                    <timeago :datetime='stream.updatedAt'></timeago>\n                  </v-list-tile-sub-title>\n                </v-list-tile-content>\n              </v-list-tile>\n            </v-list>\n            <span class='caption pl-3' v-else>No streams with that name found.</span>\n          </v-flex>\n          <v-flex xs12 md6 pa-3>\n            <div class='title font-weight-light mb-3 pl-3'>Projects ({{filteredProjects.length}})</div>\n            <v-list two-line v-if='filteredProjects.length > 0' style='max-height: 210px; overflow-y: auto; overflow-x: hidden;'>\n              <v-list-tile v-for='project in filteredProjects' :key='project._id' :to='`/projects/${project._id}`'>\n                <v-list-tile-content>\n                  <v-list-tile-title>\n                    {{project.name}}\n                  </v-list-tile-title>\n                  <v-list-tile-sub-title class='caption'>\n                    <v-icon small>fingerprint</v-icon><span class='caption' style=\"user-select:all;\">{{project._id}}</span>&nbsp;<v-icon small>edit</v-icon>\n                    <timeago :datetime='project.updatedAt'></timeago>\n                  </v-list-tile-sub-title>\n                </v-list-tile-content>\n              </v-list-tile>\n            </v-list>\n            <span class='caption pl-3' v-else>No projects with that name found.</span>\n          </v-flex>\n        </v-layout>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n<script>\nimport debounce from 'lodash.debounce'\n\nexport default {\n  name: 'SearchEverything',\n  props: {},\n  watch: {\n    filterText( val ) {\n      // if ( val === '' || val === null ) {\n      //   this.isLoading = false\n      //   return\n      // }\n      this.isLoading = true\n    }\n  },\n  computed: {\n    projects( ) {\n      return this.$store.state.projects.filter( p => p.deleted === false )\n    },\n    streams( ) {\n      return this.$store.state.streams.filter( stream => stream.parent === null && stream.deleted === false ).sort( ( a, b ) => {\n        return new Date( b.updatedAt ) - new Date( a.updatedAt );\n      } )\n    },\n    filteredStreams( ) {\n      // if ( !this.actualSearchFilter || this.actualSearchFilter === '' ) return [ ]\n      // return this.streams.filter( stream => stream.name ? stream.name.toLowerCase( ).includes( this.actualSearchFilter.toLowerCase( ) ) : true ).sort( ( a, b ) => a.updatedAt > b.updatedAt )\n      return this.$store.getters.filteredResources( this.filters, \"streams\" )\n    },\n    filteredProjects( ) {\n      // if ( !this.actualSearchFilter || this.actualSearchFilter === '' ) return [ ]\n      // return this.projects.filter( r => r.name ? r.name.toLowerCase( ).includes( this.actualSearchFilter.toLowerCase( ) ) : true ).sort( ( a, b ) => a.updatedAt > b.updatedAt )\n      return this.$store.getters.filteredResources( this.filters, \"projects\" )\n    },\n  },\n  data( ) {\n    return {\n      filterText: '',\n      isLoading: false,\n      filters: [ ]\n    }\n  },\n  methods: {\n    updateSearch: debounce( function ( e ) {\n\n      this.isLoading = false\n      this.searchfilter = e\n      try {\n        let filters = this.searchfilter.split( ' ' ).map( t => {\n          if ( t.includes( ':' ) )\n            return { key: t.split( ':' )[ 0 ], value: t.split( ':' )[ 1 ] }\n          else if ( !t.includes( 'public' ) && !t.includes( 'private' ) && !t.includes( 'mine' ) && !t.includes( 'shared' ) ) // TODO: not elegant\n            return { key: 'name', value: t }\n          else\n            return { key: t, value: null }\n        } )\n        this.filters = filters\n        console.log( this.filters )\n      } catch {\n        this.filters = [ { key: 'name', value: e } ]\n      }\n    }, 1000 ),\n    refreshResources( ) {\n      this.$store.dispatch( 'getStreams', 'omit=objects,layers&isComputedResult=false&sort=updatedAt' )\n      this.$store.dispatch( 'getProjects' )\n    }\n  }\n}\n\n</script>\n<style scoped lang='scss'>\n</style>\n"],"sourceRoot":"src/components"}]}