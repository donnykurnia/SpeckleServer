{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/ViewerObjectGroups.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/ViewerObjectGroups.vue","mtime":1609071089418},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$keys from \"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/@babel/runtime-corejs2/core-js/object/keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _toConsumableArray from \"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport get from 'lodash.get';\nexport default {\n  name: 'ObjectGroups',\n  props: {\n    groupKeySeed: {\n      type: String,\n      default: null\n    }\n  },\n  watch: {\n    groupKeySeed: function groupKeySeed(newVal, oldVal) {\n      if (newVal !== null && this.init === false) {\n        this.init = true;\n        this.groupKey = newVal;\n      }\n    },\n    groupKey: {\n      immediate: true,\n      handler: function handler(newVal, oldVal) {\n        if (newVal === null) return;\n        console.log(\"TEST \" + newVal);\n        this.filterText = '';\n        window.renderer.showObjects([]);\n        window.renderer.resetColors({\n          propagateLegend: true\n        });\n\n        if (this.structuralKeys.indexOf(newVal) !== -1) {\n          console.log('its a structural propertyyyyyy');\n          this.generateGroups('structural.result.' + newVal);\n          this.appendInfoToUrl(\"groups\", {\n            key: newVal\n          });\n          window.renderer.colorByVertexArray({\n            propertyName: newVal,\n            colors: this.rainbowColors\n          });\n          return;\n        }\n\n        if (newVal) {\n          this.generateGroups(newVal);\n          this.appendInfoToUrl(\"groups\", {\n            key: newVal\n          });\n          window.renderer.colorByProperty({\n            propertyName: newVal,\n            propagateLegend: true,\n            colors: this.coolColors\n          });\n        }\n\n        if (newVal === undefined) {\n          this.appendInfoToUrl(\"groups\", null);\n          window.renderer.showObjects([]);\n        }\n      }\n    },\n    legend: {\n      handler: function handler(newVal, oldVal) {\n        if (!newVal) return;\n        this.min = this.$store.state.legend.min;\n        this.max = this.$store.state.legend.max;\n        this.selectedRange = [this.min, this.max];\n      },\n      deep: true\n    }\n  },\n  computed: {\n    myFilteredGroups: function myFilteredGroups() {\n      var _this = this;\n\n      var filteredGroups = {};\n      if (!this.filterText || this.filterText === '') return this.myGroups;\n      return this.myGroups.filter(function (gr) {\n        return gr.name.toLowerCase().includes(_this.filterText.toLowerCase());\n      });\n    },\n    orphanGroup: function orphanGroup() {\n      var orphans = this.myGroups.find(function (gr) {\n        return gr.name === \"Orphaned Objects\";\n      });\n      return orphans; // return this.myGroups[ 0 ] ? this.myGroups[ 0 ] : null\n    },\n    keys: function keys() {\n      return this.$store.getters.objectPropertyKeys;\n    },\n    allKeys: function allKeys() {\n      return [].concat(_toConsumableArray(this.$store.getters.objectPropertyKeys.allKeys), _toConsumableArray(this.$store.getters.structuralKeys));\n    },\n    structuralKeys: function structuralKeys() {\n      return this.$store.getters.structuralKeys;\n    },\n    isTextProperty: function isTextProperty() {\n      return this.keys.stringKeys.indexOf(this.groupKey) !== -1;\n    },\n    legend: function legend() {\n      return this.$store.state.legend;\n    }\n  },\n  data: function data() {\n    return {\n      groupKey: null,\n      myGroups: [],\n      loading: false,\n      filterText: null,\n      selectedRange: [0, 1000],\n      rainbowColors: [\"#9400D3\", \"#4B0082\", \"#0000FF\", \"#00FF00\", \"#FFFF00\", \"#FF7F00\", \"#FF0000\"],\n      coolColors: [\"#0A66FF\", \"#FF008A\"],\n      init: false\n    };\n  },\n  methods: {\n    generateGroups: function generateGroups(key) {\n      var _this2 = this;\n\n      this.myGroups = [];\n      this.loading = true;\n      var groups = {\n        orphans: {\n          key: 'orphans',\n          name: 'Orphaned Objects',\n          objects: [],\n          visible: true,\n          isolated: false\n        }\n      };\n\n      if (this.isTextProperty) {\n        this.$store.state.objects.forEach(function (obj, index) {\n          var propValue = get(obj.properties, key);\n\n          if (propValue) {\n            // if we have the group already\n            if (groups.hasOwnProperty(propValue)) {\n              groups[propValue].objects.push(obj._id);\n            } else {\n              groups[propValue] = {\n                key: key,\n                name: propValue,\n                objects: [obj._id],\n                visible: true,\n                isolated: false\n              };\n            }\n          } else {\n            groups.orphans.objects.push(obj._id);\n          }\n\n          if (index === _this2.$store.state.objects.length - 1) {\n            _this2.loading = false;\n          }\n        });\n      }\n\n      _Object$keys(groups).forEach(function (key) {\n        return _this2.myGroups.push(groups[key]);\n      });\n    },\n    filterProp: function filterProp() {\n      var _this3 = this;\n\n      var objIds = [];\n      this.$store.state.objects.forEach(function (obj, index) {\n        var propValue = get(obj.properties, _this3.groupKey);\n        if (propValue) if (propValue >= _this3.selectedRange[0] && propValue <= _this3.selectedRange[1]) objIds.push(obj._id);\n\n        if (index === _this3.$store.state.objects.length - 1) {\n          if (_this3.myGroups[0] && _this3.myGroups[0].visible) objIds = [].concat(_toConsumableArray(objIds), _toConsumableArray(_this3.myGroups[0].objects));\n          window.renderer.isolateObjects(objIds);\n          window.renderer.resetColors({\n            propagateLegend: false\n          });\n          window.renderer.colorByProperty({\n            propertyName: _this3.groupKey,\n            propagateLegend: false,\n            colors: _this3.coolColors\n          });\n        }\n      });\n    },\n    toggleVisible: function toggleVisible(groupName) {\n      var group = this.myGroups.find(function (gr) {\n        return gr.name === groupName;\n      });\n\n      if (group.visible) {\n        window.renderer.hideObjects(group.objects);\n        group.visible = false;\n      } else {\n        window.renderer.showObjects(group.objects);\n        group.visible = true;\n      }\n    },\n    toggleIsolation: function toggleIsolation(groupName) {\n      var group = this.myGroups.find(function (gr) {\n        return gr.name === groupName;\n      });\n\n      if (group.isolated) {\n        window.renderer.showObjects([]);\n        group.isolated = false;\n      } else {\n        group.visible = true;\n        group.isolated = true;\n        window.renderer.isolateObjects(group.objects);\n      }\n\n      this.myGroups.forEach(function (gr) {\n        if (gr.name === groupName) return;\n\n        if (group.isolated) {\n          gr.isolated = false;\n          gr.visible = false;\n        } else {\n          gr.visible = true;\n          window.renderer.showObjects(gr.objects);\n        }\n      });\n    }\n  },\n  mounted: function mounted() {// console.log( 'mounted - object groups' )\n    // console.log( this.groupKeySeed )\n    // if ( this.groupKeySeed !== null ) {\n    //   this.groupKey = this.groupKeySeed\n    // }\n  },\n  activated: function activated() {\n    if (this.groupKey) {\n      this.appendInfoToUrl(\"groups\", {\n        key: this.groupKey\n      });\n    }\n  }\n};",{"version":3,"sources":["ViewerObjectGroups.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-layout row wrap>\n    <v-flex xs12>\n      <v-autocomplete box label='select a property to group objects by' clearable v-model=\"groupKey\" :items=\"allKeys\"></v-autocomplete>\n      <v-text-field v-show='isTextProperty' label=\"filter\" v-model='filterText' hint='Search through the layers below' append-icon='filter_list' clearable></v-text-field>\n    </v-flex>\n    <!--     <v-flex xs12 v-if='$store.getters[\"hasStructuralProperties\"]'>\n      <v-btn block>Show structural</v-btn>\n    </v-flex> -->\n    <v-flex xs12 v-if='isTextProperty && groupKey'>\n      <v-card v-for='group in myFilteredGroups' :key='group.name' :class='`mb-3 ${ group.isolated ? \"elevation-15\" : \"elevation-1\"} ${ group.visible ? \"elevation-1\" : \"elevation-0\" }`' v-if='group.objects.length>0'>\n        <v-card-text>\n          <v-layout align-center>\n            <v-flex xs2>\n              <v-avatar size=\"20\" :color=\"getHexFromString(group.name)\"></v-avatar>\n            </v-flex>\n            <v-flex class='caption text-truncate'>\n              <b>{{group.name}}</b>&nbsp;<span class='font-weight-light'>({{group.objects.length}} objects)</span>\n            </v-flex>\n            <v-flex xs4 class='text-xs-right'>\n              <v-btn flat icon small @click.native='toggleVisible(group.name)' :color='group.visible ? \"\":\"grey\"'>\n                <v-icon>remove_red_eye</v-icon>\n              </v-btn>\n              <v-btn flat icon small @click.native='toggleIsolation(group.name)' :color='group.isolated ? \"\":\"grey\"'>\n                <v-icon>location_searching</v-icon>\n              </v-btn>\n            </v-flex>\n          </v-layout>\n        </v-card-text>\n      </v-card>\n    </v-flex>\n    <v-flex xs12 v-if='!isTextProperty && groupKey'>\n      <v-card :class='`mb-3 ${ orphanGroup.isolated ? \"elevation-15\" : \"elevation-1\"} ${ orphanGroup.visible ? \"elevation-1\" : \"elevation-0\" }`' v-if='orphanGroup'>\n        <v-card-text>\n          <v-layout align-center>\n            <v-flex xs1>\n              <!-- <v-avatar size=\"20\" :color=\"getHexFromString(orphanGroup.name)\"></v-avatar> -->\n            </v-flex>\n            <v-flex class='caption'>\n              <b>{{orphanGroup.name}}</b>&nbsp;<span class='font-weight-light'>({{orphanGroup.objects.length}} objects)</span>\n            </v-flex>\n            <v-flex xs4 class='text-xs-right'>\n              <v-btn flat icon small @click.native='toggleVisible(orphanGroup.name)' :color='orphanGroup.visible ? \"\":\"grey\"'>\n                <v-icon>remove_red_eye</v-icon>\n              </v-btn>\n              <v-btn flat icon small @click.native='toggleIsolation(orphanGroup.name)' :color='orphanGroup.isolated ? \"\":\"grey\"'>\n                <v-icon>location_searching</v-icon>\n              </v-btn>\n            </v-flex>\n          </v-layout>\n        </v-card-text>\n      </v-card>\n      <!-- <v-divider></v-divider> -->\n      <v-card class='' v-if='groupKey !== undefined && !isTextProperty && $store.state.legend' xxxv-if=\"$store.state.legend && selectedRange.length !== 0\">\n        <v-card-text v-if='selectedRange'>\n          <h1 class='font-weight-light'>Min: <b>{{selectedRange[0].toLocaleString()}}</b>, Max: <b>{{selectedRange[1].toLocaleString()}}</b></h1>\n        </v-card-text>\n        <v-card-text>\n          <v-layout align-center row wrap>\n            <v-flex xs-12 pa-2 v-if='legend.isNumeric'>\n              <v-range-slider v-model=\"selectedRange\" :max=\"$store.state.legend.max\" :min=\"$store.state.legend.min\" :step=\"0\" @end='filterProp'></v-range-slider>\n            </v-flex>\n            <v-flex xs12 class='caption' v-if='$store.state.legend'>\n              Legend key: <b>{{groupKey}}</b><br> min: <b>{{$store.state.legend.min}}</b>, max: <b>{{$store.state.legend.max}}.</b>\n            </v-flex>\n          </v-layout>\n        </v-card-text>\n      </v-card>\n    </v-flex>\n  </v-layout>\n</template>\n<script>\nimport get from 'lodash.get'\nexport default {\n  name: 'ObjectGroups',\n  props: {\n    groupKeySeed: {\n      type: String,\n      default: null\n    }\n  },\n  watch: {\n    groupKeySeed( newVal, oldVal ) {\n      if ( newVal !== null && this.init === false ) {\n        this.init = true\n        this.groupKey = newVal\n      }\n    },\n    groupKey: {\n      immediate: true,\n      handler( newVal, oldVal ) {\n        if ( newVal === null ) return\n        console.log( \"TEST \" + newVal )\n        this.filterText = ''\n        window.renderer.showObjects( [ ] )\n\n        window.renderer.resetColors( { propagateLegend: true } )\n\n        if ( this.structuralKeys.indexOf( newVal ) !== -1 ) {\n          console.log( 'its a structural propertyyyyyy' )\n          this.generateGroups( 'structural.result.' + newVal )\n          this.appendInfoToUrl( \"groups\", { key: newVal } )\n          window.renderer.colorByVertexArray( { propertyName: newVal, colors: this.rainbowColors } )\n          return\n        }\n\n        if ( newVal ) {\n          this.generateGroups( newVal )\n          this.appendInfoToUrl( \"groups\", { key: newVal } )\n          window.renderer.colorByProperty( { propertyName: newVal, propagateLegend: true, colors: this.coolColors } )\n        }\n\n        if ( newVal === undefined ) {\n          this.appendInfoToUrl( \"groups\", null )\n          window.renderer.showObjects( [ ] )\n        }\n\n      }\n    },\n    legend: {\n      handler: function ( newVal, oldVal ) {\n        if ( !newVal ) return\n        this.min = this.$store.state.legend.min\n        this.max = this.$store.state.legend.max\n        this.selectedRange = [ this.min, this.max ]\n      },\n      deep: true\n    }\n  },\n  computed: {\n    myFilteredGroups( ) {\n      let filteredGroups = {}\n      if ( !this.filterText || this.filterText === '' ) return this.myGroups\n      return this.myGroups.filter( gr => gr.name.toLowerCase( ).includes( this.filterText.toLowerCase( ) ) )\n    },\n    orphanGroup( ) {\n      let orphans = this.myGroups.find( gr => gr.name === \"Orphaned Objects\" )\n      return orphans\n      // return this.myGroups[ 0 ] ? this.myGroups[ 0 ] : null\n    },\n    keys( ) {\n      return this.$store.getters.objectPropertyKeys\n    },\n    allKeys( ) {\n      return [ ...this.$store.getters.objectPropertyKeys.allKeys, ...this.$store.getters.structuralKeys ]\n    },\n    structuralKeys( ) {\n      return this.$store.getters.structuralKeys\n    },\n    isTextProperty( ) {\n      return this.keys.stringKeys.indexOf( this.groupKey ) !== -1\n    },\n    legend( ) {\n      return this.$store.state.legend\n    }\n  },\n  data( ) {\n    return {\n      groupKey: null,\n      myGroups: [ ],\n      loading: false,\n      filterText: null,\n      selectedRange: [ 0, 1000 ],\n      rainbowColors: [ \"#9400D3\", \"#4B0082\", \"#0000FF\", \"#00FF00\", \"#FFFF00\", \"#FF7F00\", \"#FF0000\" ],\n      coolColors: [ \"#0A66FF\", \"#FF008A\" ],\n      init: false\n    }\n  },\n  methods: {\n    generateGroups( key ) {\n      this.myGroups = [ ]\n      this.loading = true\n\n      let groups = { orphans: { key: 'orphans', name: 'Orphaned Objects', objects: [ ], visible: true, isolated: false } }\n\n      if ( this.isTextProperty ) {\n\n        this.$store.state.objects.forEach( ( obj, index ) => {\n          let propValue = get( obj.properties, key )\n          if ( propValue ) {\n            // if we have the group already\n            if ( groups.hasOwnProperty( propValue ) ) {\n              groups[ propValue ].objects.push( obj._id )\n            } else {\n              groups[ propValue ] = {\n                key: key,\n                name: propValue,\n                objects: [ obj._id ],\n                visible: true,\n                isolated: false\n              }\n            }\n          } else {\n            groups.orphans.objects.push( obj._id )\n          }\n          if ( index === this.$store.state.objects.length - 1 ) {\n            this.loading = false\n          }\n        } )\n\n      }\n      Object.keys( groups ).forEach( key => this.myGroups.push( groups[ key ] ) )\n    },\n    filterProp( ) {\n      let objIds = [ ]\n\n      this.$store.state.objects.forEach( ( obj, index ) => {\n        let propValue = get( obj.properties, this.groupKey )\n        if ( propValue )\n          if ( propValue >= this.selectedRange[ 0 ] && propValue <= this.selectedRange[ 1 ] )\n            objIds.push( obj._id )\n\n\n        if ( index === this.$store.state.objects.length - 1 ) {\n          if ( this.myGroups[ 0 ] && this.myGroups[ 0 ].visible )\n            objIds = [ ...objIds, ...this.myGroups[ 0 ].objects ]\n\n          window.renderer.isolateObjects( objIds )\n          window.renderer.resetColors( { propagateLegend: false } )\n          window.renderer.colorByProperty( { propertyName: this.groupKey, propagateLegend: false, colors: this.coolColors } )\n        }\n      } )\n    },\n    toggleVisible( groupName ) {\n      let group = this.myGroups.find( gr => gr.name === groupName )\n      if ( group.visible ) {\n        window.renderer.hideObjects( group.objects )\n        group.visible = false\n      } else {\n        window.renderer.showObjects( group.objects )\n        group.visible = true\n      }\n    },\n    toggleIsolation( groupName ) {\n      let group = this.myGroups.find( gr => gr.name === groupName )\n      if ( group.isolated ) {\n        window.renderer.showObjects( [ ] )\n        group.isolated = false\n      } else {\n        group.visible = true\n        group.isolated = true\n        window.renderer.isolateObjects( group.objects )\n      }\n\n      this.myGroups.forEach( gr => {\n        if ( gr.name === groupName ) return\n        if ( group.isolated ) {\n          gr.isolated = false\n          gr.visible = false\n        } else {\n          gr.visible = true\n          window.renderer.showObjects( gr.objects )\n        }\n      } )\n    },\n\n  },\n  mounted( ) {\n    // console.log( 'mounted - object groups' )\n    // console.log( this.groupKeySeed )\n    // if ( this.groupKeySeed !== null ) {\n    //   this.groupKey = this.groupKeySeed\n    // }\n  },\n  activated( ) {\n    if ( this.groupKey ) {\n      this.appendInfoToUrl( \"groups\", { key: this.groupKey } )\n    }\n  }\n}\n\n</script>\n<style scoped lang='scss'>\n</style>\n"],"sourceRoot":"src/components"}]}