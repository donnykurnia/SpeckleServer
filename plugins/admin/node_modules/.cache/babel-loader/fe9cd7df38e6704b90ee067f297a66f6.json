{"remainingRequest":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/StreamCardSmall.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/src/components/StreamCardSmall.vue","mtime":1609071089414},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/donnykurnia/data/Projects/upwork/3dbyggeri/glasshouse/SpeckleServer/plugins/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'StreamCardSmall',\n  props: {\n    streamId: String,\n    removable: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    stream: function stream() {\n      var _this = this;\n\n      var stream = this.$store.state.streams.find(function (s) {\n        return s.streamId === _this.streamId;\n      });\n      if (!stream) this.$store.dispatch('getStream', {\n        streamId: this.streamId\n      });\n      return stream;\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  methods: {}\n};",{"version":3,"sources":["StreamCardSmall.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA,MADA;AAEA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAFA,GAFA;AASA,EAAA,QAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;;AACA,UAAA,MAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,QAAA,KAAA,KAAA,CAAA,QAAA;AAAA,OAAA,CAAA;AACA,UAAA,CAAA,MAAA,EAAA,KAAA,MAAA,CAAA,QAAA,CAAA,WAAA,EAAA;AAAA,QAAA,QAAA,EAAA,KAAA;AAAA,OAAA;AACA,aAAA,MAAA;AACA;AALA,GATA;AAgBA,EAAA,IAhBA,kBAgBA;AAAA,WAAA,EAAA;AAAA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AAjBA,CAAA","sourcesContent":["<template>\n  <md-card class='md-elevation-0' style='margin-bottom: 5px;' v-if='stream'>\n    <md-card-content class='md-layout md-gutter md-alignment-center-left'>\n      <div class=\"md-layout-item md-size-30\">\n        <router-link :to='\"/streams/\"+stream.streamId'>{{stream.name}}</router-link>\n      </div>\n      <div class=\"md-layout-item md-caption\">\n        <span v-if='stream.commitMessage'> {{stream.commitMessage}}</span>\n      </div>\n      <div class=\"md-layout-item md-caption text-right\">\n        {{stream.streamId}} | last update <strong><timeago :datetime='stream.updatedAt'></timeago></strong>\n      </div>\n      <div class=\"md-layout-item text-right\" v-if='removable'>\n        <md-button class='md-dense-xxx md-icon-button md-accent' @click.native='$emit(\"remove-stream\", streamId)'>\n          <md-icon>delete</md-icon>\n        </md-button>\n      </div>\n    </md-card-content>\n  </md-card>\n</template>\n<script>\nexport default {\n  name: 'StreamCardSmall',\n  props: {\n    streamId: String,\n    removable: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    stream( ) {\n      let stream = this.$store.state.streams.find( s => s.streamId === this.streamId )\n      if ( !stream ) this.$store.dispatch( 'getStream', { streamId: this.streamId } )\n      return stream\n    }\n  },\n  data( ) { return {} },\n  methods: {}\n}\n\n</script>\n<style scoped lang='scss'>\n</style>\n"],"sourceRoot":"src/components"}]}